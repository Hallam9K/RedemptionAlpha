<?xml version="1.0"?>
<doc>
    <assembly>
        <name>tModLoader</name>
    </assembly>
    <members>
        <member name="T:Terraria.Audio.GStreamerAudioSupport">
            <summary>
            We require a WMAUDIO2/wmav2 decoder to read the windows wavebank. FFMPEG has the only one available to us.
            GStreamer replaces FFMPEG support in the latest FAudio releases.
            Unfortunately GStreamer just ends up using FFMPEG as a backend to the gstlibav.dll plugin anyway
            Slimming the FFMPEG for GStreamer would _probably_ require rebuilding the gstlibav plugin, or writing our own.
            
            If we ever need GStreamer support for FAudio in the future... add the following directory structure to Libraries/Native/Windows
            gstreamer
            │   avcodec-58.dll
            │   avfilter-7.dll
            │   avformat-58.dll
            │   avutil-56.dll
            │   bz2.dll
            │   ffi-7.dll
            │   glib-2.0-0.dll
            │   gmodule-2.0-0.dll
            │   gobject-2.0-0.dll
            │   gstapp-1.0-0.dll
            │   gstaudio-1.0-0.dll
            │   gstbase-1.0-0.dll
            │   gstpbutils-1.0-0.dll
            │   gstreamer-1.0-0.dll
            │   gsttag-1.0-0.dll
            │   gstvideo-1.0-0.dll
            │   intl-8.dll
            │   libwinpthread-1.dll
            │   orc-0.4-0.dll
            │   swresample-3.dll
            │   z-1.dll
            │
            └───plugins
                    gstapp.dll
                    gstaudioconvert.dll
                    gstaudioresample.dll
                    gstcoreelements.dll
                    gstlibav.dll
                    gstplayback.dll
            </summary>
        </member>
        <member name="M:Terraria.Audio.GStreamerAudioSupport.Init">
            <summary>
            Call this before loading the FAudio dll
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.BossBarDrawParams">
            <summary>
            Holds data required for boss bar drawing.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.barTexture">
            <summary>
            The texture with fixed dimensions (516x348) containing all the necessary parts.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.barCenter">
            <summary>
            The screen position of the center of the bar.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.iconTexture">
            <summary>
            The displayed icon texture.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.iconFrame">
            <summary>
            The icon textures frame.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.iconColor">
            <summary>
            The tint of the icon.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.lifePercentToShow">
            <summary>
            The % the bar should be filled with.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.shieldPercentToShow">
            <summary>
            The % the shield bar should be filled with. Defaults to 0f (no shield drawn).
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.iconScale">
            <summary>
            The scale the icon is drawn with. Defaults to 1f, modify if icon is bigger or smaller than 26x28.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.TorsoGroup">
            <summary> Adds <see cref="F:Terraria.DataStructures.PlayerDrawSet.torsoOffset"/> to <see cref="F:Terraria.DataStructures.PlayerDrawSet.Position"/> and <see cref="F:Terraria.DataStructures.PlayerDrawSet.ItemLocation"/> vectors' Y axes. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.MountGroup">
            <summary> Adds <see cref="F:Terraria.DataStructures.PlayerDrawSet.mountOffSet"/>/2 to <see cref="F:Terraria.DataStructures.PlayerDrawSet.Position"/> vector's Y axis. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.JimsCloak">
            <summary> Draws Jim's Cloak, if the player is wearing Jim's Leggings (a developer item). </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.MountBack">
            <summary> Draws the back textures of the player's mount. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Carpet">
            <summary> Draws the Flying Carpet accessory, if the player has it equipped and is using it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.PortableStool">
            <summary> Draws the Step Stool accessory, if the player has it equipped and is using it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ElectrifiedDebuffBack">
            <summary> Draws the back textures of the Electrified debuff, if the player has it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ForbiddenSetRing">
            <summary> Draws the 'Forbidden Sign' if the player has a full 'Forbidden Armor' set equipped. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.SafemanSun">
            <summary> Draws a sun above the player's head if they have "Safeman's Sunny Day" headgear equipped. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.WebbedDebuffBack">
            <summary> Draws the back textures of the Webbed debuff, if the player has it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.LeinforsHairShampoo">
            <summary> Draws effects of "Leinfors' Luxury Shampoo", if the player has it equipped. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Backpacks">
            <summary> Draws the player's held item's backpack. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Tails">
            <summary> Draws the player's tails vanities. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Wings">
            <summary> Draws the player's wings. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.HairBack">
            <summary> Draws the player's under-headgear hair. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.BackAcc">
            <summary> Draws the player's back accessories. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.HeadBack">
            <summary> Draws the back textures of the player's head, including armor. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.BalloonAcc">
            <summary> Draws the player's balloon accessory, if they have one. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Skin">
            <summary> Draws the player's body and leg skin. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Leggings">
            <summary> Draws the player's leg armor or pants and shoes. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Shoes">
            <summary> Draws the player's shoes. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Robe">
            <summary> Draws the player's robe. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.SkinLongCoat">
            <summary> Draws the longcoat default clothing style, if the player has it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ArmorLongCoat">
            <summary> Draws the currently equipped armor's longcoat, if it has one. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Torso">
            <summary> Draws the player's body armor or shirts. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.OffhandAcc">
            <summary> Draws the player's off-hand accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.WaistAcc">
            <summary> Draws the player's waist accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.NeckAcc">
            <summary> Draws the player's neck accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Head">
            <summary> Draws the player's head, including hair, armor, and etc. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.FaceAcc">
            <summary> Draws the player's face accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.MountFront">
            <summary> Draws the front textures of the player's mount. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Pulley">
            <summary> Draws the pulley if the player is hanging on a rope. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.FrontAccBack">
            <summary> Draws the back part of player's front accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Shield">
            <summary> Draws the player's shield accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.SolarShield">
            <summary> Draws the player's solar shield if the player has one. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ArmOverItem">
            <summary> Draws the player's main arm (including the armor's if applicable), when it should appear over the held item. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.HandOnAcc">
            <summary> Draws the player's hand on accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.BladedGlove">
            <summary> Draws the Bladed Glove item, if the player is currently using it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ProjectileOverArm">
            <summary> Draws the player's held projectile, if it should be drawn in front of the held item and arms. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.FrozenOrWebbedDebuff">
            <summary> Draws the front textures of either Frozen or Webbed debuffs, if the player has one of them. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ElectrifiedDebuffFront">
            <summary> Draws the front textures of the Electrified debuff, if the player has it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.IceBarrier">
            <summary> Draws the textures of the Ice Barrier buff, if the player has it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.CaptureTheGem">
            <summary> Draws a big gem above the player, if the player is currently in possession of a 'Capture The Gem' gem item. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.BeetleBuff">
            <summary> Draws the effects of Beetle Armor's Set buffs, if the player currently has any. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.FrontAccFront">
            <summary> Draws the front part of player's front accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.HeldItem">
            <summary> Draws the player's held item. </summary>
        </member>
        <member name="M:Terraria.DataStructures.TileEntitiesManager.GetTileEntity``1(System.Int32)">
            <summary> Gets the base ModTileEntity object with the given id. This method will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:Terraria.DataStructures.TileEntitiesManager.TryGetTileEntity``1(System.Int32,``0@)">
            <summary> Attempts to get the base ModTileEntity object with the given id. </summary>
        </member>
        <member name="M:Terraria.DataStructures.TileEntity.Save">
            <summary>
            Allows you to save custom data for this tile entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.DataStructures.TileEntity.Load(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load the custom data you have saved for this tile entity.
            </summary>
        </member>
        <member name="M:Terraria.DataStructures.TileEntity.NetSend(System.IO.BinaryWriter)">
            <summary>
            Allows you to send custom data for this tile entity between client and server. This is called on the server while sending tile data (!lightSend) and when a MessageID.TileEntitySharing message is sent (lightSend)
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Terraria.DataStructures.TileEntity.NetReceive(System.IO.BinaryReader)">
            <summary>
            Receives the data sent in the NetSend hook. Called on MP Client when receiving tile data (!lightReceive) and when a MessageID.TileEntitySharing message is sent (lightReceive)
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="T:Terraria.DataStructures.VanillaPlayerDrawLayer.DrawFunc">
            <summary> The delegate of this method, which can either do the actual drawing or add draw data, depending on what kind of layer this is. </summary>
        </member>
        <member name="T:Terraria.DataStructures.VanillaPlayerDrawLayer.Condition">
            <summary> The delegate of this method, which can either do the actual drawing or add draw data, depending on what kind of layer this is. </summary>
        </member>
        <member name="M:Terraria.DataStructures.VanillaPlayerDrawLayer.#ctor(System.String,Terraria.DataStructures.VanillaPlayerDrawLayer.DrawFunc,Terraria.ModLoader.PlayerDrawLayer.Transformation,System.Boolean,Terraria.DataStructures.VanillaPlayerDrawLayer.Condition,Terraria.ModLoader.PlayerDrawLayer.Position)">
            <summary> Creates a LegacyPlayerLayer with the given mod name, identifier name, and drawing action. </summary>
        </member>
        <member name="T:Terraria.DataStructures.VanillaPlayerDrawTransform.LayerFunction">
            <summary> The delegate of this method, which can either do the actual drawing or add draw data, depending on what kind of layer this is. </summary>
        </member>
        <member name="M:Terraria.DataStructures.VanillaPlayerDrawTransform.#ctor(Terraria.DataStructures.VanillaPlayerDrawTransform.LayerFunction,Terraria.DataStructures.VanillaPlayerDrawTransform.LayerFunction,Terraria.ModLoader.PlayerDrawLayer.Transformation)">
            <summary> Creates a LegacyPlayerLayer with the given mod name, identifier name, and drawing action. </summary>
        </member>
        <member name="M:Terraria.GameContent.Bestiary.BestiaryDatabase.GetBestiaryEntriesByMod(Terraria.ModLoader.Mod)">
            <summary>
            Gets entries from the database created by the mod specified
            </summary>
            <param name="mod">The mod to find entries from (null for Terraria)</param>
            <returns>A list of the entries created by the mod specified or null if it created none</returns>
        </member>
        <member name="M:Terraria.GameContent.Bestiary.BestiaryDatabase.GetCompletedPercentByMod(Terraria.ModLoader.Mod)">
            <summary>
            Gets the completed percent of the given mod's bestiary
            </summary>
            <param name="mod">The mod to calculate bestiary completeness (null for Terraria)</param>
            <returns>A float ranging from 0 to 1 representing the completeness of the bestiary or returns -1 if the mod has no entries</returns>
        </member>
        <member name="M:Terraria.GameContent.UI.BigProgressBar.BigProgressBarSystem.TryGetSpecialVanillaBossBar(System.Int32,Terraria.GameContent.UI.BigProgressBar.IBigProgressBar@)">
            <summary>
            Gets the special IBigProgressBar associated with this vanilla NPCs netID (usually the type).
            <para> Reminder: If no special bar exists or NPC.BossBar is not assigned, any NPC with a boss head index will automatically display a common boss bar shared among all simple bosses.</para>
            </summary>
            <param name="netID">The NPC netID (usually the type)</param>
            <param name="bossBar">When this method returns, contains the IBigProgressBar associated with the specified NPC netID</param>
            <returns><see langword="true"/> if IBigProgressBar exists; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Terraria.GameInput.PlayerInput.LockVanillaMouseScroll(System.String)">
            <summary>
            Locks the vanilla scrollbar for the upcoming cycle when called. Autoclears in Player.
            Takes a string to denote that your UI has registered to lock vanilla scrolling. String does not need to be unique.
            </summary>
        </member>
        <member name="T:Terraria.ID.ItemRarityID">
            <summary>Enumerates the values used with Item.rare</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Master">
            <summary>Minus thirteen (-13)<para/>Master: Fiery Red<para/>Flag: item.master</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Expert">
            <summary>Minus twelve (-12)<para/>Expert: Rainbow<para/>Flag: item.expert</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Quest">
            <summary>Minus eleven (-11)<para/>Quest: Amber<para/>Flag: item.quest</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Gray">
            <summary>Minus one (-1)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.White">
            <summary>Zero (0)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Blue">
            <summary>One (1)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Green">
            <summary>Two (2)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Orange">
            <summary>Three (3)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.LightRed">
            <summary>Four (4)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Pink">
            <summary>Five (5)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.LightPurple">
            <summary>Six (6)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Lime">
            <summary>Seven (7)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Yellow">
            <summary>Eight (8)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Cyan">
            <summary>Nine (9)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Red">
            <summary>Ten (10)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Purple">
            <summary>Eleven (11)</summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Flying">
            <summary>
            Includes things such as Eaters of Souls
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Passive">
            <summary>
            Includes Town NPCs and some ambient creatures, only Town NPCs will have defense with this AI, due to type-based hardcode
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.SpikeBall">
            <summary>
            For the spike balls in the dungoen, not the projectile
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.HoveringFighter">
            <summary>
            Includes enemies such as Wraiths or Ghosts
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.EnchantedSword">
            <summary>
            Includes Shadow Hammer and Crimson Axe
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.GiantTortoise">
            <summary>
            Also includes Srollers and Giant Shellies
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Spider">
            <summary>
            Used for the wall climbing varieants of spiders, the ground variant is <see cref="F:Terraria.ID.NPCAIStyleID.Fighter"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.LostGirl">
            <summary>
            Only used for the Lost Girl, nymphs use <see cref="F:Terraria.ID.NPCAIStyleID.Fighter"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.FlyingFish">
            <summary>
            Also used for Antlion Swarmers
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.GolemHead">
            <summary>
            Only used for the unmoving golem head, the moving one is <see cref="F:Terraria.ID.NPCAIStyleID.FreeGolemHead"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Creeper">
            <summary>
            For the Brain of Cthulhu's minions
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.MourningWood">
            <summary>
            Includes Everscream
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Rider">
            <summary>
            Includes Drakomire Rider, Dutchman Cannon, Martian Saucer,
            Martian Saucer Cannon, Martian Saucer Turret, and Scutlix Gunner
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.StarCell">
            <summary>
            Includes Brain Sucklers and Deadly Spheres
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Unused0">
            <summary>
            Stays in place and shoots
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.SolarFragment">
            <summary>
            The fireball-like "projectiles" shot by the solar pillar
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Unknown1">
            <summary>
            Instantly despawns
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DD2Fighter">
            <summary>
            Used for things such as Etherian Goblins
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DD2Flying">
            <summary>
            Used for things such as Etherian Wyverns
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Arrow">
            <summary>
            Includes Bullets and Lasers
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ThrownProjectile">
            <summary>
            Includes Shurikens, Bones, and Knives
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Bounce">
            <summary>
            Includes the Flower of Fire, Waterbolt, Cursed Flame, and Meowmere projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MagicMissile">
            <summary>
            Includes Flame Lash and Magic Missile
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FloatingFollow">
            <summary>
            Includes Shadow Orb and Fairy pets
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Stream">
            <summary>
            Includes Aqua Scepter and Golden Shower projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.GroundProjectile">
            <summary>
            Includes most non-destructive Explosive, Glowstick, and Spike Ball projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Drill">
            <summary>
            Includes Saws
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Flames">
            <summary>
            Includes Flamethrower Flames, Cursed Flames, and Eye Fire
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Pet">
            <summary>
            Includes some minions with simple AI, such as the Baby Slime
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ColdBolt">
            <summary>
            Includes Ice Sword, Frost Hydra, Frost Bolt, and Icy Spit projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SmallFlying">
            <summary>
            Includes Bee, Wasp, Tiny Eater, and Bat projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MoveShort">
            <summary>
            Moves a short distance and then stops, includes Spore Cloud, Chlorophyte Orb, and Storm Spear Shot projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Heal">
            <summary>
            Includes Spirit Heal from the Spectre Hood and Vampire Heal from the Vampire Knives
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Nado">
            <summary>
            Includes Sharknado and Cthulunado projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.CommonFollow">
            <summary>
            Includes Mini Pirate, Crimson Heart, Companion Cube, Vampire Frog, and Desert Tiger projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ThickLaser">
            <summary>
            Includes Charged Laser Blaster, Stardust Laser, Last Prism, and Lunar Portal Laser projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.HorizontalRay">
            <summary>
            Includes Medusa Head Ray and Mechanical Cart Laser projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.LunarProjectile">
            <summary>
            Includes Flow Invader, Nebular Piercer, and Nebula Eye projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.NebulaSphere">
            <summary>
            Includes Desert Sprit's Curse
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Vortex">
            <summary>
            Includes Blood Tears
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SmallProximityExplosion">
            <summary>
            Includes Truffle Spore, Rainbow Crystal Explosion, and Dandelion Seed projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.StickProjectile">
            <summary>
            Includes Bone Javelin, Stardust Cell Shot, and Daybreak projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SolarEffect">
            <summary>
            Includes Solar Radience and Solar Eruption Explosion projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ReleasedEnergy">
            <summary>
            The effect displayed when killing a Lunar Event enemy while it's respective Celestial Pillar is alive, also used by Phantasm Arrow
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FloatInFrontPet">
            <summary>
            Includes Suspicious Looking Tentacle, Suspicious Eye, Rez and Spaz, Fairy Princess, Jack 'O Lantern, and Ice Queen pets
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2GrimEnd">
            <summary>
            Eternia Crystal destroyed
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.UpwardExpand">
            <summary>
            Includes Ogre's Stomp and Geyser projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.PoleSmash">
            <summary>
            The effect created on use of the Sleepy Octopod
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ForwardStab">
            <summary>
            Use style of the Ghastly Glaive and Sky Dragon's Fury alt1
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FloatBehindPet">
            <summary>
            Includes the Hoardragon, Flickerwick, Estee, and Propeller Gato
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2Victory">
            <summary>
            Old One's Army defeated
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Terraprisma">
            <summary>
            Includes the Sanguine Bat
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ReleasedProjectile">
            <summary>
            Includes Dove and Lantern projectiles
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FairyGlowStick">
            <summary>
            Only used when the Fairy GlowSticks's ai[1] is greater than 0
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FloatAndFly">
            <summary>
            Includes the Prismatic Bolt and Nightglow projectiles, these float for a second and then fly toward their target
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Reaping">
            <summary>
            The effect displayed when an enemy is hit with the Dark Harvest whip
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.TorchGod">
            <summary>
            The Torch God event, not the projectiles fired out of the torches
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.DisableSmartCursor">
            <summary> Whether or not the smart cursor function is disabled when the cursor hovers above this tile. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.DisableSmartInteract">
            <summary> Whether or not the smart tile interaction function is disabled when the cursor hovers above this tile. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.IsValidSpawnPoint">
            <summary> Whether or not this tile is a valid spawn point. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.Torch">
            <summary> Whether or not this tile behaves like a torch. If you are making a torch tile, then setting this to true is necessary in order for tile placement, tile framing, and the item's smart selection to work properly. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.Clock">
            <summary> Whether or not this tile is a clock. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.TreeSapling">
            <summary> Whether or not this tile is a sapling, which can grow into a tree based on the soil it's placed on. Be sure to set <see cref="F:Terraria.ID.TileID.Sets.CommonSapling"/> with this too. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CountsAsWaterSource">
            <summary> Whether or not this tile counts as a water source for crafting purposes. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CountsAsHoneySource">
            <summary> Whether or not this tile counts as a honey source for crafting purposes. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CountsAsLavaSource">
            <summary> Whether or not this tile counts as a lava source for crafting purposes. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.IgnoredByGrowingSaplings">
            <summary> Whether or not saplings count this tile as empty when trying to grow. </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Terraria.Item.DamageType" -->
        <member name="M:Terraria.Item.GetGlobalItem``1(System.Boolean)">
            <summary> Gets the instance of the specified GlobalItem type. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.IndexOutOfRangeException"/>
        </member>
        <member name="M:Terraria.Item.GetGlobalItem``1(``0)">
            <summary> Gets the local instance of the type of the specified GlobalItem instance. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.NullReferenceException"/>
        </member>
        <member name="M:Terraria.Item.TryGetGlobalItem``1(``0@,System.Boolean)">
            <summary> Gets the instance of the specified GlobalItem type. </summary>
        </member>
        <member name="M:Terraria.Item.TryGetGlobalItem``1(``0,``0@)">
            <summary> Safely attempts to get the local instance of the type of the specified GlobalItem instance. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="T:Terraria.ModLoader.AutoloadAttribute">
            <summary>
            Allows for types to be autoloaded and unloaded.
            True to always autoload, false to never autoload, null to use mod default.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.BackgroundTextureLoader">
            <summary>
            This is the class that keeps track of all modded background textures and their slots/IDs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackgroundTextureLoader.GetBackgroundSlot(System.String)">
            <summary> Returns the slot/ID of the background texture with the given name. Throws exceptions on failure. </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackgroundTextureLoader.TryGetBackgroundSlot(System.String,System.Int32@)">
            <summary> Safely attempts to output the slot/ID of the background texture with the given name. </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackgroundTextureLoader.AddBackgroundTexture(Terraria.ModLoader.Mod,System.String)">
            <summary>
            Adds a texture to the list of background textures and assigns it a background texture slot.
            </summary>
            <param name="texture">The texture.</param>
        </member>
        <member name="T:Terraria.ModLoader.UndergroundBackgroundStylesLoader">
            <summary>
            This serves as the central class from which ModUndergroundBackgroundStyle functions are supported and carried out.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.BossBarLoader.drawingInfo">
            <summary>
            Set to the current info that is being drawn just before any registered bar draws through the vanilla system (modded and vanilla), reset in the method used to draw it.
            <para>Allows tML to shortcirquit the draw method and make ModBossBar and GlobalBossBar modify the draw parameters. Is null if a ModBossBarStyle skips drawing</para>
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.BossBarLoader.styleLoading">
            <summary>
            Used to prevent switching to the default style while the mods are loading (The code responsible for it runs in the main menu too)
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.BossBarLoader.lastSelectedStyle">
            <summary>
            The string that is saved in the config
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.BossBarLoader.bossBarTextures">
            <summary>
            Only contains textures that exist.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.SwitchBossBarStyle(Terraria.ModLoader.ModBossBarStyle)">
            <summary>
            Sets the pending style that should be switched to
            </summary>
            <param name="bossBarStyle">Pending boss bar style</param>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.GotoSavedStyle">
            <summary>
            Sets the saved style that should be switched to, handles possibly unloaded/invalid ones and defaults to the vanilla style
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.HandleStyle">
            <summary>
            Checks if the style was changed and applies it, saves the config if required
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.GetTexture(Terraria.ModLoader.ModBossBar)">
            <summary>
            Returns the texture that the given bar is using. If it does not have a custom one, it returns the vanilla texture
            </summary>
            <param name="bossBar">The ModBossBar</param>
            <returns>Its texture, or the vanilla texture</returns>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.NpcToBossBar(Terraria.NPC,Terraria.ModLoader.ModBossBar@)">
            <summary>
            Gets the ModBossBar associated with this NPC
            </summary>
            <param name="npc">The NPC</param>
            <param name="value">When this method returns, contains the ModBossBar associated with the specified NPC</param>
            <returns><see langword="true"/> if a ModBossBar is assigned to it; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.InsertMenu(System.Action@)">
            <summary>
            Inserts the boss bar style select option into the main and ingame menu under the "Interface" category
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.DrawFancyBar_TML(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.DataStructures.BossBarDrawParams)">
            <summary>
            Draws a healthbar with fixed barTexture dimensions (516x348) where the effective bar top left starts at 32x24, and is 456x22 big
            <para>The icon top left starts at 4x20, and is 26x28 big</para>
            <para>Frame 0 contains the frame (outline)</para>
            <para>Frame 1 contains the 2 pixel wide strip for the tip of the bar itself</para>
            <para>Frame 2 contains the 2 pixel wide strip for the bar itself, stretches out</para>
            <para>Frame 3 contains the background</para>
            <para>Frame 4 contains the 2 pixel wide strip for the tip of the bar itself (optional shield)</para>
            <para>Frame 5 contains the 2 pixel wide strip for the bar itself, stretches out (optional shield)</para>
            <para>Supply your own textures if you need a different shape/color, otherwise you can make your own method to draw it</para>
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="drawParams">The draw parameters for the boss bar</param>
        </member>
        <member name="T:Terraria.ModLoader.BuffLoader">
            <summary>
            This serves as the central class from which buff-related functions are supported and carried out.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BuffLoader.GetBuff(System.Int32)">
            <summary>
            Gets the ModBuff instance with the given type. If no ModBuff with the given type exists, returns null.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.BuildInfo.BuildDate">
            <summary>
            local time, for display purposes
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.CommandLoader">
            <summary>
            This serves as the central class from which ModCommand functions are supported and carried out.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.CommandLoader.GetCommand(Terraria.ModLoader.CommandCaller,System.String,Terraria.ModLoader.ModCommand@)">
            <summary>
            Finds a command by name. Handles mod prefixing. Replies with error messages.
            </summary>
            <param name="mc">The found command, or null if an error was encountered.</param>
            <returns>True if a ModCommand was found, or an error message was replied. False if the command is unrecognized.</returns>
        </member>
        <member name="T:Terraria.ModLoader.Config.BackgroundColorAttribute">
            <summary>
            Specifies a background color to be used for the property, field, or class in the ModConfig UI. 
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.SliderColorAttribute">
            <summary>
            Specifies a slider color for ModConfig elements that use a slider. The default color is white.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ReloadRequiredAttribute">
            <summary>
            This attribute hints that changing the value of the annotated property or field will put the config in a state that requires a reload. An overridden ModConfig.NeedsReload can further validate if more complex logic is needed.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.LabelAttribute">
            <summary>
            This attribute sets a label for the property, field, or class for use in the ModConfig UI. 
            Starting the label with $ means the label should be interpreted as a Localization key.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.TooltipAttribute">
            <summary>
            This attribute sets a hover tooltip for the annotated property or field to be shown in the ModConfig UI. This can be longer and more descriptive than Label.
            Starting the tooltip with $ means the tooltip should be interpreted as a Localization key.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.HeaderAttribute">
            <summary>
            This attribute adds a label above this property or field in the ModConfig UI that acts as a header. Use this to delineate sections within your config.
            Note that fields will be in order, and properties will be in order, but fields and properties will not be interleaved together in the source code order.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.CustomModConfigItemAttribute">
            <summary>
            Use this attribute to specify a custom UI element to be used for the annotated property, field, or class in the ModConfig UI. 
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.JsonDefaultValueAttribute">
            <summary>
            Similar to DefaultValueAttribute but for reference types. It uses a json string that will be used populate this element when initialized. Defines the default value, expressed as json, to be used to populate an object with the NullAllowed attribute. Modders should only use this in conjuction with NullAllowed, as simply initializing the field with a default value is preferred.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.DefaultListValueAttribute">
            <summary>
            Defines the default value to be added when using the ModConfig UI to add elements to a Collection (List, Set, or Dictionary value). Works the same as System.ComponentModel.DefaultValueAttribute, but can't inherit from it because it would break when deserializing any data structure annotated with it.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.DefaultDictionaryKeyValueAttribute">
            <summary>
            Defines the default key value to be added when using the ModConfig UI to add elements to a Dictionary. Works the same as System.ComponentModel.DefaultValueAttribute, but can't inherit from it because it would break when deserializing any data structure annotated with it. This attribute compliments DefaultListValueAttribute when used annotating a Dictionary.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.JsonDefaultListValueAttribute">
            <summary>
            Similar to DefaultListValueAttribute but for reference types. It uses a json string that will be used populate new instances list elements. Defines the default value, expressed as json, to be added when using the ModConfig UI to add elements to a Collection (List, Set, or Dictionary value).
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.JsonDefaultDictionaryKeyValueAttribute">
            <summary>
            Similar to JsonDefaultListValueAttribute, but for assigning to the Dictionary Key rather than the Value.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.OptionStringsAttribute">
            <summary>
            By default, string fields will provide the user with a text input field. Use this attribute to restrict strings to a selection of options.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.IncrementAttribute">
            <summary>
            Use this to set an increment for sliders. The slider will move by the amount assigned. Remember that this is just a UI suggestion and manual editing of config files can specify other values, so validate your values.
            Defaults are: float: 0.01f - byte/int/uint: 1
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.RangeAttribute">
            <summary>
            Specifies a range for primitive data values. Without this, default min and max are as follows: float: 0, 1 - int/uint: 0, 100 - byte: 0, 255
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.SliderAttribute">
            <summary>
            Affects whether this data will be presented as a slider of an input field. Add this attribute to use a slider. Currently only affects data of type int.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.DrawTicksAttribute">
            <summary>
            Add this attribute and the sliders will show white tick marks at each increment.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ColorNoAlphaAttribute">
            <summary>
            Add this attribute to a Color item and Alpha will not be presented in the UI and will remain as 255 unless manually edited.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ColorHSLSliderAttribute">
            <summary>
            Add this attribute to a Color item and the UI will present a Hue, Saturation, and Lightness sliders rather than Red, Green, and Blue sliders. Pass in false to skip Saturation and Lightness.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.SeparatePageAttribute">
            <summary>
            This specifies that the annotated item will appear as a button that leads to a separate page in the UI. Use this to organize hierarchies.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.NullAllowedAttribute">
            <summary>
            This attribute means the annotated item can possibly be null. This will allow the UI to make the item null. It is up to the modder to make sure the item isn't null in the ModConfig constructor and nested classes.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ReferenceDefaultsPreservingResolver">
            <summary>
            Custom ContractResolver for facilitating refernce type defaults. 
            The ShouldSerialize code enables unchanged-by-user reference type defaults to properly not serialize. 
            The ValueProvider code helps during deserialization to not 
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.EntityDefinition">
            <summary>
            Classes implementing EntityDefinition serve to function as a way to save and load the identities of various Terraria objects. Only the identity is preserved, no other data such as stack size, damage, etc. These classes are well suited for ModConfig, but can be saved and loaded in a TagCompound as well. 
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ItemDefinition">
            <summary>
            ItemDefinition represents an Item identity. A typical use for this class is usage in ModConfig, perhapse to facilitate an Item tweaking mod.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ToFromStringConverter`1">
            <summary>
            This TypeConverter facilitates converting to and from the string Type. This is necessary for Objects that are to be used as Dictionary keys, since the JSON for keys needs to be a string. Classes annotated with this TypeConverter need to implement a static FromString method that returns T.
            </summary>
            <typeparam name="T">The Type that implementes the static FromString method that returns Type T.</typeparam>
        </member>
        <member name="T:Terraria.ModLoader.Config.ModConfig">
            <summary>
            ModConfig provides a way for mods to be configurable. ModConfigs can either be Client specific or Server specific. 
            When joining a MP server, Client configs are kept but Server configs are synced from the server.
            Using serialization attributes such as [DefaultValue(5)] or [JsonIgnore] are critical for proper usage of ModConfig.
            tModLoader also provides its own attributes such as ReloadRequiredAttribute and LabelAttribute. 
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Config.ModConfig.OnLoaded">
            <summary>
            This method is called when the ModConfig has been loaded for the first time. This happens before regular Autoloading and Mod.Load. You can use this hook to assign a static reference to this instance for easy access.
            tModLoader will automatically assign (and later unload) this instance to a static field named Instance in the class prior to calling this method, if it exists.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Config.ModConfig.OnChanged">
            <summary>
            This hook is called anytime new config values have been set and are ready to take effect. This will always be called right after OnLoaded and anytime new configuration values are ready to be used. The hook won't be called with values that violate NeedsReload. Use this hook to integrate with other code in your Mod to apply the effects of the configuration values. If your NeedsReload is correctly implemented, you should be able to apply the settings without error in this hook. Be aware that this hook can be called in-game and in the main menu, as well as in single player and multiplayer situations. 
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Config.ModConfig.AcceptClientChanges(Terraria.ModLoader.Config.ModConfig,System.Int32,System.String@)">
            <summary>
            Called on the Server for ServerSide configs to determine if the changes asked for by the Client will be accepted. Useful for enforcing permissions. Called after a check for NeedsReload.
            </summary>
            <param name="pendingConfig">An instance of the ModConfig with the attempted changes</param>
            <param name="whoAmI">The client whoAmI</param>
            <param name="message">A message that will be returned to the client, set this to the reason the server rejects the changes.</param>
            <returns>Return false to reject client changes</returns>
        </member>
        <member name="M:Terraria.ModLoader.Config.ModConfig.Clone">
            <summary>
            tModLoader will call Clone on ModConfig to facilitate proper implementation of the ModConfig user interface and detecting when a reload is required. Modders need to override this method if their config contains reference types. Failure to do so will lead to bugs. See ModConfigShowcaseDataTypes.Clone for examples and explanations. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Config.ModConfig.NeedsReload(Terraria.ModLoader.Config.ModConfig)">
            <summary>
            Whether or not a reload is required. The default implementation compares properties and fields annotated with the ReloadRequiredAttribute. Unlike the other ModConfig hooks, this method is called on a clone of the ModConfig that was saved during mod loading. The pendingConfig has values that are about to take effect. Neither of these instances necessarily match the instance used in OnLoaded.
            </summary>
            <param name="pendingConfig">The other instance of ModConfig to compare against, it contains the values that are pending to take effect</param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.Config.ConfigScope">
            <summary>
            Each ModConfig class has a different scope. Failure to use the correct mode will lead to bugs.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.Config.ConfigScope.ServerSide">
            <summary>
            This config is shared between all clients and maintained by the server. Use this for game-play changes that should affect all players the same. ServerSide also covers single player as well.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.Config.ConfigScope.ClientSide">
            <summary>
            This config is specific to the client. Use this for personalization options. 
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Config.UI.ConfigElement.Bind(Terraria.ModLoader.Config.UI.PropertyFieldWrapper,System.Object,System.Collections.IList,System.Int32)">
            <summary>
            Bind must always be called after the ctor and serves to facilitate a convenient inheritance workflow for custom ConfigElemets from mods. 
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModTree">
            <summary>
            This class represents a type of modded tree. The tree will share a tile ID with the vanilla trees (5), so that the trees can freely convert between each other if the soil below is converted. This class encapsulates several functions that distinguish each type of tree from each other. Use ModTile.SetModTree or GlobalTile.AddModTree to make a tile able to grow this kind of tree.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.CreateDust">
            <summary>
            Return the type of dust created when this tree is destroyed. Returns 7 by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.GrowthFXGore">
            <summary>
            Return the type of gore created to represent leaves when this tree grows on-screen. Returns -1 by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.CanDropAcorn">
            <summary>
            Whether or not this tree can drop acorns. Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.DropWood">
            <summary>
            The ID of the item that is dropped in bulk when this tree is destroyed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.GetTexture">
            <summary>
            Return the texture that represents the tile sheet used for drawing this tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.GetTopTextures(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Return the texture containing the possible tree tops that can be drawn above this tree.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="frame"></param>
            <param name="frameWidth"></param>
            <param name="frameHeight"></param>
            <param name="xOffsetLeft"></param>
            <param name="yOffset"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.GetBranchTextures(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Return the texture containing the possible tree branches that can be drawn next to this tree. The trunkOffset parameter can be added to i to get the x-coordinate of the tree's trunk.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="trunkOffset"></param>
            <param name="frame"></param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.ModPalmTree">
            <summary>
            This class represents a type of modded palm tree. The palm tree will share a tile ID with the vanilla palm trees (323), so that the trees can freely convert between each other if the sand below is converted. This class encapsulates several functions that distinguish each type of palm tree from each other. Use ModTile.SetModPalmTree or GlobalTile.AddModPalmTree to make a tile able to grow this kind of palm tree.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.CreateDust">
            <summary>
            Return the type of dust created when this palm tree is destroyed. Returns 215 by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.GrowthFXGore">
            <summary>
            Return the type of gore created to represent leaves when this palm tree grows on-screen. Returns -1 by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.DropWood">
            <summary>
            The ID of the item that is dropped in bulk when this palm tree is destroyed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.GetTexture">
            <summary>
            Return the texture that represents the tile sheet used for drawing this palm tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.GetTopTextures">
            <summary>
            Return the texture containing the possible tree tops that can be drawn above this palm tree.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.ModCactus">
            <summary>
            This class represents a type of modded cactus. The cactus will share a tile ID with the vanilla cacti (80), so that the cacti can freely convert between each other if the sand below is converted. This class encapsulates a function for retrieving the cactus's texture, the only difference between each type of cactus. Use ModTile.SetModCactus or GlobalTile.AddModCactus to make a tile able to grow this kind of cactus.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModCactus.GetTexture">
            <summary>
            Return the texture that represents the tile sheet used for drawing this cactus.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Core.LoaderUtils.ResetStaticMembers(System.Type,System.Boolean)">
            <summary> Calls static constructors on the provided type and, optionally, its nested types. </summary>
        </member>
        <member name="T:Terraria.ModLoader.Core.LogArchiver">
            <summary>
            Log archiving is performed after log initialization in a separate class to avoid loading Ionic.Zip before logging initialises and it can be patched
            Some CLRs will load all required assemblies when the class is entered, not necessarily just the method, so you've got to watch out
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.LogArchiver.ArchiveLogs">
            <summary>
            Attempt archiving logs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.LoggingHooks.HookWebRequests">
            <summary>
            Attempt to hook the .NET internal methods to log when requests are sent to web addresses.
            Use the right internal methods to capture redirects
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.ModCompile.RoslynCompile(System.String,System.Collections.Generic.List{System.String},System.String[],System.String[],System.Boolean,System.Byte[]@,System.Byte[]@)">
            <summary>
            Compile a dll for the mod based on required includes.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Core.ModOrganizer">
            <summary>
            Responsible for sorting, dependency verification and organizing which mods to load
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.TmodFile.AddFile(System.String,System.Byte[])">
            <summary>
            Adds a (fileName -> content) entry to the compressed payload
            This method is not threadsafe with reads, but is threadsafe with multiple concurrent AddFile calls
            </summary>
            <param name="fileName">The internal filepath, will be slash sanitised automatically</param>
            <param name="data">The file content to add. WARNING, data is kept as a shallow copy, so modifications to the passed byte array will affect file content</param>
        </member>
        <member name="M:Terraria.ModLoader.Core.XnaTitleContainerRelativePathFix.Init">
            <summary>
            TitleContainer.OpenStream throws an error if it's fed a path that starts with '..\', treating paths like that as absolute, for some reason.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.ZipExtractFix.Init">
            <summary>
            When Ionic.Zip extracts an entry it uses \\ for all separators when it should use Path.DirectorySeparatorChar for platform compatibility
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.Type">
            <summary>
            This is the internal ID of this DamageClass.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.ClassName">
            <summary>
            This is the translation that is used behind <see cref="P:Terraria.ModLoader.DamageClass.DisplayName"/>. The translation will show up when an item tooltip displays 'X [ClassName]'. This should include the 'damage' part.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.DisplayName">
            <summary> This is the name that will show up when an item tooltip displays 'X [ClassName]'. This should include the 'damage' part. </summary>
        </member>
        <member name="M:Terraria.ModLoader.DamageClass.GetBenefitFrom(Terraria.ModLoader.DamageClass)">
            <summary>
            This lets you define the classes that this DamageClass will benefit from (other than itself) for the purposes of stat bonuses, such as damage and crit chance.
            Returns 0 in all cases by default, which does not let any other classes boost this DamageClass.
            </summary>
            <param name="damageClass">The DamageClass which you want this DamageClass to benefit from statistically.</param>
        </member>
        <member name="M:Terraria.ModLoader.DamageClass.CountsAs(Terraria.ModLoader.DamageClass)">
            <summary> 
            This lets you define the classes that this DamageClass will count as (other than itself) for the purpose of armor and accessory effects, such as Spectre armor's bolts on magic attacks, or Magma Stone's Hellfire debuff on melee attacks.
            Returns false in all cases by default, which does not let any other classes' effects trigger on this DamageClass.
            </summary>
            <param name="damageClass">The DamageClass which you want this DamageClass to gain effects from.</param>
        </member>
        <member name="M:Terraria.ModLoader.DamageClass.SetDefaultStats(Terraria.Player)">
            <summary> 
            This lets you define default buffs for all items of this class (eg, base crit)
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Default.DefaultBossBarStyle">
            <summary>
            This is the default boss bar style - the way vanilla draws boss bars.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Default.MenutML">
            <summary>
            This is the default modmenu - the one that tML uses and the default one upon entering the game for the first time.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Default.MenuJourneysEnd">
            <summary>
            The Journey's End theme converted into a ModMenu, so that it better fits with the new system.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Default.MenuOldVanilla">
            <summary>
            The Terraria 1.3.5.3 theme converted into a ModMenu, so that it better fits with the new system.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Default.LegacyUnloadedTilesSystem">
            <summary>
            Handles conversion of legacy 1.3 world unloaded tile TML TagCompound data to the newer 1.4+ systems.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.DrawableTooltipLine">
            <summary>
            This class serves as a way to store information about a line that will be drawn of tooltip for an item. You will create and manipulate objects of this class if you use the draw hooks for tooltips in ModItem and GlobalItem. For examples, see ExampleSword
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.text">
            <summary>
            The text of this tooltip. 
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.index">
            <summary>
            The index of the tooltip in the array
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.isModifier">
            <summary>
            Whether or not this tooltip gives prefix information. This will make it so that the tooltip is colored either green or red.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.isModifierBad">
            <summary>
            If isModifier is true, this determines whether the tooltip is colored green or red.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DrawableTooltipLine.OriginalX">
            <summary>
            The X position where the tooltip would be drawn that is not adjusted by mods.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DrawableTooltipLine.OriginalY">
            <summary>
            The Y position where the tooltip would be drawn that is not adjusted by mods.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.X">
            <summary>
            The X position where the tooltip would be drawn.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.Y">
            <summary>
            The Y position where the tooltip would be drawn.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DrawableTooltipLine.Color">
            <summary>
            The color the tooltip would be drawn in
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DrawableTooltipLine.overrideColor">
            <summary>
            If the tooltip line's color was overridden this will hold that color, it will be null otherwise
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.oneDropLogo">
            <summary>
            Whether the tooltip is a One Drop logo or not. If it is, the tooltip text will be empty.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.font">
            <summary>
            The font this tooltip would be drawn with
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.rotation">
            <summary>
            The rotation this tooltip would be drawn in
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.origin">
            <summary>
            The origin of this tooltip
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.baseScale">
            <summary>
            The baseScale of this tooltip. When drawing the One Drop logo the scale is calculated by (baseScale.X + baseScale.Y) / 2
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.DrawableTooltipLine.#ctor(Terraria.ModLoader.TooltipLine,System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new DrawableTooltipLine object
            </summary>
            <param name="parent">The TooltipLine to make this DrawableTooltipLine from</param>
            <param name="index">The index of the line in the array</param>
            <param name="x">The X position where the tooltip would be drawn.</param>
            <param name="y">The Y position where the tooltip would be drawn.</param>
            <param name="color">The color the tooltip would be drawn in</param>
        </member>
        <member name="M:Terraria.ModLoader.DustLoader.GetDust(System.Int32)">
            <summary>
            Gets the ModDust instance with the given type. Returns null if no ModDust with the given type exists.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Engine.FallbackSyncContext">
            <summary>
            Provides a SynchronizationContext for running continuations on the Main thread in the Update loop, for platforms which don't initialized with one
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Engine.GraphicsChangeTracker">
            <summary>
            Attempt to track spurious device resets, backbuffer flickers and resizes
            Also setup some FNA logging
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Engine.TMLContentManager.GetPath(System.String)">
            <summary> Returns a path to the provided relative asset path, prioritizing overrides in the alternate content manager. Throws exceptions on failure. </summary>
        </member>
        <member name="M:Terraria.ModLoader.Engine.TMLContentManager.TryGetPath(System.String,System.String@)">
            <summary> Safely attempts to get a path to the provided relative asset path, prioritizing overrides in the alternate content manager. </summary>
        </member>
        <member name="T:Terraria.ModLoader.EquipLoader">
            <summary>
            This serves as a central place to store equipment slots and their corresponding textures. You will use this to obtain the IDs for your equipment textures.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.EquipLoader.GetEquipTexture(Terraria.ModLoader.EquipType,System.Int32)">
            <summary>
            Gets the equipment texture for the specified equipment type and ID.
            </summary>
            <param name="type"></param>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.EquipLoader.EquipFrameEffects(Terraria.Player)">
            <summary>
            Hook Player.PlayerFrame
            Calls each of the item's equipment texture's UpdateVanity hook.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.EquipTexture">
            <summary>
            This serves as a place for you to program behaviors of equipment textures. This is useful for equipment slots that do not have any item associated with them (for example, the Werewolf buff). Note that this class is purely for visual effects.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.EquipTexture.Texture">
            <summary>
            The name and folders of the texture file used by this equipment texture.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.EquipTexture.Mod">
            <summary>
            The mod that added this equipment texture.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.EquipTexture.Name">
            <summary>
            The internal name of this equipment texture.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.EquipTexture.Type">
            <summary>
            The type of equipment that this equipment texture is used as.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.EquipTexture.Slot">
            <summary>
            The slot (internal ID) of this equipment texture.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.EquipTexture.Item">
            <summary>
            The item that is associated with this equipment texture. Null if no item is associated with this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.FrameEffects(Terraria.Player,Terraria.ModLoader.EquipType)">
            <summary>
            Allows you to create special effects (such as dust) when this equipment texture is displayed on the player under the given equipment type. By default this will call the associated ModItem's UpdateVanity if there is an associated ModItem.
            </summary>
            <param name="player"></param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.IsVanitySet(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns whether or not the head armor, body armor, and leg armor textures make up a set. This hook is used for the PreUpdateVanitySet, UpdateVanitySet, and ArmorSetShadow hooks. By default this will return the same thing as the associated ModItem's IsVanitySet, or false if no ModItem is associated.
            </summary>
            <param name="head"></param>
            <param name="body"></param>
            <param name="legs"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.PreUpdateVanitySet(Terraria.Player)">
            <summary>
            Allows you to create special effects (such as the necro armor's hurt noise) when the player wears this equipment texture's vanity set. This hook is called regardless of whether the player is frozen in any way. By default this will call the associated ModItem's PreUpdateVanitySet if there is an associated ModItem.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.UpdateVanitySet(Terraria.Player)">
            <summary>
            Allows you to create special effects (such as dust) when the player wears this equipment texture's vanity set. This hook will only be called if the player is not frozen in any way. By default this will call the associated ModItem's UpdateVanitySet if there is an associated ModItem.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.ArmorSetShadows(Terraria.Player)">
            <summary>
            Allows you to determine special visual effects this vanity set has on the player without having to code them yourself. By default this will call the associated ModItem's ArmorSetShadows if there is an associated ModItem.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.SetMatch(System.Boolean,System.Int32@,System.Boolean@)">
             <summary>
             Allows you to modify the equipment that the player appears to be wearing. This hook will only be called for head, body and leg textures. Note that equipSlot is not the same as the item type of the armor the player will appear to be wearing. Worn equipment has a separate set of IDs. You can find the vanilla equipment IDs by looking at the headSlot, bodySlot, and legSlot fields for items, and modded equipment IDs by looking at EquipLoader.
            If this hook is called on body armor, equipSlot allows you to modify the leg armor the player appears to be wearing. If you modify it, make sure to set robes to true. If this hook is called on leg armor, equipSlot allows you to modify the leg armor the player appears to be wearing, and the robes parameter is useless.
            By default, if there is an associated ModItem, this will call that ModItem's SetMatch.
             </summary>
             <param name="male"></param>
             <param name="equipSlot"></param>
             <param name="robes"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.DrawHands(System.Boolean@,System.Boolean@)">
            <summary>
            Allows you to determine whether the skin/shirt on the player's arms and hands are drawn when this body equipment texture is worn. By default both flags will be false. Note that if drawHands is false, the arms will not be drawn either. If there is an associated ModItem, by default this will call that ModItem's DrawHands.
            </summary>
            <param name="drawHands"></param>
            <param name="drawArms"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.DrawHair(System.Boolean@,System.Boolean@)">
            <summary>
            Allows you to determine whether the player's hair or alt (hat) hair draws when this head equipment texture is worn. By default both flags will be false. If there is an associated ModItem, by default this will call that ModItem's DrawHair.
            </summary>
            <param name="drawHair"></param>
            <param name="drawAltHair"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.DrawHead">
            <summary>
            Return false to hide the player's head when this head equipment texture is worn. By default this will return the associated ModItem's DrawHead, or true if there is no associated ModItem.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.DrawBody">
            <summary>
            Return false to hide the player's body when this body equipment texture is worn. By default this will return the associated ModItem's DrawBody, or true if there is no associated ModItem.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.DrawLegs">
            <summary>
            Return false to hide the player's legs when this leg or shoe equipment texture is worn. By default this will return the associated ModItem's DrawLegs, or true if there is no associated ModItem.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.DrawArmorColor(Terraria.Player,System.Single,Microsoft.Xna.Framework.Color@,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify the colors in which this armor texture and surrounding accessories are drawn, in addition to which glow mask and in what color is drawn. By default this will call the associated ModItem's DrawArmorColor if there is an associated ModItem.
            </summary>
            <param name="drawPlayer"></param>
            <param name="shadow"></param>
            <param name="color"></param>
            <param name="glowMask"></param>
            <param name="glowMaskColor"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.ArmorArmGlowMask(Terraria.Player,System.Single,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify which glow mask and in what color is drawn on the player's arms. Note that this is only called for body equipment textures. By default this will call the associated ModItem's ArmorArmGlowMask if there is an associated ModItem.
            </summary>
            <param name="drawPlayer"></param>
            <param name="shadow"></param>
            <param name="glowMask"></param>
            <param name="color"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.VerticalWingSpeeds(Terraria.Player,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to modify vertical wing speeds.
            </summary>
            <param name="player"></param>
            <param name="ascentWhenFalling"></param>
            <param name="ascentWhenRising"></param>
            <param name="maxCanAscendMultiplier"></param>
            <param name="maxAscentMultiplier"></param>
            <param name="constantAscend"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.HorizontalWingSpeeds(Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Allows you to modify horizontal wing speeds.
            </summary>
            <param name="player"></param>
            <param name="speed"></param>
            <param name="acceleration"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.WingUpdate(Terraria.Player,System.Boolean)">
            <summary>
            Allows for wing textures to do various things while in use. "inUse" is whether or not the jump button is currently pressed. Called when this wing texture visually appears on the player. Use to animate wings, create dusts, invoke sounds, and create lights. By default this will call the associated ModItem's WingUpdate if there is an associated ModItem.
            </summary>
            <param name="player"></param>
            <param name="inUse"></param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.EquipType">
            <summary>
            This is an enum of all the types of equipment that exist. An equipment type is defined as a type or layer of texture that is drawn on the player (for example, body and shield and wings).
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.GlobalBlockType">
            <summary>
            This is the superclass for GlobalTile and GlobalWall, combining common code
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.SetDefaults">
            <summary>
            Allows you to modify the properties of any tile/wall in the game. Most properties are stored as arrays throughout the Terraria code.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.KillSound(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to customize which sound you want to play when the tile/wall at the given coordinates is hit. Return false to stop the game from playing its default sound for the tile/wall. Returns true by default.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.NumDust(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Allows you to change how many dust particles are created when the tile/wall at the given coordinates is hit.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="fail"></param>
            <param name="num"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.CreateDust(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Allows you to modify the default type of dust created when the tile/wall at the given coordinates is hit. Return false to stop the default dust (the dustType parameter) from being created. Returns true by default.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="dustType"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.CanPlace(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to stop a tile/wall from being placed at the given coordinates. Return false to block the tile/wall from being placed. Returns true by default.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.CanExplode(System.Int32,System.Int32,System.Int32)">
            <summary>
            Whether or not the tile/wall at the given coordinates can be killed by an explosion (ie. bombs). Returns true by default; return false to stop an explosion from destroying it.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.PreDraw(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Allows you to draw things behind the tile/wall at the given coordinates. Return false to stop the game from drawing the tile/wall normally. Returns true by default.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="spriteBatch"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.PostDraw(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Allows you to draw things in front of the tile/wall at the given coordinates. This can also be used to do things such as creating dust. Called on active tiles. See also ModSystem.PostDrawTiles.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="spriteBatch"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.RandomUpdate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Called for every tile/wall the world randomly decides to update in a given tick. Useful for things such as growing or spreading.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.PlaceInWorld(System.Int32,System.Int32,System.Int32,Terraria.Item)">
            <summary>
            Allows you to do something when this tile/wall is placed. Called on the local Client and Single Player.
            </summary>
            <param name="i">The x position in tile coordinates. Equal to Player.tileTargetX</param>
            <param name="j">The y position in tile coordinates. Equal to Player.tileTargetY</param>
            <param name="type"></param>
            <param name="item">The item used to place this tile/wall.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.ModifyLight(System.Int32,System.Int32,System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to determine how much light the block emits.
            If it is a tile, make sure you set Main.tileLighted[Type] to true in SetDefaults for this to work.
            If it is a wall, it can also let you light up the block in front of this wall.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="T:Terraria.ModLoader.GlobalBossBar">
            <summary>
            A class that is used to modify existing boss health bars. To add them, use ModBossBar instead.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBossBar.PreDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.NPC,Terraria.DataStructures.BossBarDrawParams@)">
            <summary>
            Allows you to draw things before the default draw code is ran. Return false to prevent drawing the bar. Returns true by default.
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="npc">The NPC this bar is focused on</param>
            <param name="drawParams">The draw parameters for the boss bar</param>
            <returns><see langword="true"/> for allowing drawing, <see langword="false"/> for preventing drawing</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBossBar.PostDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.NPC,Terraria.DataStructures.BossBarDrawParams)">
            <summary>
            Allows you to draw things after the bar has been drawn. skipped is true if you or another mod has skipped drawing the bar (possibly hiding it or in favor of new visuals).
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="npc">The NPC this bar is focused on</param>
            <param name="drawParams">The draw parameters for the boss bar</param>
        </member>
        <member name="T:Terraria.ModLoader.GlobalBuff">
            <summary>
            This class allows you to modify the behavior of any buff in the game.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.Update(System.Int32,Terraria.Player,System.Int32@)">
            <summary>
            Allows you to make the buff with the given ID give certain effects to a player. If you remove the buff from the player, make sure the decrement the buffIndex parameter by 1.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.Update(System.Int32,Terraria.NPC,System.Int32@)">
            <summary>
            Allows you to make the buff with the given ID give certain effects to an NPC. If you remove the buff from the NPC, make sure to decrement the buffIndex parameter by 1.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.ReApply(System.Int32,Terraria.Player,System.Int32,System.Int32)">
            <summary>
            Allows to you make special things happen when adding the given type of buff to a player when the player already has that buff. Return true to block the vanilla re-apply code from being called; returns false by default. The vanilla re-apply code sets the buff time to the "time" argument if that argument is larger than the current buff time. (For Mana Sickness, the vanilla re-apply code adds the "time" argument to the current buff time.)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.ReApply(System.Int32,Terraria.NPC,System.Int32,System.Int32)">
            <summary>
            Allows to you make special things happen when adding the given buff type to an NPC when the NPC already has that buff. Return true to block the vanilla re-apply code from being called; returns false by default. The vanilla re-apply code sets the buff time to the "time" argument if that argument is larger than the current buff time.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.ModifyBuffTip(System.Int32,System.String@,System.Int32@)">
            <summary>
            Allows you to modify the tooltip that displays when the mouse hovers over the buff icon, as well as the color the buff's name is drawn in.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.CustomBuffTipSize(System.String,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2})">
            <summary>
            If you are using the DrawCustomBuffTip hook, then you must use this hook as well. Calculate the location (relative to the origin) of the bottom-right corner of everything you will draw, and add that location to the sizes parameter.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.DrawCustomBuffTip(System.String,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Int32)">
            <summary>
            Allows you to draw whatever you want when a buff tooltip is drawn. The originX and originY parameters are the top-left corner of everything that's drawn; you should add these to the position argument passed to SpriteBatch.Draw.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.GlobalInfoDisplay">
            <summary>
            A class that is used to modify existing info displays (i.e. the things that the Cell Phone uses to communicate information).
            All vanilla displays can be accessed using InfoDisplay.(name of item).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalInfoDisplay.Active(Terraria.ModLoader.InfoDisplay)">
            <summary>
            Allows you to modify whether or not a given InfoDisplay is active. Returns null (no change from default behavior) by default for all InfoDisplays.
            </summary>
            <param name="currentDisplay">The display you're deciding the active state for.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalInfoDisplay.ModifyDisplayName(Terraria.ModLoader.InfoDisplay,System.String@)">
            <summary>
            Allows you to modify the display name of an InfoDisplay (shown when hovering over said display in-game).
            </summary>
            <param name="currentDisplay">The display you're modifying the display name for.</param>
            <param name="displayName">The display name of the current display.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalInfoDisplay.ModifyDisplayValue(Terraria.ModLoader.InfoDisplay,System.String@)">
            <summary>
            Allows you to modify the display value (the text displayed next to the icon) of an InfoDisplay.
            </summary>
            <param name="currentDisplay">The display you're modifying the display value for.</param>
            <param name="displayValue">The</param>
        </member>
        <member name="T:Terraria.ModLoader.GlobalItem">
            <summary>
            This class allows you to modify and use hooks for all items, including vanilla items. Create an instance of an overriding class then call Mod.AddGlobalItem to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.Clone(Terraria.Item,Terraria.Item)">
            <summary>
            Create a copy of this instanced GlobalItem. Called when an item is cloned.
            </summary>
            <param name="item">The item being cloned</param>
            <param name="itemClone">The new item</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.SetDefaults(Terraria.Item)">
            <summary>
            Allows you to set the properties of any and every item that gets created.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ChoosePrefix(Terraria.Item,Terraria.Utilities.UnifiedRandom)">
            <summary>
            Allows you to manually choose what prefix an item will get.
            </summary>
            <returns>The ID of the prefix to give the item, -1 to use default vanilla behavior</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PrefixChance(Terraria.Item,System.Int32,Terraria.Utilities.UnifiedRandom)">
            <summary>
            To prevent putting the item in the tinkerer slot, return false when pre is -3.
            To prevent rolling of a prefix on spawn, return false when pre is -1.
            To force rolling of a prefix on spawn, return true when pre is -1.
            
            To reduce the probability of a prefix on spawn (pre == -1) to X%, return false 100-4X % of the time.
            To increase the probability of a prefix on spawn (pre == -1) to X%, return true (4X-100)/3 % of the time.
            
            To delete a prefix from an item when the item is loaded, return false when pre is the prefix you want to delete.
            Use AllowPrefix to prevent rolling of a certain prefix.
            </summary>
            <param name="pre">The prefix being applied to the item, or the roll mode. -1 is when the item is naturally generated in a chest, crafted, purchased from an NPC, looted from a grab bag (excluding presents), or dropped by a slain enemy (if it's spawned with prefixGiven: -1). -2 is when the item is rolled in the tinkerer. -3 determines if the item can be placed in the tinkerer slot.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.AllowPrefix(Terraria.Item,System.Int32)">
            <summary>
            Force a re-roll of a prefix by returning false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanUseItem(Terraria.Item,Terraria.Player)">
            <summary>
            Returns whether or not any item can be used. Returns true by default. The inability to use a specific item overrides this, so use this to stop an item from being used.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseStyle(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to modify the location and rotation of any item in its use animation.
            </summary>
            <param name="item"> The item. </param>
            <param name="player"> The player. </param>
            <param name="heldItemFrame"> The source rectangle for the held item's texture. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HoldStyle(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to modify the location and rotation of the item the player is currently holding.
            </summary>
            <param name="item"> The item. </param>
            <param name="player"> The player. </param>
            <param name="heldItemFrame"> The source rectangle for the held item's texture. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HoldItem(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when the player is holding an item (for example, torches make light and water candles increase spawn rate).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseTimeMultiplier(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to change the effective useTime of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns> The multiplier on the usage time. 1f by default. Values greater than 1 increase the item use's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseAnimationMultiplier(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to change the effective useAnimation of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns>The multiplier on the animation time. 1f by default. Values greater than 1 increase the item animation's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseSpeedMultiplier(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to safely change both useTime and useAnimation while keeping the values relative to each other.
            <br/> Useful for status effects.
            </summary>
            <returns> The multiplier on the use speed. 1f by default. Values greater than 1 increase the overall item speed. </returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.GetHealLife(Terraria.Item,Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of life a life healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healLife value.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of life being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.GetHealMana(Terraria.Item,Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of mana a mana healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healMana value.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of mana being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyManaCost(Terraria.Item,Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Allows you to temporarily modify the amount of mana an item will consume on use, based on player buffs, accessories, etc. This is only called for items with a mana value.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="reduce">Used for decreasingly stacking buffs (most common). Only ever use -= on this field.</param>
            <param name="mult">Use to directly multiply the item's effective mana cost. Good for debuffs, or things which should stack separately (eg meteor armor set bonus).</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnMissingMana(Terraria.Item,Terraria.Player,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player doesn't have enough mana for an item they are trying to use.
            If the player has high enough mana after this hook runs, mana consumption will happen normally.
            Only runs once per item use.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="neededMana">The mana needed to use the item.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnConsumeMana(Terraria.Item,Terraria.Player,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player consumes mana on use of an item.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="manaConsumed">The mana consumed from the player.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyWeaponDamage(Terraria.Item,Terraria.Player,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Allows you to temporarily modify this weapon's damage based on player buffs, etc. This is useful for creating new classes of damage, or for making subclasses of damage (for example, Shroomite armor set boosts).
            </summary>
            <param name="item">The item being used</param>
            <param name="player">The player using the item</param>
            <param name="add">Used for additively stacking buffs (most common). Only ever use += on this field. Things with effects like "5% increased MyDamageClass damage" would use this: `add += 0.05f`</param>
            <param name="mult">Use to directly multiply the player's effective damage. Good for debuffs, or things which should stack separately (eg ammo type buffs)</param>
            <param name="flat">This is a flat damage bonus that will be added after add and mult are applied. It facilitates effects like "4 more damage from weapons"</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyResearchSorting(Terraria.Item,Terraria.ID.ContentSamples.CreativeHelper.ItemGroup@)">
            <summary>
            Allows you to set an item's sorting group in Journey Mode's duplication menu. This is useful for setting custom item types that group well together, or whenever the default vanilla sorting doesn't sort the way you want it.
            </summary>
            <param name="item">The item being used</param>
            <param name="itemGroup">The item group this item is being assigned to</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyWeaponKnockback(Terraria.Item,Terraria.Player,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Allows you to temporarily modify this weapon's knockback based on player buffs, etc. This allows you to customize knockback beyond the Player class's limited fields.
            </summary>
            <param name="item">The item being used</param>
            <param name="player">The player using the item</param>
            <param name="knockback">The knockback</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyWeaponCrit(Terraria.Item,Terraria.Player,System.Int32@)">
            <summary>
            Allows you to temporarily modify this weapon's crit chance based on player buffs, etc.
            </summary>
            <param name="item">The item being used</param>
            <param name="player">The player using the item</param>
            <param name="crit">The critical strike chance</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PickAmmo(Terraria.Item,Terraria.Item,Terraria.Player,System.Int32@,System.Single@,System.Int32@,System.Single@)">
            <summary>
            Allows you to modify the projectile created by a weapon based on the ammo it is using.
            </summary>
            <param name="weapon">The item that is using this ammo</param>
            <param name="ammo">The ammo item</param>
            <param name="player">The player using the item</param>
            <param name="type">The ID of the projectile shot</param>
            <param name="speed">The speed of the projectile shot</param>
            <param name="damage">The damage of the projectile shot</param>
            <param name="knockback">The speed of the projectile shot</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ConsumeAmmo(Terraria.Item,Terraria.Player)">
            <summary>
            Whether or not ammo will be consumed upon usage. Called both by the gun and by the ammo; if at least one returns false then the ammo will not be used. By default returns true.
            If false is returned, the OnConsumeAmmo hook is never called.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnConsumeAmmo(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when ammo is consumed. Called both by the gun and by the ammo.
            Called before the ammo stack is reduced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanShoot(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to prevent an item from shooting a projectile on use. Returns true by default.
            </summary>
            <param name="item"> The item being used. </param>
            <param name="player"> The player using the item. </param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyShootStats(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            Allows you to modify the position, velocity, type, damage and/or knockback of a projectile being shot by an item.
            </summary>
            <param name="item"> The item being used. </param>
            <param name="player"> The player using the item. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.Shoot(Terraria.Item,Terraria.Player,Terraria.DataStructures.ProjectileSource_Item_WithAmmo,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single)">
            <summary>
            Allows you to modify an item's shooting mechanism. Return false to prevent vanilla's shooting code from running. Returns true by default.
            </summary>
            <param name="item"> The item being used. </param>
            <param name="player"> The player using the item. </param>
            <param name="source"> The projectile source's information. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseItemHitbox(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle@,System.Boolean@)">
            <summary>
            Changes the hitbox of a melee weapon when it is used.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.MeleeEffects(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to give melee weapons special effects, such as creating light or dust.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC)">
            <summary>
            Allows you to determine whether a melee weapon can hit the given NPC when swung. Return true to allow hitting the target, return false to block the weapon from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC,System.Int32@,System.Single@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that a melee weapon does to an NPC.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when a melee weapon hits an NPC (for example how the Pumpkin Sword creates pumpkin heads).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanHitPvp(Terraria.Item,Terraria.Player,Terraria.Player)">
            <summary>
            Allows you to determine whether a melee weapon can hit the given opponent player when swung. Return false to block the weapon from hitting the target. Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyHitPvp(Terraria.Item,Terraria.Player,Terraria.Player,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that a melee weapon does to a player.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnHitPvp(Terraria.Item,Terraria.Player,Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when a melee weapon hits a player.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseItem(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when an item is used. The return value controls whether or not ApplyItemTime will be called for the player.
            <br/> Return true if the item actually did something, to force itemTime.
            <br/> Return false to keep itemTime at 0.
            <br/> Return null for vanilla behavior.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseAnimation(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when an item's use animation starts.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ConsumeItem(Terraria.Item,Terraria.Player)">
            <summary>
            If the item is consumable and this returns true, then the item will be consumed upon usage. Returns true by default.
            If false is returned, the OnConsumeItem hook is never called.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnConsumeItem(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when this item is consumed.
            Called before the item stack is reduced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseItemFrame(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to modify the player's animation when an item is being used.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HoldItemFrame(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to modify the player's animation when the player is holding an item.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.AltFunctionUse(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make an item usable by right-clicking. Returns false by default. When the item is used by right-clicking, player.altFunctionUse will be set to 2.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateInventory(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when an item is in the player's inventory (for example, how the cell phone makes information display).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateEquip(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to give effects to armors and accessories, such as increased damage.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateAccessory(Terraria.Item,Terraria.Player,System.Boolean)">
            <summary>
            Allows you to give effects to accessories. The hideVisual parameter is whether the player has marked the accessory slot to be hidden from being drawn on the player.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateVanity(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to give effects to this accessory when equipped in a vanity slot. Vanilla uses this for boot effects, wings and merman/werewolf visual flags
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.IsArmorSet(Terraria.Item,Terraria.Item,Terraria.Item)">
            <summary>
            Allows you to determine whether the player is wearing an armor set, and return a name for this set. 
            If there is no armor set, return the empty string.
            Returns the empty string by default.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateArmorSet(Terraria.Player,System.String)">
            <summary>
            Allows you to give set bonuses to your armor set with the given name. 
            The set name will be the same as returned by IsArmorSet.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.IsVanitySet(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns whether or not the head armor, body armor, and leg armor textures make up a set.
            This hook is used for the PreUpdateVanitySet, UpdateVanitySet, and ArmorSetShadow hooks, and will use items in the social slots if they exist.
            By default this will return the same value as the IsArmorSet hook, so you will not have to use this hook unless you want vanity effects to be entirely separate from armor sets.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreUpdateVanitySet(Terraria.Player,System.String)">
            <summary>
            Allows you to create special effects (such as the necro armor's hurt noise) when the player wears the vanity set with the given name returned by IsVanitySet.
            This hook is called regardless of whether the player is frozen in any way.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateVanitySet(Terraria.Player,System.String)">
            <summary>
            Allows you to create special effects (such as dust) when the player wears the vanity set with the given name returned by IsVanitySet. This hook will only be called if the player is not frozen in any way.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ArmorSetShadows(Terraria.Player,System.String)">
            <summary>
            Allows you to determine special visual effects a vanity has on the player without having to code them yourself.
            
            This method is not instanced.
            </summary>
            <example><code>player.armorEffectDrawShadow = true;</code></example>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.SetMatch(System.Int32,System.Int32,System.Boolean,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the equipment that the player appears to be wearing.
            
            Note that type and equipSlot are not the same as the item type of the armor the player will appear to be wearing. Worn equipment has a separate set of IDs.
            You can find the vanilla equipment IDs by looking at the headSlot, bodySlot, and legSlot fields for items, and modded equipment IDs by looking at EquipLoader.
            
            This method is not instanced.
            </summary>
            <param name="armorSlot">head armor (0), body armor (1) or leg armor (2).</param>
            <param name="type">The equipment texture ID of the item that the player is wearing.</param>
            <param name="equipSlot">The altered equipment texture ID for the legs (armorSlot 1 and 2) or head (armorSlot 0)</param>
            <param name="robes">Set to true if you modify equipSlot when armorSlot == 1 to set Player.wearsRobe, otherwise ignore it</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanRightClick(Terraria.Item)">
            <summary>
            Returns whether or not an item does something when right-clicked in the inventory. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.RightClick(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when an item is right-clicked in the inventory. Useful for goodie bags.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreOpenVanillaBag(System.String,Terraria.Player,System.Int32)">
            <summary>
            Allows you to make vanilla bags drop your own items and stop the default items from being dropped. 
            Return false to stop the default items from being dropped; returns true by default. 
            Context will either be "present", "bossBag", "crate", "lockBox", "herbBag", or "goodieBag". 
            For boss bags and crates, arg will be set to the type of the item being opened.
            This method is also called for modded bossBags that are properly implemented.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OpenVanillaBag(System.String,Terraria.Player,System.Int32)">
            <summary>
            Allows you to make vanilla bags drop your own items in addition to the default items.
            This method will not be called if any other GlobalItem returns false for PreOpenVanillaBag.
            Context will either be "present", "bossBag", "crate", "lockBox", "herbBag", or "goodieBag".
            For boss bags and crates, arg will be set to the type of the item being opened.
            This method is also called for modded bossBags that are properly implemented.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanStackInWorld(Terraria.Item,Terraria.Item)">
            <summary>
            Allows you to prevent vanilla items from stacking in the world.
            This is only called when two items of the same type attempt to stack.
            </summary>
            <param name="item1">The item that is attempting to stack</param>
            <param name="item2">The item that the other item is attempting to stack with</param>
            <returns>Whether or not the items are allowed to stack</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ReforgePrice(Terraria.Item,System.Int32@,System.Boolean@)">
            <summary>
            Returns if the normal reforge pricing is applied. 
            If true or false is returned and the price is altered, the price will equal the altered price.
            The passed reforge price equals the item.value. Vanilla pricing will apply 20% discount if applicable and then price the reforge at a third of that value.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreReforge(Terraria.Item)">
            <summary>
            This hook gets called when the player clicks on the reforge button and can afford the reforge.
            Returns whether the reforge will take place. If false is returned, the PostReforge hook is never called.
            Reforging preserves modded data on the item. 
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostReforge(Terraria.Item)">
            <summary>
            This hook gets called immediately after an item gets reforged by the Goblin Tinkerer.
            Useful for modifying modded data based on the reforge result.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.DrawHands(System.Int32,System.Boolean@,System.Boolean@)">
            <summary>
            Allows you to determine whether the skin/shirt on the player's arms and hands are drawn when a body armor is worn.
            Note that if drawHands is false, the arms will not be drawn either.
            "body" is the player's associated body equipment texture.
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.DrawHair(System.Int32,System.Boolean@,System.Boolean@)">
            <summary>
            Allows you to determine whether the player's hair or alt (hat) hair will be drawn when a head armor is worn.
            "head" is the player's associated head equipment texture.
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.DrawHead(System.Int32)">
            <summary>
            Return false to hide the player's head when a head armor is worn. Returns true by default.
            "head" is the player's associated head equipment texture.
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.DrawBody(System.Int32)">
            <summary>
            Return false to hide the player's body when a body armor is worn. Returns true by default.
            "body" is the player's associated body equipment texture.
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.DrawLegs(System.Int32,System.Int32)">
            <summary>
            Return false to hide the player's legs when a leg armor or shoe accessory is worn. Returns true by default.
            "legs" and "shoes" are the player's associated legs and shoes equipment textures.
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.DrawArmorColor(Terraria.ModLoader.EquipType,System.Int32,Terraria.Player,System.Single,Microsoft.Xna.Framework.Color@,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify the colors in which the player's armor and their surrounding accessories are drawn, in addition to which glow mask and in what color is drawn.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ArmorArmGlowMask(System.Int32,Terraria.Player,System.Single,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify which glow mask and in what color is drawn on the player's arms. Note that this is only called for body armor.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.VerticalWingSpeeds(Terraria.Item,Terraria.Player,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to modify the speeds at which you rise and fall when wings are equipped.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HorizontalWingSpeeds(Terraria.Item,Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Allows you to modify the horizontal flight speed and acceleration of wings.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.WingUpdate(System.Int32,Terraria.Player,System.Boolean)">
            <summary>
            Allows for Wings to do various things while in use. "inUse" is whether or not the jump button is currently pressed.
            Called when wings visually appear on the player.
            Use to animate wings, create dusts, invoke sounds, and create lights. False will keep everything the same.
            True, you need to handle all animations in your own code.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.Update(Terraria.Item,System.Single@,System.Single@)">
            <summary>
            Allows you to customize an item's movement when lying in the world. Note that this will not be called if the item is currently being grabbed by a player.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanBurnInLava(Terraria.Item)">
            <summary>
            Returns whether or not this item will burn in lava regardless of any conditions. Returns null by default (follow vanilla behaviour).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostUpdate(Terraria.Item)">
            <summary>
            Allows you to make things happen when an item is lying in the world. This will always be called, even when the item is being grabbed by a player. This hook should be used for adding light, or for increasing the age of less valuable items.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.GrabRange(Terraria.Item,Terraria.Player,System.Int32@)">
            <summary>
            Allows you to modify how close an item must be to the player in order to move towards the player.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.GrabStyle(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to modify the way an item moves towards the player. Return false to allow the vanilla grab style to take place. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanPickup(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to determine whether or not the item can be picked up
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnPickup(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make special things happen when the player picks up an item. Return false to stop the item from being added to the player's inventory; returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ItemSpace(Terraria.Item,Terraria.Player)">
            <summary>
            Return true to specify that the item can be picked up despite not having enough room in inventory. Useful for something like hearts or experience items. Use in conjunction with OnPickup to actually consume the item and handle it.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.GetAlpha(Terraria.Item,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which an item is drawn. Return null to use the default color (normally light color). Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreDrawInWorld(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single@,System.Single@,System.Int32)">
            <summary>
            Allows you to draw things behind an item, or to modify the way an item is drawn in the world. Return false to stop the game from drawing the item (useful if you're manually drawing the item). Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostDrawInWorld(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Int32)">
            <summary>
            Allows you to draw things in front of an item. This method is called even if PreDrawInWorld returns false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreDrawInInventory(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Allows you to draw things behind an item in the inventory. Return false to stop the game from drawing the item (useful if you're manually drawing the item). Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostDrawInInventory(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Allows you to draw things in front of an item in the inventory. This method is called even if PreDrawInInventory returns false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HoldoutOffset(System.Int32)">
            <summary>
            Allows you to determine the offset of an item's sprite when used by the player.
            This is only used for items with a useStyle of 5 that aren't staves.
            Return null to use the item's default holdout offset; returns null by default.
            
            This method is not instanced.
            </summary>
            <example><code>return new Vector2(10, 0);</code></example>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HoldoutOrigin(System.Int32)">
            <summary>
            Allows you to determine the point on an item's sprite that the player holds onto when using the item.
            The origin is from the bottom left corner of the sprite. This is only used for staves with a useStyle of 5.
            Return null to use the item's default holdout origin; returns null by default.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanEquipAccessory(Terraria.Item,Terraria.Player,System.Int32)">
            <summary>
            Allows you to disallow the player from equipping an accessory. Return false to disallow equipping the accessory. Returns true by default.
            </summary>
            <param name="item">The item that is attepting to equip.</param>
            <param name="player">The player.</param>
            <param name="slot">The inventory slot that the item is attempting to occupy.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ExtractinatorUse(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify what item, and in what quantity, is obtained when an item of the given type is fed into the Extractinator. 
            An extractType of 0 represents the default extraction (Silt and Slush). 
            By default the parameters will be set to the output of feeding Silt/Slush into the Extractinator.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CaughtFishStack(System.Int32,System.Int32@)">
            <summary>
            Allows you to modify how many of an item a player obtains when the player fishes that item.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.IsAnglerQuestAvailable(System.Int32)">
            <summary>
            Whether or not specific conditions have been satisfied for the Angler to be able to request the given item. (For example, Hardmode.) 
            Returns true by default.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.AnglerChat(System.Int32,System.String@,System.String@)">
            <summary>
            Allows you to set what the Angler says when the Quest button is clicked in his chat. 
            The chat parameter is his dialogue, and catchLocation should be set to "Caught at [location]" for the given type.
            
            This method is not instanced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.AddRecipes">
            <summary>
            This is essentially the same as Mod.AddRecipes or ModItem.AddRecipes. Use whichever method makes organizational sense for your mod.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreDrawTooltip(Terraria.Item,System.Collections.ObjectModel.ReadOnlyCollection{Terraria.ModLoader.TooltipLine},System.Int32@,System.Int32@)">
            <summary>
            Allows you to do things before this item's tooltip is drawn.
            </summary>
            <param name="item">The item</param>
            <param name="lines">The tooltip lines for this item</param>
            <param name="x">The top X position for this tooltip. It is where the first line starts drawing</param>
            <param name="y">The top Y position for this tooltip. It is where the first line starts drawing</param>
            <returns>Whether or not to draw this tooltip</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostDrawTooltip(Terraria.Item,System.Collections.ObjectModel.ReadOnlyCollection{Terraria.ModLoader.DrawableTooltipLine})">
            <summary>
            Allows you to do things after this item's tooltip is drawn. The lines contain draw information as this is ran after drawing the tooltip.
            </summary>
            <param name="item">The item</param>
            <param name="lines">The tooltip lines for this item</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreDrawTooltipLine(Terraria.Item,Terraria.ModLoader.DrawableTooltipLine,System.Int32@)">
            <summary>
            Allows you to do things before a tooltip line of this item is drawn. The line contains draw info.
            </summary>
            <param name="item">The item</param>
            <param name="line">The line that would be drawn</param>
            <param name="yOffset">The Y offset added for next tooltip lines</param>
            <returns>Whether or not to draw this tooltip line</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostDrawTooltipLine(Terraria.Item,Terraria.ModLoader.DrawableTooltipLine)">
            <summary>
            Allows you to do things after a tooltip line of this item is drawn. The line contains draw info.
            </summary>
            <param name="item">The item</param>
            <param name="line">The line that was drawn</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyTooltips(Terraria.Item,System.Collections.Generic.List{Terraria.ModLoader.TooltipLine})">
            <summary>
            Allows you to modify all the tooltips that display for the given item. See here for information about TooltipLine.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.NeedsSaving(Terraria.Item)">
            <summary>
            Whether or not the given item needs to save custom data. Returning false will save on the memory used in saving an item, but returning true is necessary in order to save data across all items or vanilla items. Returns false by default. Note that the return value of this hook must be deterministic (randomness is not allowed).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.Save(Terraria.Item)">
            <summary>
            Allows you to save custom data for the given item. Only called when NeedsCustomSaving returns true. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.Load(Terraria.Item,Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load custom data that you have saved for the given item.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.NetSend(Terraria.Item,System.IO.BinaryWriter)">
            <summary>
            Allows you to send custom data for the given item between client and server.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.NetReceive(Terraria.Item,System.IO.BinaryReader)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.GlobalLoot">
            <summary> This readonly struct is a simple shortcut for modifying global drop rules in an <see cref="T:Terraria.GameContent.ItemDropRules.ItemDropDatabase"/>. </summary>
        </member>
        <member name="T:Terraria.ModLoader.GlobalNPC">
            <summary>
            This class allows you to modify and use hooks for all NPCs, including vanilla mobs. Create an instance of an overriding class then call Mod.AddGlobalNPC to use this.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GlobalNPC.CloneNewInstances">
            <summary>
            Whether instances of this GlobalNPC are created through Clone or constructor (by default implementations of NewInstance and Clone()). 
            Defaults to false (using default constructor).
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Terraria.ModLoader.GlobalNPC.Clone" -->
        <member name="M:Terraria.ModLoader.GlobalNPC.NewInstance(Terraria.NPC)">
            <summary>
            Create a new instance of this GlobalNPC for an NPC instance. 
            Called at the end of NPC.SetDefaults.
            If CloneNewInstances is true, just calls Clone()
            Otherwise calls the default constructor and copies fields
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SetDefaults(Terraria.NPC)">
            <summary>
            Allows you to set the properties of any and every NPC that gets created.
            </summary>
            <param name="npc"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ScaleExpertStats(Terraria.NPC,System.Int32,System.Single)">
            <summary>
            Allows you to customize an NPC's stats in expert mode.
            </summary>
            <param name="npc"></param>
            <param name="numPlayers"></param>
            <param name="bossLifeScale"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SetBestiary(Terraria.NPC,Terraria.GameContent.Bestiary.BestiaryDatabase,Terraria.GameContent.Bestiary.BestiaryEntry)">
            <summary>
            Allows you to set an NPC's information in the Bestiary.
            </summary>
            <param name="npc"></param>
            <param name="database"></param>
            <param name="bestiaryEntry"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ResetEffects(Terraria.NPC)">
            <summary>
            This is where you reset any fields you add to your subclass to their default states. This is necessary in order to reset your fields if they are conditionally set by a tick update but the condition is no longer satisfied.
            </summary>
            <param name="npc"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PreAI(Terraria.NPC)">
            <summary>
            Allows you to determine how any NPC behaves. Return false to stop the vanilla AI and the AI hook from being run. Returns true by default.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.AI(Terraria.NPC)">
            <summary>
            Allows you to determine how any NPC behaves. This will only be called if PreAI returns true.
            </summary>
            <param name="npc"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PostAI(Terraria.NPC)">
            <summary>
            Allows you to determine how any NPC behaves. This will be called regardless of what PreAI returns.
            </summary>
            <param name="npc"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.FindFrame(Terraria.NPC,System.Int32)">
            <summary>
            Allows you to modify the frame from an NPC's texture that is drawn, which is necessary in order to animate NPCs.
            </summary>
            <param name="npc"></param>
            <param name="frameHeight"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Terraria.ModLoader.GlobalNPC.HitEffect(Terraria.NPC,System.Int32,System.Double)" -->
        <member name="M:Terraria.ModLoader.GlobalNPC.UpdateLifeRegen(Terraria.NPC,System.Int32@)">
            <summary>
            Allows you to make the NPC either regenerate health or take damage over time by setting npc.lifeRegen. Regeneration or damage will occur at a rate of half of npc.lifeRegen per second. The damage parameter is the number that appears above the NPC's head if it takes damage over time.
            </summary>
            <param name="npc"></param>
            <param name="damage"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CheckActive(Terraria.NPC)">
            <summary>
            Whether or not to run the code for checking whether an NPC will remain active. Return false to stop the NPC from being despawned and to stop the NPC from counting towards the limit for how many NPCs can exist near a player. Returns true by default.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CheckDead(Terraria.NPC)">
            <summary>
            Whether or not an NPC should be killed when it reaches 0 health. You may program extra effects in this hook (for example, how Golem's head lifts up for the second phase of its fight). Return false to stop the NPC from being killed. Returns true by default.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SpecialOnKill(Terraria.NPC)">
            <summary>
            Allows you to call OnKill on your own when the NPC dies, rather then letting vanilla call it on its own. Returns false by default.
            </summary>
            <returns>Return true to stop vanilla from calling OnKill on its own. Do this if you call OnKill yourself.</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PreKill(Terraria.NPC)">
            <summary>
            Allows you to determine whether or not NPC from doing anything on death (besides die). Return false to stop the NPC from doing anything special. Returns true by default.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnKill(Terraria.NPC)">
            <summary>
            Allows you to make things happen when an NPC dies (for example, setting ModSystem fields). This hook runs on the server/single player. For client-side effects, such as dust, gore, and sounds, see HitEffect
            </summary>
            <param name="npc"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnCatchNPC(Terraria.NPC,Terraria.Player,Terraria.Item)">
            <summary>
            Allows you to make things happen when an NPC is caught. Ran Serverside.
            </summary>
            <param name="npc">The caught NPC</param>
            <param name="player">The player catching the NPC</param>
            <param name="item">The item that will be spawned</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyNPCLoot(Terraria.NPC,Terraria.ModLoader.NPCLoot)">
            <summary>
            Allows you to add and modify NPC loot tables to drop on death and to appear in the Bestiary.
            </summary>
            <param name="npc"></param>
            <param name="npcLoot"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyGlobalLoot(Terraria.ModLoader.GlobalLoot)">
            <summary>
            Allows you to add and modify global loot rules that are conditional, i.e. vanilla's biome keys and souls.
            </summary>
            <param name="globalLoot"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanHitPlayer(Terraria.NPC,Terraria.Player,System.Int32@)">
            <summary>
            Allows you to determine whether an NPC can hit the given player. Return false to block the NPC from hitting the target. Returns true by default. CooldownSlot determines which of the player's cooldown counters to use (-1, 0, or 1), and defaults to -1.
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <param name="cooldownSlot"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyHitPlayer(Terraria.NPC,Terraria.Player,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that an NPC does to a player.
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnHitPlayer(Terraria.NPC,Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when an NPC hits a player (for example, inflicting debuffs).
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanHitNPC(Terraria.NPC,Terraria.NPC)">
            <summary>
            Allows you to determine whether an NPC can hit the given friendly NPC. Return true to allow hitting the target, return false to block the NPC from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyHitNPC(Terraria.NPC,Terraria.NPC,System.Int32@,System.Single@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that an NPC does to a friendly NPC.
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnHitNPC(Terraria.NPC,Terraria.NPC,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when an NPC hits a friendly NPC.
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanBeHitByItem(Terraria.NPC,Terraria.Player,Terraria.Item)">
            <summary>
            Allows you to determine whether an NPC can be hit by the given melee weapon when swung. Return true to allow hitting the NPC, return false to block hitting the NPC, and return null to use the vanilla code for whether the NPC can be hit. Returns null by default.
            </summary>
            <param name="npc"></param>
            <param name="player"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyHitByItem(Terraria.NPC,Terraria.Player,Terraria.Item,System.Int32@,System.Single@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that an NPC takes from a melee weapon.
            </summary>
            <param name="npc"></param>
            <param name="player"></param>
            <param name="item"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnHitByItem(Terraria.NPC,Terraria.Player,Terraria.Item,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when an NPC is hit by a melee weapon.
            </summary>
            <param name="npc"></param>
            <param name="player"></param>
            <param name="item"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanBeHitByProjectile(Terraria.NPC,Terraria.Projectile)">
            <summary>
            Allows you to determine whether an NPC can be hit by the given projectile. Return true to allow hitting the NPC, return false to block hitting the NPC, and return null to use the vanilla code for whether the NPC can be hit. Returns null by default.
            </summary>
            <param name="npc"></param>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyHitByProjectile(Terraria.NPC,Terraria.Projectile,System.Int32@,System.Single@,System.Boolean@,System.Int32@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that an NPC takes from a projectile.
            </summary>
            <param name="npc"></param>
            <param name="projectile"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
            <param name="hitDirection"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnHitByProjectile(Terraria.NPC,Terraria.Projectile,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when an NPC is hit by a projectile.
            </summary>
            <param name="npc"></param>
            <param name="projectile"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.StrikeNPC(Terraria.NPC,System.Double@,System.Int32,System.Single@,System.Int32,System.Boolean@)">
            <summary>
            Allows you to use a custom damage formula for when an NPC takes damage from any source. For example, you can change the way defense works or use a different crit multiplier. Return false to stop the game from running the vanilla damage formula; returns true by default.
            </summary>
            <param name="npc"></param>
            <param name="damage"></param>
            <param name="defense"></param>
            <param name="knockback"></param>
            <param name="hitDirection"></param>
            <param name="crit"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.BossHeadSlot(Terraria.NPC,System.Int32@)">
            <summary>
            Allows you to customize the boss head texture used by an NPC based on its state. Set index to -1 to stop the texture from being displayed.
            </summary>
            <param name="npc"></param>
            <param name="index">The index for NPCID.Sets.BossHeadTextures</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.BossHeadRotation(Terraria.NPC,System.Single@)">
            <summary>
            Allows you to customize the rotation of an NPC's boss head icon on the map.
            </summary>
            <param name="npc"></param>
            <param name="rotation"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.BossHeadSpriteEffects(Terraria.NPC,Microsoft.Xna.Framework.Graphics.SpriteEffects@)">
            <summary>
            Allows you to flip an NPC's boss head icon on the map.
            </summary>
            <param name="npc"></param>
            <param name="spriteEffects"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.GetAlpha(Terraria.NPC,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which an NPC is drawn. Return null to use the default color (normally light and buff color). Returns null by default.
            </summary>
            <param name="npc"></param>
            <param name="drawColor"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.DrawEffects(Terraria.NPC,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to add special visual effects to an NPC (such as creating dust), and modify the color in which the NPC is drawn.
            </summary>
            <param name="npc"></param>
            <param name="drawColor"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PreDraw(Terraria.NPC,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things behind an NPC, or to modify the way the NPC is drawn. Substract screenPos from the draw position before drawing. Return false to stop the game from drawing the NPC (useful if you're manually drawing the NPC). Returns true by default.
            </summary>
            <param name="npc">The NPC that is being drawn</param>
            <param name="spriteBatch">The spritebatch to draw on</param>
            <param name="screenPos">The screen position used to translate world position into screen position</param>
            <param name="drawColor">The color the NPC is drawn in</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PostDraw(Terraria.NPC,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things in front of this NPC. Substract screenPos from the draw position before drawing. This method is called even if PreDraw returns false.
            </summary>
            <param name="npc">The NPC that is being drawn</param>
            <param name="spriteBatch">The spritebatch to draw on</param>
            <param name="screenPos">The screen position used to translate world position into screen position</param>
            <param name="drawColor">The color the NPC is drawn in</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.DrawBehind(Terraria.NPC,System.Int32)">
            <summary>
            When used in conjunction with "npc.hide = true", allows you to specify that this npc should be drawn behind certain elements. Add the index to one of Main.DrawCacheNPCsMoonMoon, DrawCacheNPCsOverPlayers, DrawCacheNPCProjectiles, or DrawCacheNPCsBehindNonSolidTiles.
            </summary>
            <param name="npc"></param>
            <param name="index"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.DrawHealthBar(Terraria.NPC,System.Byte,System.Single@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Allows you to control how the health bar for the given NPC is drawn. The hbPosition parameter is the same as Main.hbPosition; it determines whether the health bar gets drawn above or below the NPC by default. The scale parameter is the health bar's size. By default, it will be the normal 1f; most bosses set this to 1.5f. Return null to let the normal vanilla health-bar-drawing code to run. Return false to stop the health bar from being drawn. Return true to draw the health bar in the position specified by the position parameter (note that this is the world position, not screen position).
            </summary>
            <param name="npc"></param>
            <param name="hbPosition"></param>
            <param name="scale"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.EditSpawnRate(Terraria.Player,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify the chance of NPCs spawning around the given player and the maximum number of NPCs that can spawn around the player. Lower spawnRates mean a higher chance for NPCs to spawn.
            </summary>
            <param name="player"></param>
            <param name="spawnRate"></param>
            <param name="maxSpawns"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.EditSpawnRange(Terraria.Player,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify the range at which NPCs can spawn around the given player. The spawnRanges determine that maximum distance NPCs can spawn from the player, and the safeRanges determine the minimum distance.
            </summary>
            <param name="player"></param>
            <param name="spawnRangeX"></param>
            <param name="spawnRangeY"></param>
            <param name="safeRangeX"></param>
            <param name="safeRangeY"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.EditSpawnPool(System.Collections.Generic.IDictionary{System.Int32,System.Single},Terraria.ModLoader.NPCSpawnInfo)">
            <summary>
            Allows you to control which NPCs can spawn and how likely each one is to spawn. The pool parameter maps NPC types to their spawning weights (likelihood to spawn compared to other NPCs). A type of 0 in the pool represents the default vanilla NPC spawning.
            </summary>
            <param name="pool"></param>
            <param name="spawnInfo"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SpawnNPC(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to customize an NPC (for example, its position or ai array) after it naturally spawns and before it is synced between servers and clients. As of right now, this only works for modded NPCs.
            </summary>
            <param name="npc"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanChat(Terraria.NPC)">
            <summary>
            Allows you to determine whether this NPC can talk with the player. Return true to allow talking with the player, return false to block this NPC from talking with the player, and return null to use the vanilla code for whether the NPC can talk. Returns null by default.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.GetChat(Terraria.NPC,System.String@)">
            <summary>
            Allows you to modify the chat message of any NPC that the player can talk to.
            </summary>
            <param name="npc"></param>
            <param name="chat"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PreChatButtonClicked(Terraria.NPC,System.Boolean)">
            <summary>
            Allows you to determine if something can happen whenever a button is clicked on this NPC's chat window. The firstButton parameter tells whether the first button or second button (button and button2 from SetChatButtons) was clicked. Return false to prevent the normal code for this button from running. Returns true by default.
            </summary>
            <param name="npc"></param>
            <param name="firstButton"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnChatButtonClicked(Terraria.NPC,System.Boolean)">
            <summary>
            Allows you to make something happen whenever a button is clicked on this NPC's chat window. The firstButton parameter tells whether the first button or second button (button and button2 from SetChatButtons) was clicked.
            </summary>
            <param name="npc"></param>
            <param name="firstButton"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SetupShop(System.Int32,Terraria.Chest,System.Int32@)">
            <summary>
            Allows you to add items to an NPC's shop. The type parameter is the type of the NPC that this shop belongs to. Add an item by setting the defaults of shop.item[nextSlot] then incrementing nextSlot. In the end, nextSlot must have a value of 1 greater than the highest index in shop.item that contains an item. If you want to remove an item, you will have to be familiar with programming.
            </summary>
            <param name="type"></param>
            <param name="shop"></param>
            <param name="nextSlot"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SetupTravelShop(System.Int32[],System.Int32@)">
            <summary>
            Allows you to add items to the traveling merchant's shop. Add an item by setting shop[nextSlot] to the ID of the item you are adding then incrementing nextSlot. In the end, nextSlot must have a value of 1 greater than the highest index in shop that represents an item ID. If you want to remove an item, you will have to be familiar with programming.
            </summary>
            <param name="shop"></param>
            <param name="nextSlot"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanGoToStatue(Terraria.NPC,System.Boolean)">
            <summary>
            Whether this NPC can be telported a King or Queen statue. Return true to allow the NPC to teleport to the statue, return false to block this NPC from teleporting to the statue, and return null to use the vanilla code for whether the NPC can teleport to the statue. Returns null by default.
            </summary>
            <param name="npc">The NPC</param>
            <param name="toKingStatue">Whether the NPC is being teleported to a King or Queen statue.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnGoToStatue(Terraria.NPC,System.Boolean)">
            <summary>
            Allows you to make things happen when this NPC teleports to a King or Queen statue.
            This method is only called server side.
            </summary>
            <param name="npc">The NPC</param>
            <param name="toKingStatue">Whether the NPC was teleported to a King or Queen statue.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.BuffTownNPC(System.Single@,System.Int32@)">
            <summary>
            Allows you to modify the stats of town NPCs. Useful for buffing town NPCs when certain bosses are defeated, etc.
            </summary>
            <param name="damageMult"></param>
            <param name="defense"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackStrength(Terraria.NPC,System.Int32@,System.Single@)">
            <summary>
            Allows you to determine the damage and knockback of a town NPC's attack before the damage is scaled. (More information on scaling in GlobalNPC.BuffTownNPCs.)
            </summary>
            <param name="npc"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackCooldown(Terraria.NPC,System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the cooldown between each of a town NPC's attack. The cooldown will be a number greater than or equal to the first parameter, and less then the sum of the two parameters.
            </summary>
            <param name="npc"></param>
            <param name="cooldown"></param>
            <param name="randExtraCooldown"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackProj(Terraria.NPC,System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the projectile type of a town NPC's attack, and how long it takes for the projectile to actually appear. This hook is only used when the town NPC has an attack type of 0 (throwing), 1 (shooting), or 2 (magic).
            </summary>
            <param name="npc"></param>
            <param name="projType"></param>
            <param name="attackDelay"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackProjSpeed(Terraria.NPC,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to determine the speed at which a town NPC throws a projectile when it attacks. Multiplier is the speed of the projectile, gravityCorrection is how much extra the projectile gets thrown upwards, and randomOffset allows you to randomize the projectile's velocity in a square centered around the original velocity. This hook is only used when the town NPC has an attack type of 0 (throwing), 1 (shooting), or 2 (magic).
            </summary>
            <param name="npc"></param>
            <param name="multiplier"></param>
            <param name="gravityCorrection"></param>
            <param name="randomOffset"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackShoot(Terraria.NPC,System.Boolean@)">
            <summary>
            Allows you to tell the game that a town NPC has already created a projectile and will still create more projectiles as part of a single attack so that the game can animate the NPC's attack properly. Only used when the town NPC has an attack type of 1 (shooting).
            </summary>
            <param name="npc"></param>
            <param name="inBetweenShots"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackMagic(Terraria.NPC,System.Single@)">
            <summary>
            Allows you to control the brightness of the light emitted by a town NPC's aura when it performs a magic attack. Only used when the town NPC has an attack type of 2 (magic)
            </summary>
            <param name="npc"></param>
            <param name="auraLightMultiplier"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackSwing(Terraria.NPC,System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the width and height of the item a town NPC swings when it attacks, which controls the range of the NPC's swung weapon. Only used when the town NPC has an attack type of 3 (swinging).
            </summary>
            <param name="npc"></param>
            <param name="itemWidth"></param>
            <param name="itemHeight"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.DrawTownAttackGun(Terraria.NPC,System.Single@,System.Int32@,System.Int32@)">
            <summary>
            Allows you to customize how a town NPC's weapon is drawn when the NPC is shooting (the NPC must have an attack type of 1). Scale is a multiplier for the item's drawing size, item is the ID of the item to be drawn, and closeness is how close the item should be drawn to the NPC.
            </summary>
            <param name="npc"></param>
            <param name="scale"></param>
            <param name="item"></param>
            <param name="closeness"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.DrawTownAttackSwing(Terraria.NPC,Microsoft.Xna.Framework.Graphics.Texture2D@,System.Int32@,System.Single@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Allows you to customize how a town NPC's weapon is drawn when the NPC is swinging it (the NPC must have an attack type of 3). Item is the Texture2D instance of the item to be drawn (use Main.itemTexture[id of item]), itemSize is the width and height of the item's hitbox (the same values for TownNPCAttackSwing), scale is the multiplier for the item's drawing size, and offset is the offset from which to draw the item from its normal position.
            </summary>
            <param name="npc"></param>
            <param name="item"></param>
            <param name="itemSize"></param>
            <param name="scale"></param>
            <param name="offset"></param>
        </member>
        <member name="T:Terraria.ModLoader.GlobalProjectile">
            <summary>
            This class allows you to modify and use hooks for all projectiles, including vanilla projectiles. Create an instance of an overriding class then call Mod.AddGlobalProjectile to use this.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GlobalProjectile.CloneNewInstances">
            <summary>
            Whether instances of this GlobalProjectile are created through Clone or constructor (by default implementations of NewInstance and Clone()). 
            Defaults to false (using default constructor).
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Terraria.ModLoader.GlobalProjectile.Clone" -->
        <member name="M:Terraria.ModLoader.GlobalProjectile.NewInstance(Terraria.Projectile)">
            <summary>
            Create a new instance of this GlobalProjectile for a Projectile instance. 
            Called at the end of Projectile.SetDefaults.
            If CloneNewInstances is true, just calls Clone()
            Otherwise calls the default constructor and copies fields
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.SetDefaults(Terraria.Projectile)">
            <summary>
            Allows you to set the properties of any and every projectile that gets created.
            </summary>
            <param name="projectile"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PreAI(Terraria.Projectile)">
            <summary>
            Allows you to determine how any projectile behaves. Return false to stop the vanilla AI and the AI hook from being run. Returns true by default.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.AI(Terraria.Projectile)">
            <summary>
            Allows you to determine how any projectile behaves. This will only be called if PreAI returns true.
            </summary>
            <param name="projectile"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PostAI(Terraria.Projectile)">
            <summary>
            Allows you to determine how any projectile behaves. This will be called regardless of what PreAI returns.
            </summary>
            <param name="projectile"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.ShouldUpdatePosition(Terraria.Projectile)">
            <summary>
            Whether or not the given projectile should update its position based on factors such as its velocity, whether it is in liquid, etc. Return false to make its velocity have no effect on its position. Returns true by default.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.TileCollideStyle(Terraria.Projectile,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to determine how a projectile interacts with tiles. Width and height determine the projectile's hitbox for tile collision, and default to -1. Leave them as -1 to use the projectile's real size. Fallthrough determines whether the projectile can fall through platforms, etc., and defaults to true.
            </summary>
            <param name="projectile"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="fallThrough"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.OnTileCollide(Terraria.Projectile,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Allows you to determine what happens when a projectile collides with a tile. OldVelocity is the velocity before tile collision. The velocity that takes tile collision into account can be found with projectile.velocity. Return true to allow the vanilla tile collision code to take place (which normally kills the projectile). Returns true by default.
            </summary>
            <param name="projectile"></param>
            <param name="oldVelocity"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PreKill(Terraria.Projectile,System.Int32)">
            <summary>
            Allows you to determine whether the vanilla code for Kill and the Kill hook will be called. Return false to stop them from being called. Returns true by default. Note that this does not stop the projectile from dying.
            </summary>
            <param name="projectile"></param>
            <param name="timeLeft"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.Kill(Terraria.Projectile,System.Int32)">
            <summary>
            Allows you to control what happens when a projectile is killed (for example, creating dust or making sounds).
            </summary>
            <param name="projectile"></param>
            <param name="timeLeft"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanCutTiles(Terraria.Projectile)">
            <summary>
            Return true or false to specify if the projectile can cut tiles, like vines. Return null for vanilla decision.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CutTiles(Terraria.Projectile)">
            <summary>
            Code ran when the projectile cuts tiles. Only runs if CanCutTiles() returns true. Useful when programming lasers and such.
            </summary>
            <param name="projectile"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanDamage(Terraria.Projectile)">
            <summary>
            Whether or not the given projectile is capable of killing tiles (such as grass) and damaging NPCs/players.
            Return false to prevent it from doing any sort of damage.
            Return true if you want the projectile to do damage regardless of the default blacklist.
            Return null to let the projectile follow vanilla can-damage-anything rules. This is what happens by default.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.MinionContactDamage(Terraria.Projectile)">
            <summary>
            Whether or not a minion can damage NPCs by touching them. Returns false by default. Note that this will only be used if the projectile is considered a pet.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.ModifyDamageHitbox(Terraria.Projectile,Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Allows you to change the hitbox used by a projectile for damaging players and NPCs.
            </summary>
            <param name="projectile"></param>
            <param name="hitbox"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanHitNPC(Terraria.Projectile,Terraria.NPC)">
            <summary>
            Allows you to determine whether a projectile can hit the given NPC. Return true to allow hitting the target, return false to block the projectile from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.ModifyHitNPC(Terraria.Projectile,Terraria.NPC,System.Int32@,System.Single@,System.Boolean@,System.Int32@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that a projectile does to an NPC. This method is only called for the owner of the projectile, meaning that in multi-player, projectiles owned by a player call this method on that client, and projectiles owned by the server such as enemy projectiles call this method on the server.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
            <param name="hitDirection"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.OnHitNPC(Terraria.Projectile,Terraria.NPC,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when a projectile hits an NPC (for example, inflicting debuffs). This method is only called for the owner of the projectile, meaning that in multi-player, projectiles owned by a player call this method on that client, and projectiles owned by the server such as enemy projectiles call this method on the server.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanHitPvp(Terraria.Projectile,Terraria.Player)">
            <summary>
            Allows you to determine whether a projectile can hit the given opponent player. Return false to block the projectile from hitting the target. Returns true by default.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.ModifyHitPvp(Terraria.Projectile,Terraria.Player,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that a projectile does to an opponent player.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.OnHitPvp(Terraria.Projectile,Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when a projectile hits an opponent player.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanHitPlayer(Terraria.Projectile,Terraria.Player)">
            <summary>
            Allows you to determine whether a hostile projectile can hit the given player. Return false to block the projectile from hitting the target. Returns true by default.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.ModifyHitPlayer(Terraria.Projectile,Terraria.Player,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that a hostile projectile does to a player.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.OnHitPlayer(Terraria.Projectile,Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when a hostile projectile hits a player.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.Colliding(Terraria.Projectile,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to use custom collision detection between a projectile and a player or NPC that the projectile can damage. Useful for things like diagonal lasers, projectiles that leave a trail behind them, etc.
            </summary>
            <param name="projectile"></param>
            <param name="projHitbox"></param>
            <param name="targetHitbox"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.GetAlpha(Terraria.Projectile,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which a projectile is drawn. Return null to use the default color (normally light and buff color). Returns null by default.
            </summary>
            <param name="projectile"></param>
            <param name="lightColor"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PreDrawExtras(Terraria.Projectile)">
            <summary>
            Allows you to draw things behind a projectile. Use the Main.EntitySpriteDraw method for drawing. Returns false to stop the game from drawing extras textures related to the projectile (for example, the chains for grappling hooks), useful if you're manually drawing the extras. Returns true by default.
            </summary>
            <param name="projectile"> The projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PreDraw(Terraria.Projectile,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to draw things behind a projectile, or to modify the way the projectile is drawn. Use the Main.EntitySpriteDraw method for drawing. Return false to stop the vanilla projectile drawing code (useful if you're manually drawing the projectile). Returns true by default.
            </summary>
            <param name="projectile"> The projectile. </param>
            <param name="lightColor"> The color of the light at the projectile's center. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PostDraw(Terraria.Projectile,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things in front of a projectile. Use the Main.EntitySpriteDraw method for drawing. This method is called even if PreDraw returns false.
            </summary>
            <param name="projectile"> The projectile. </param>
            <param name="lightColor"> The color of the light at the projectile's center, after being modified by vanilla and other mods. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.DrawBehind(Terraria.Projectile,System.Int32,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            When used in conjunction with "projectile.hide = true", allows you to specify that this projectile should be drawn behind certain elements. Add the index to one and only one of the lists. For example, the Nebula Arcanum projectile draws behind NPCs and tiles.
            </summary>
            <param name="projectile"></param>
            <param name="index"></param>
            <param name="behindNPCsAndTiles"></param>
            <param name="behindNPCs"></param>
            <param name="behindProjectiles"></param>
            <param name="overPlayers"></param>
            <param name="overWiresUI"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanUseGrapple(System.Int32,Terraria.Player)">
            <summary>
            Whether or not a grappling hook that shoots this type of projectile can be used by the given player. Return null to use the default code (whether or not the player is in the middle of firing the grappling hook). Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.SingleGrappleHook(System.Int32,Terraria.Player)">
            <summary>
            Whether or not a grappling hook can only have one hook per player in the world at a time. Return null to use the vanilla code. Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.UseGrapple(Terraria.Player,System.Int32@)">
            <summary>
            This code is called whenever the player uses a grappling hook that shoots this type of projectile. Use it to change what kind of hook is fired (for example, the Dual Hook does this), to kill old hook projectiles, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.NumGrappleHooks(Terraria.Projectile,Terraria.Player,System.Int32@)">
            <summary>
            How many of this type of grappling hook the given player can latch onto blocks before the hooks start disappearing. Change the numHooks parameter to determine this; by default it will be 3.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.GrappleRetreatSpeed(Terraria.Projectile,Terraria.Player,System.Single@)">
            <summary>
            The speed at which the grapple retreats back to the player after not hitting anything. Defaults to 11, but vanilla hooks go up to 24.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.GrapplePullSpeed(Terraria.Projectile,Terraria.Player,System.Single@)">
            <summary>
            The speed at which the grapple pulls the player after hitting something. Defaults to 11, but the Bat Hook uses 16.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.GrappleTargetPoint(Terraria.Projectile,Terraria.Player,System.Single@,System.Single@)">
            <summary>
            The location that the grappling hook pulls the player to. Defaults to the center of the hook projectile.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.GlobalRecipe">
            <summary>
            This class provides hooks that control all recipes in the game.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalRecipe.RecipeAvailable(Terraria.Recipe)">
            <summary>
            Whether or not the conditions are met for the given recipe to be available for the player to use. This hook can be used for conditions unrelated to items or tiles (for example, biome or time).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalRecipe.OnCraft(Terraria.Item,Terraria.Recipe)">
            <summary>
            Allows you to make anything happen when the player uses the given recipe. The item parameter is the item the player has just crafted.
            </summary>
            <param name="item">The item created.</param>
            <param name="recipe">The recipe used to create the item.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalRecipe.ConsumeItem(Terraria.Recipe,System.Int32,System.Int32@)">
            <summary>
            Allows to edit the amount of item the player uses in a recipe.
            </summary>
            <param name="recipe">The recipe used for the craft.</param>
            <param name="type">Type of the ingredient.</param>
            <param name="amount">Modifiable amount of the item consumed.</param>
        </member>
        <member name="T:Terraria.ModLoader.GlobalTile">
            <summary>
            This class allows you to modify the behavior of any tile in the game. Create an instance of an overriding class then call Mod.AddGlobalTile to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.AddToArray(System.Int32[]@,System.Int32)">
            <summary>
            A convenient method for adding an integer to the end of an array. This can be used with the arrays in TileID.Sets.RoomNeeds.
            </summary>
            <param name="array"></param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.AddModTree(System.Int32,Terraria.ModLoader.ModTree)">
            <summary>
            Allows the given type of tile to grow the given modded tree.
            </summary>
            <param name="soilType"></param>
            <param name="tree"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.AddModPalmTree(System.Int32,Terraria.ModLoader.ModPalmTree)">
            <summary>
            Allows the given type of tile to grow the given modded palm tree.
            </summary>
            <param name="soilType"></param>
            <param name="palmTree"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.AddModCactus(System.Int32,Terraria.ModLoader.ModCactus)">
            <summary>
            Allows the given type of tile to grow the given modded cactus.
            </summary>
            <param name="soilType"></param>
            <param name="cactus"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.DropCritterChance(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify the chance the tile at the given coordinates has of spawning a certain critter when the tile is killed.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="wormChance"></param>
            <param name="grassHopperChance"></param>
            <param name="jungleGrubChance"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.Drop(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to customize which items the tile at the given coordinates drops. Return false to stop the game from dropping the tile's default item. Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.CanKillTile(System.Int32,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Allows you to determine whether or not the tile at the given coordinates can be hit by anything. Returns true by default. blockDamaged currently has no use.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="blockDamaged"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.KillTile(System.Int32,System.Int32,System.Int32,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Allows you to determine what happens when the tile at the given coordinates is killed or hit with a pickaxe. If <paramref name="fail"/> is true, the tile will not be mined; <paramref name="effectOnly"/> makes it so that only dust is created; <paramref name="noItem"/> stops items from dropping.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="fail"></param>
            <param name="effectOnly"></param>
            <param name="noItem"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.NearbyEffects(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Allows you to make things happen when the tile is within a certain range of the player (around the same range water fountains and music boxes work). The closer parameter is whether or not the tile is within the range at which things like campfires and banners work.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="closer"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.Dangersense(System.Int32,System.Int32,System.Int32,Terraria.Player)">
            <summary>
            Allows you to determine whether the block glows red when the given player has the Dangersense buff.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.SetSpriteEffects(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteEffects@)">
            <summary>
            Allows you to determine whether or not a tile will draw itself flipped in the world.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="spriteEffects"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.AnimateTile">
            <summary>
            Allows animating tiles that were previously static. Loading a new texture for the tile is required first. Use Main.tileFrameCounter to count game frames and Main.tileFrame to change animation frames.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.DrawEffects(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.DataStructures.TileDrawInfo@)">
            <summary>
            Allows you to make stuff happen whenever the tile at the given coordinates is drawn. For example, creating dust or changing the color the tile is drawn in.
            SpecialDraw will only be called if coordinates are added using Main.instance.TilesRenderer.AddSpecialLegacyPoint here.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="drawData">Various information about the tile that is being drawn, such as color, framing, glow textures, etc.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.SpecialDraw(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Special Draw. Only called if coordinates are added using Main.instance.TilesRenderer.AddSpecialLegacyPoint during DrawEffects. Useful for drawing things that would otherwise be impossible to draw due to draw order, such as items in item frames.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.TileFrame(System.Int32,System.Int32,System.Int32,System.Boolean@,System.Boolean@)">
            <summary>
            Called for every tile that updates due to being placed or being next to a tile that is changed. Return false to stop the game from carrying out its default TileFrame operations. Returns true by default.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="resetFrame"></param>
            <param name="noBreak"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.AdjTiles(System.Int32)">
            <summary>
            Allows you to determine which tiles the given tile type can be considered as when looking for crafting stations.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.RightClick(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when any tile is right-clicked by the player.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.MouseOver(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when the mouse hovers over any tile. Useful for showing item icons or text on the mouse.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.MouseOverFar(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when the mouse hovers over any tile, even when the player is far away. Useful for showing what's written on signs, etc.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.AutoSelect(System.Int32,System.Int32,System.Int32,Terraria.Item)">
            <summary>
            Allows you to determine whether the given item can become selected when the cursor is hovering over a tile and the auto selection keybind is pressed.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.PreHitWire(System.Int32,System.Int32,System.Int32)">
            <summary>
            Whether or not the vanilla HitWire code and the HitWire hook is allowed to run. Useful for overriding vanilla behavior by returning false. Returns true by default.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.HitWire(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when a wire current passes through any tile.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.Slope(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to control how hammers slope any tile. Return true to allow the tile to slope normally. Returns true by default. Called on the local Client and Single Player.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.FloorVisuals(System.Int32,Terraria.Player)">
            <summary>
            Allows you to make something happen when a player stands on the given type of tile. For example, you can make the player slide as if on ice.
            </summary>
            <param name="type"></param>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.ChangeWaterfallStyle(System.Int32,System.Int32@)">
            <summary>
            Allows you to change the style of waterfall that passes through or over any tile.
            </summary>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.SaplingGrowthType(System.Int32,System.Int32@)">
            <summary>
            Allows a tile to support a sapling that can eventually grow into a tree. The type of the sapling should be returned here. Returns -1 by default. The style parameter will determine which sapling is chosen if multiple sapling types share the same ID; even if you only have a single sapling in an ID, you must still set this to 0.
            </summary>
            <param name="type"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="P:Terraria.ModLoader.GlobalType.InstancePerEntity">
            <summary>
            Whether to create a new instance of this Global for every entity that exists. 
            Useful for storing information on an entity. Defaults to false. 
            Return true if you need to store information (have non-static fields).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalType`1.AppliesToEntity(`0,System.Boolean)">
            <summary>
            Use this to control whether or not this global should be associated with the provided entity instance.
            </summary>
            <param name="entity"> The entity for which the global instantion is being checked. </param>
            <param name="lateInstantiation">
            Whether this check occurs before or after the ModX.SetDefaults call.
            <br/> If you're relying on entity values that can be changed by that call, you should likely prefix your return value with the following:
            <code> lateInstantiation &amp;&amp; ... </code>
            </param>
        </member>
        <member name="T:Terraria.ModLoader.GlobalWall">
            <summary>
            This class allows you to modify the behavior of any wall in the game (although admittedly walls don't have much behavior). Create an instance of an overriding class then call Mod.AddGlobalWall to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalWall.Drop(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Allows you to customize which items the wall at the given coordinates drops. Return false to stop the game from dropping the wall's default item (the dropType parameter). Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalWall.KillWall(System.Int32,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Allows you to determine what happens when the wall at the given coordinates is killed or hit with a hammer. Fail determines whether the wall is mined (whether it is killed).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GoreLoader.AddGoreFromTexture``1(Terraria.ModLoader.Mod,System.String)">
            <summary> Registers a new gore with the provided texture. </summary>
        </member>
        <member name="T:Terraria.ModLoader.ILoadable">
            <summary>
            Allows for implementing types to be loaded and unloaded.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ILoadable.Load(Terraria.ModLoader.Mod)">
            <summary>
            Called when loading the type.
            </summary>
            <param name="mod">The mod instance associated with this type.</param>
        </member>
        <member name="M:Terraria.ModLoader.ILoadable.Unload">
            <summary>
            Called during unloading when needed.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.IModType.Mod">
            <summary>
             The mod this belongs to.
             </summary>
        </member>
        <member name="P:Terraria.ModLoader.IModType.Name">
            <summary>
            The internal name of this instance.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.IModType.FullName">
            <summary>
            => $"{Mod.Name}/{Name}"
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.InfoDisplay.Type">
            <summary>
            This is the internal ID of this InfoDisplay.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.InfoDisplay.InfoName">
            <summary>
            This is the translation that is used behind <see cref="P:Terraria.ModLoader.InfoDisplay.DisplayName"/>. The translation will show up when hovering over this info display.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.InfoDisplay.DisplayName">
            <summary>
            This is the name that will show up when hovering over this info display.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.InfoDisplay.Active">
            <summary>
            This dictates whether or not this info display should be active.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.InfoDisplay.DisplayValue">
            <summary>
            This is the value that will show up when viewing this display in normal play, right next to the icon.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Instanced`1">
            <summary> The purpose of this struct is to micro-optimize lookups of GlobalX indices by providing these associations without additional retrievals from the heap. </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackupIO.RunArchiving(System.Action{Ionic.Zip.ZipFile,System.Boolean,System.String},System.Boolean,System.String,System.String,System.String)">
            <summary>
            Run a given archiving task, which will archive to a backup .zip file
            Zip entries added will be compressed
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackupIO.AddZipEntry(Ionic.Zip.ZipFile,System.String,System.Boolean)">
            <summary>
            Adds a new entry to the archive .zip file
            Will use the best compression level using Deflate
            Some files are already compressed and will not be compressed further
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackupIO.DeleteOldArchives(System.String,System.Boolean,System.String)">
            <summary>
            Will delete old archive files
            Algorithm details:
            - One backup per day for the last week
            - One backup per week for the last month
            - One backup per month for all time
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.BackupIO.World">
            <summary>
            Responsible for archiving world backups
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.BackupIO.Player">
            <summary>
            Responsible for archiving player backups
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackupIO.Player.WriteArchive(Ionic.Zip.ZipFile,System.Boolean,System.String)">
            <summary>
            Write the archive. Writes the .plr and .tplr files, then writes the player directory
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Terraria.ModLoader.BackupIO.Player.WriteCloudFiles(Ionic.Zip.ZipFile,System.String)" -->
        <member name="M:Terraria.ModLoader.BackupIO.Player.WriteLocalFiles(Ionic.Zip.ZipFile,System.String)">
            <summary>
            Write local files, which simply writes the entire player dir
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.IO.TileIO.NextLocation(System.Int32@,System.Int32@)">
            <summary>
            Increases the provided x and y coordinates to the next location in accordance with order-sensitive position IDs.
            Typically used in clustering duplicate data across multiple consecutive locations, such as in ModLoader.TileIO 
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns> False if x and y cannot be increased further (end of the world)  </returns>
        </member>
        <member name="T:Terraria.ModLoader.ItemLoader">
            <summary>
            This serves as the central class from which item-related functions are carried out. It also stores a list of mod items by ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GetItem(System.Int32)">
            <summary>
            Gets the ModItem instance corresponding to the specified type. Returns null if no modded item has the given type.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PrefixChance(Terraria.Item,System.Int32,Terraria.Utilities.UnifiedRandom)">
            <summary>
            Allows for blocking, forcing and altering chance of prefix rolling.
            False (block) takes precedence over True (force).
            Null gives vanilla behaviour
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanUseItem(Terraria.Item,Terraria.Player)">
            <summary>
            Returns the "and" operation on the results of ModItem.CanUseItem and all GlobalItem.CanUseItem hooks.
            Does not fail fast (every hook is called).
            </summary>
            <param name="item">The item.</param>
            <param name="player">The player holding the item.</param>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UseStyle(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Calls ModItem.UseStyle and all GlobalItem.UseStyle hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.HoldStyle(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            If the player is not holding onto a rope and is not in the middle of using an item, calls ModItem.HoldStyle and all GlobalItem.HoldStyle hooks.
            <br/> Returns whether or not the vanilla logic should be skipped.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.HoldItem(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.HoldItem and all GlobalItem.HoldItem hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GetHealLife(Terraria.Item,Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Calls ModItem.GetHealLife, then all GlobalItem.GetHealLife hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GetHealMana(Terraria.Item,Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Calls ModItem.GetHealMana, then all GlobalItem.GetHealMana hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyManaCost(Terraria.Item,Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Calls ModItem.ModifyManaCost, then all GlobalItem.ModifyManaCost hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnMissingMana(Terraria.Item,Terraria.Player,System.Int32)">
            <summary>
            Calls ModItem.OnMissingMana, then all GlobalItem.OnMissingMana hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnConsumeMana(Terraria.Item,Terraria.Player,System.Int32)">
            <summary>
            Calls ModItem.OnConsumeMana, then all GlobalItem.OnConsumeMana hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyWeaponDamage(Terraria.Item,Terraria.Player,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Calls ModItem.HookModifyWeaponDamage, then all GlobalItem.HookModifyWeaponDamage hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyWeaponKnockback(Terraria.Item,Terraria.Player,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Calls ModItem.ModifyWeaponKnockback, then all GlobalItem.ModifyWeaponKnockback hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyWeaponCrit(Terraria.Item,Terraria.Player,System.Int32@)">
            <summary>
            Calls ModItem.ModifyWeaponCrit, then all GlobalItem.ModifyWeaponCrit hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CheckProjOnSwing(Terraria.Player,Terraria.Item)">
            <summary>
            If the item is a modded item, ModItem.checkProjOnSwing is true, and the player is not at the beginning of the item's use animation, sets canShoot to false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PickAmmo(Terraria.Item,Terraria.Item,Terraria.Player,System.Int32@,System.Single@,System.Int32@,System.Single@)">
            <summary>
            Calls ModItem.PickAmmo, then all GlobalItem.PickAmmo hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.ConsumeAmmo for the weapon, ModItem.ConsumeAmmo for the ammo, then each GlobalItem.ConsumeAmmo hook for the weapon and ammo, until one of them returns false. If all of them return true, returns true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.OnConsumeAmmo for the weapon, ModItem.OnConsumeAmmo for the ammo, then each GlobalItem.OnConsumeAmmo hook for the weapon and ammo.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanShoot(Terraria.Item,Terraria.Player)">
            <summary>
            Calls each GlobalItem.CanShoot hook, then ModItem.CanShoot, until one of them returns false. If all of them return true, returns true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyShootStats(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            Calls ModItem.ModifyShootStats, then each GlobalItem.ModifyShootStats hook.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.Shoot(Terraria.Item,Terraria.Player,Terraria.DataStructures.ProjectileSource_Item_WithAmmo,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single,System.Boolean)">
            <summary>
            Calls each GlobalItem.Shoot hook then, if none of them returns false, calls the ModItem.Shoot hook and returns its value.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UseItemHitbox(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle@,System.Boolean@)">
            <summary>
            Calls ModItem.UseItemHitbox, then all GlobalItem.UseItemHitbox hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.MeleeEffects(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Calls ModItem.MeleeEffects and all GlobalItem.MeleeEffects hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC)">
            <summary>
            Gathers the results of ModItem.CanHitNPC and all GlobalItem.CanHitNPC hooks. 
            If any of them returns false, this returns false. 
            Otherwise, if any of them returns true then this returns true. 
            If all of them return null, this returns null.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC,System.Int32@,System.Single@,System.Boolean@)">
            <summary>
            Calls ModItem.ModifyHitNPC, then all GlobalItem.ModifyHitNPC hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC,System.Int32,System.Single,System.Boolean)">
            <summary>
            Calls ModItem.OnHitNPC and all GlobalItem.OnHitNPC hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanHitPvp(Terraria.Item,Terraria.Player,Terraria.Player)">
            <summary>
            Calls all GlobalItem.CanHitPvp hooks, then ModItem.CanHitPvp, until one of them returns false. 
            If all of them return true, this returns true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyHitPvp(Terraria.Item,Terraria.Player,Terraria.Player,System.Int32@,System.Boolean@)">
            <summary>
            Calls ModItem.ModifyHitPvp, then all GlobalItem.ModifyHitPvp hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnHitPvp(Terraria.Item,Terraria.Player,Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Calls ModItem.OnHitPvp and all GlobalItem.OnHitPvp hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UseItem(Terraria.Item,Terraria.Player)">
            <summary>
            Returns false if any of ModItem.UseItem or GlobalItem.UseItem return false.
            Returns true if anything returns true without returning false.
            Returns null by default.
            Does not fail fast (calls every hook)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ConsumeItem(Terraria.Item,Terraria.Player)">
            <summary>
            If ModItem.ConsumeItem or any of the GlobalItem.ConsumeItem hooks returns false, sets consume to false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnConsumeItem(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.OnConsumeItem and all GlobalItem.OnConsumeItem hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UseItemFrame(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.UseItemFrame, then all GlobalItem.UseItemFrame hooks, until one of them returns true. Returns whether any of the hooks returned true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.HoldItemFrame(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.HoldItemFrame, then all GlobalItem.HoldItemFrame hooks, until one of them returns true. Returns whether any of the hooks returned true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.AltFunctionUse(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.AltFunctionUse, then all GlobalItem.AltFunctionUse hooks, until one of them returns true. Returns whether any of the hooks returned true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateInventory(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.UpdateInventory and all GlobalItem.UpdateInventory hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateEquip(Terraria.Item,Terraria.Player)">
            <summary>
            Hook at the end of Player.VanillaUpdateEquip can be called from modded slots for modded equipments
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateAccessory(Terraria.Item,Terraria.Player,System.Boolean)">
            <summary>
            Hook at the end of Player.ApplyEquipFunctional can be called from modded slots for modded equipments
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateVanity(Terraria.Item,Terraria.Player)">
            <summary>
            Hook at the end of Player.ApplyEquipVanity can be called from modded slots for modded equipments
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateArmorSet(Terraria.Player,Terraria.Item,Terraria.Item,Terraria.Item)">
            <summary>
            If the head's ModItem.IsArmorSet returns true, calls the head's ModItem.UpdateArmorSet. This is then repeated for the body, then the legs. Then for each GlobalItem, if GlobalItem.IsArmorSet returns a non-empty string, calls GlobalItem.UpdateArmorSet with that string.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PreUpdateVanitySet(Terraria.Player)">
            <summary>
            If the player's head texture's IsVanitySet returns true, calls the equipment texture's PreUpdateVanitySet. This is then repeated for the player's body, then the legs. Then for each GlobalItem, if GlobalItem.IsVanitySet returns a non-empty string, calls GlobalItem.PreUpdateVanitySet, using player.head, player.body, and player.legs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateVanitySet(Terraria.Player)">
            <summary>
            If the player's head texture's IsVanitySet returns true, calls the equipment texture's UpdateVanitySet. This is then repeated for the player's body, then the legs. Then for each GlobalItem, if GlobalItem.IsVanitySet returns a non-empty string, calls GlobalItem.UpdateVanitySet, using player.head, player.body, and player.legs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ArmorSetShadows(Terraria.Player)">
            <summary>
            If the player's head texture's IsVanitySet returns true, calls the equipment texture's ArmorSetShadows. This is then repeated for the player's body, then the legs. Then for each GlobalItem, if GlobalItem.IsVanitySet returns a non-empty string, calls GlobalItem.ArmorSetShadows, using player.head, player.body, and player.legs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.SetMatch(System.Int32,System.Int32,System.Boolean,System.Int32@,System.Boolean@)">
            <summary>
            Calls EquipTexture.SetMatch, then all GlobalItem.SetMatch hooks.
            </summary>   
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanRightClick(Terraria.Item)">
            <summary>
            Calls ModItem.CanRightClick, then all GlobalItem.CanRightClick hooks, until one of the returns true. If one of the returns true, returns Main.mouseRight. Otherwise, returns false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.RightClick(Terraria.Item,Terraria.Player)">
            <summary>
            If Main.mouseRightRelease is true, the following steps are taken:
            1. Call ModItem.RightClick
            2. Calls all GlobalItem.RightClick hooks
            3. Call ItemLoader.ConsumeItem, and if it returns true, decrements the item's stack
            4. Sets the item's type to 0 if the item's stack is 0
            5. Plays the item-grabbing sound
            6. Sets Main.stackSplit to 30
            7. Sets Main.mouseRightRelease to false
            8. Calls Recipe.FindRecipes.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.IsModBossBag(Terraria.Item)">
            <summary>
            Returns whether ModItem.bossBagNPC is greater than 0. Returns false if item is not a modded item.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OpenBossBag(System.Int32,Terraria.Player,System.Int32@)">
            <summary>
            If the item is a modded item and ModItem.bossBagNPC is greater than 0, calls ModItem.OpenBossBag and sets npc to ModItem.bossBagNPC.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PreOpenVanillaBag(System.String,Terraria.Player,System.Int32)">
            <summary>
            Calls each GlobalItem.PreOpenVanillaBag hook until one of them returns false. Returns true if all of them returned true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OpenVanillaBag(System.String,Terraria.Player,System.Int32)">
            <summary>
            Calls all GlobalItem.OpenVanillaBag hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanStackInWorld(Terraria.Item,Terraria.Item)">
            <summary>
            Calls all GlobalItem.CanStackInWorld hooks until one returns false then ModItem.CanStackInWorld. Returns whether any of the hooks returned false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ReforgePrice(Terraria.Item,System.Int32@,System.Boolean@)">
            <summary>
            Call all ModItem.ReforgePrice, then GlobalItem.ReforgePrice hooks.
            </summary>
            <param name="canApplyDiscount"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PreReforge(Terraria.Item)">
            <summary>
            Calls ModItem.PreReforge, then all GlobalItem.PreReforge hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PostReforge(Terraria.Item)">
            <summary>
            Calls ModItem.PostReforge, then all GlobalItem.PostReforge hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.DrawHands(Terraria.Player,System.Boolean@,System.Boolean@)">
            <summary>
            Calls the item's body equipment texture's DrawHands hook, then all GlobalItem.DrawHands hooks.
            "body" is the player's associated body equipment texture.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.DrawHair(Terraria.Player,System.Boolean@,System.Boolean@)">
            <summary>
            Calls the item's head equipment texture's DrawHair hook, then all GlobalItem.DrawHair hooks.
            "head" is the player's associated head equipment texture.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.DrawHead(Terraria.Player)">
            <summary>
            Calls the item's head equipment texture's DrawHead hook, then all GlobalItem.DrawHead hooks, until one of them returns false. Returns true if none of them return false.
            "head" is the player's associated head equipment texture.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.DrawBody(Terraria.Player)">
            <summary>
            Calls the item's body equipment texture's DrawBody hook, then all GlobalItem.DrawBody hooks, until one of them returns false. Returns true if none of them return false.
            "body" is the player's associated body equipment texture.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.DrawLegs(Terraria.Player)">
            <summary>
            Calls the item's leg equipment texture's DrawLegs hook, then the item's shoe equipment texture's DrawLegs hook, then all GlobalItem.DrawLegs hooks, until one of them returns false. Returns true if none of them return false.
            "legs" and "shoes" are the player's associated legs and shoes equipment textures.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.DrawArmorColor(Terraria.ModLoader.EquipType,System.Int32,Terraria.Player,System.Single,Microsoft.Xna.Framework.Color@,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Calls the item's equipment texture's DrawArmorColor hook, then all GlobalItem.DrawArmorColor hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ArmorArmGlowMask(System.Int32,Terraria.Player,System.Single,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Calls the item's body equipment texture's ArmorArmGlowMask hook, then all GlobalItem.ArmorArmGlowMask hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GetWing(Terraria.Player)">
            <summary>s
            Returns the wing item that the player is functionally using. If player.wingsLogic has been modified, so no equipped wing can be found to match what the player is using, this creates a new Item object to return.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.VerticalWingSpeeds(Terraria.Player,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            If the player is using wings, this uses the result of GetWing, and calls ModItem.VerticalWingSpeeds then all GlobalItem.VerticalWingSpeeds hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.HorizontalWingSpeeds(Terraria.Player)">
            <summary>
            If the player is using wings, this uses the result of GetWing, and calls ModItem.HorizontalWingSpeeds then all GlobalItem.HorizontalWingSpeeds hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.WingUpdate(Terraria.Player,System.Boolean)">
            <summary>
            If wings can be seen on the player, calls the player's wing's equipment texture's WingUpdate and all GlobalItem.WingUpdate hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.Update(Terraria.Item,System.Single@,System.Single@)">
            <summary>
            Calls ModItem.Update, then all GlobalItem.Update hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanBurnInLava(Terraria.Item)">
            <summary>
            Calls ModItem.CanBurnInLava.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PostUpdate(Terraria.Item)">
            <summary>
            Calls ModItem.PostUpdate and all GlobalItem.PostUpdate hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GrabRange(Terraria.Item,Terraria.Player,System.Int32@)">
            <summary>
            Calls ModItem.GrabRange, then all GlobalItem.GrabRange hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GrabStyle(Terraria.Item,Terraria.Player)">
            <summary>
            Calls all GlobalItem.GrabStyle hooks then ModItem.GrabStyle, until one of them returns true. Returns whether any of the hooks returned true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnPickup(Terraria.Item,Terraria.Player)">
            <summary>
            Calls all GlobalItem.OnPickup hooks then ModItem.OnPickup, until one of the returns false. Returns true if all of the hooks return true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GetAlpha(Terraria.Item,Microsoft.Xna.Framework.Color)">
            <summary>
            Calls all GlobalItem.GetAlpha hooks then ModItem.GetAlpha, until one of them returns a color, and returns that color. Returns null if all of the hooks return null.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PreDrawInWorld(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single@,System.Single@,System.Int32)">
            <summary>
            Returns the "and" operator on the results of ModItem.PreDrawInWorld and all GlobalItem.PreDrawInWorld hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PostDrawInWorld(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Int32)">
            <summary>
            Calls ModItem.PostDrawInWorld, then all GlobalItem.PostDrawInWorld hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PreDrawInInventory(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Returns the "and" operator on the results of all GlobalItem.PreDrawInInventory hooks and ModItem.PreDrawInInventory.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PostDrawInInventory(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Calls ModItem.PostDrawInInventory, then all GlobalItem.PostDrawInInventory hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.KeybindLoader.RegisterKeybind(Terraria.ModLoader.Mod,System.String,Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Registers a keybind with a <paramref name="name"/> and <paramref name="defaultBinding"/>. Use the returned <see cref="T:Terraria.ModLoader.ModKeybind"/> to detect when buttons are pressed.
            </summary>
            <param name="mod"> The mod that this keybind will belong to. Usually, this would be your mod instance. </param>
            <param name="name"> The name of the keybind. </param>
            <param name="defaultBinding"> The default binding. </param>
        </member>
        <member name="M:Terraria.ModLoader.KeybindLoader.RegisterKeybind(Terraria.ModLoader.Mod,System.String,System.String)">
            <summary>
            Registers a keybind with a <paramref name="name"/> and <paramref name="defaultBinding"/>. Use the returned <see cref="T:Terraria.ModLoader.ModKeybind"/> to detect when buttons are pressed.
            </summary>
            <param name="mod"> The mod that this keybind will belong to. Usually, this would be your mod instance. </param>
            <param name="name"> The name of the keybind. </param>
            <param name="defaultBinding"> The default binding. </param>
        </member>
        <member name="T:Terraria.ModLoader.Loader">
            <summary> Serves as a highest-level base for loaders. </summary>
        </member>
        <member name="M:Terraria.ModLoader.Loader.Initialize(System.Int32)">
            <summary>
            Initilizes the loader based on the vanilla count of the ModType.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Loader`1">
            <summary> Serves as a highest-level base for loaders of mod types. </summary>
        </member>
        <member name="M:Terraria.ModLoader.LocalizationLoader.CreateTranslation(Terraria.ModLoader.Mod,System.String)">
            <summary>
            Creates a <see cref="T:Terraria.ModLoader.ModTranslation"/> object using the provided mod for a prefix to the key. You can use the resulting object in <see cref="M:Terraria.ModLoader.LocalizationLoader.AddTranslation(Terraria.ModLoader.ModTranslation)"/>.
            </summary>
            <param name="mod"> The mod that this translation is for. </param>
            <param name="key"> The key for the ModTranslation. The full key will be 'Mods.{<paramref name="mod"/>.Name}.{<paramref name="key"/>}'. </param>
        </member>
        <member name="M:Terraria.ModLoader.LocalizationLoader.CreateTranslation(System.String)">
            <summary>
            Creates a <see cref="T:Terraria.ModLoader.ModTranslation"/> object using the provided full key. You can use the resulting object in <see cref="M:Terraria.ModLoader.LocalizationLoader.AddTranslation(Terraria.ModLoader.ModTranslation)"/>.
            </summary>
            <param name="key"> The full key for the ModTranslation. </param>
        </member>
        <member name="M:Terraria.ModLoader.LocalizationLoader.AddTranslation(Terraria.ModLoader.ModTranslation)">
            <summary>
            Adds a <see cref="T:Terraria.ModLoader.ModTranslation"/> to the game so that you can use <see cref="M:Terraria.Localization.Language.GetText(System.String)"/> to get a <see cref="T:Terraria.Localization.LocalizedText"/>.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Logging.PublicLogger">
            <summary> Available for logging when Mod.Logging is not available, such as field initialization </summary>
        </member>
        <member name="T:Terraria.ModLoader.Mod">
            <summary>
            Mod is an abstract class that you will override. It serves as a central place from which the mod's contents are stored. It provides methods for you to use or override.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.File">
            <summary>
            The TmodFile object created when tModLoader reads this mod.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.Code">
            <summary>
            The assembly code this is loaded when tModLoader loads this mod.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.Logger">
            <summary>
            A logger with this mod's name for easy logging.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.Name">
            <summary>
            Stores the name of the mod. This name serves as the mod's identification, and also helps with saving everything your mod adds. By default this returns the name of the folder that contains all your code and stuff.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.TModLoaderVersion">
            <summary>
            The version of tModLoader that was being used when this mod was built.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.Version">
            <summary>
            This version number of this mod.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.Side">
            <summary>
            The ModSide that controls how this mod is synced between client and server.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.DisplayName">
            <summary>
            The display name of this mod in the Mods menu.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddEquipTexture(Terraria.ModLoader.ModItem,Terraria.ModLoader.EquipType,System.String)">
            <summary>
            Adds an equipment texture of the specified type, internal name, and associated item to your mod. 
            (The item parameter may be null if you don't want to associate an item with the texture.) 
            You can then get the ID for your texture by calling EquipLoader.GetEquipTexture, and using the EquipTexture's Slot property. 
            If the EquipType is EquipType.Body, make sure that you also provide an armTexture and a femaleTexture. 
            Returns the ID / slot that is assigned to the equipment texture.
            </summary>
            <param name="item">The item.</param>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <param name="texture">The texture.</param>
            <param name="armTexture">The arm texture (for body slots).</param>
            <param name="femaleTexture">The female texture (for body slots), if missing the regular body texture is used.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddEquipTexture(Terraria.ModLoader.EquipTexture,Terraria.ModLoader.ModItem,Terraria.ModLoader.EquipType,System.String)">
            <summary>
            Adds an equipment texture of the specified type, internal name, and associated item to your mod. 
            This method is different from the other AddEquipTexture in that you can specify the class of the equipment texture, thus allowing you to override EquipmentTexture's hooks. 
            All other parameters are the same as the other AddEquipTexture.
            </summary>
            <param name="equipTexture">The equip texture.</param>
            <param name="item">The item.</param>
            <param name="type">The type.</param>
            <param name="texture">The texture.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetEquipTexture(System.String,Terraria.ModLoader.EquipType)">
            <summary>
            Gets the EquipTexture instance corresponding to the name and EquipType. Returns null if no EquipTexture with the given name and EquipType is found.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetEquipSlot(System.String,Terraria.ModLoader.EquipType)">
            <summary>
            Gets the slot/ID of the equipment texture corresponding to the given name. Returns -1 if no EquipTexture with the given name is found.
            </summary>
            <param name="name">The name.</param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetAccessorySlot(System.String,Terraria.ModLoader.EquipType)">
            <summary>
            Same as GetEquipSlot, except returns the number as an sbyte (signed byte) for your convenience.
            </summary>
            <param name="name">The name.</param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.Find``1(System.String)">
            <summary> Attempts to find the content instance from this mod with the specified name. Caching the result is recommended.<para/>This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:Terraria.ModLoader.Mod.TryFind``1(System.String,``0@)">
            <summary> Safely attempts to find the content instance from this mod with the specified name. Caching the result is recommended. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddNPCHeadTexture(System.Int32,System.String)">
            <summary>
            Assigns a head texture to the given town NPC type.
            </summary>
            <param name="npcType">Type of the NPC.</param>
            <param name="texture">The texture.</param>
            <returns>The boss head txture slot</returns>
            <exception cref="T:Terraria.ModLoader.Exceptions.MissingResourceException"></exception>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddBossHeadTexture(System.String,System.Int32)">
            <summary>
            Assigns a head texture that can be used by NPCs on the map.
            </summary>
            <param name="texture">The texture.</param>
            <param name="npcType">An optional npc id for NPCID.Sets.BossHeadTextures</param>
            <returns>The boss head txture slot</returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddSound(Terraria.ModLoader.SoundType,System.String,Terraria.ModLoader.ModSound)">
            <summary>
            Adds the given sound file to the game as the given type of sound and with the given custom sound playing. If no ModSound instance is provided, the custom sound will play in a similar manner as the default vanilla ones.
            </summary>
            <param name="type">The type.</param>
            <param name="soundPath">The sound path.</param>
            <param name="modSound">The mod sound.</param>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetSoundSlot(Terraria.ModLoader.SoundType,System.String)">
            <summary>
            Shorthand for calling SoundLoader.GetSoundSlot(type, this.Name + '/' + name).
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetLegacySoundSlot(Terraria.ModLoader.SoundType,System.String)">
            <summary>
            Shorthand for calling SoundLoader.GetLegacySoundSlot(type, this.Name + '/' + name).
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddMusicBox(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to tie a music ID, and item ID, and a tile ID together to form a music box. When music with the given ID is playing, equipped music boxes have a chance to change their ID to the given item type. When an item with the given item type is equipped, it will play the music that has musicSlot as its ID. When a tile with the given type and Y-frame is nearby, if its X-frame is >= 36, it will play the music that has musicSlot as its ID.
            </summary>
            <param name="musicSlot">The music slot.</param>
            <param name="itemType">Type of the item.</param>
            <param name="tileType">Type of the tile.</param>
            <param name="tileFrameY">The tile frame y.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Cannot assign music box to vanilla music ID " + musicSlot
            or
            Music ID " + musicSlot + " does not exist
            or
            Cannot assign music box to vanilla item ID " + itemType
            or
            Item ID " + itemType + " does not exist
            or
            Cannot assign music box to vanilla tile ID " + tileType
            or
            Tile ID " + tileType + " does not exist
            </exception>
            <exception cref="T:System.ArgumentException">
            Music ID " + musicSlot + " has already been assigned a music box
            or
            Item ID " + itemType + " has already been assigned a music
            or
            or
            Y-frame must be divisible by 36
            </exception>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetFileBytes(System.String)">
            <summary>
            Retrieve contents of files within the tmod file
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetFileStream(System.String,System.Boolean)">
            <summary>
            Retrieve contents of files within the tmod file
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetMusic(System.String)">
            <summary>
            Shorthand for calling ModContent.GetMusic(this.FileName(name)).
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
            <exception cref="T:Terraria.ModLoader.Exceptions.MissingResourceException"></exception>
        </member>
        <member name="M:Terraria.ModLoader.Mod.MusicExists(System.String)">
            <summary>
            Shorthand for calling ModLoader.MusicExists(this.FileName(name)).
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.Call(System.Object[])">
            <summary>
            Used for weak inter-mod communication. This allows you to interact with other mods without having to reference their types or namespaces, provided that they have implemented this method.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetPacket(System.Int32)">
            <summary>
            Creates a ModPacket object that you can write to and then send between servers and clients.
            </summary>
            <param name="capacity">The capacity.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Cannot get packet for " + Name + " because it does not exist on the other side</exception>
        </member>
        <member name="M:Terraria.ModLoader.Mod.Load">
            <summary>
            Override this method to add most of your content to your mod. Here you will call other methods such as AddItem. This is guaranteed to be called after all content has been autoloaded.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.PostSetupContent">
            <summary>
            Allows you to load things in your mod after its content has been setup (arrays have been resized to fit the content, etc).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.Unload">
            <summary>
            This is called whenever this mod is unloaded from the game. Use it to undo changes that you've made in Load that aren't automatically handled (for example, modifying the texture of a vanilla item). Mods are guaranteed to be unloaded in the reverse order they were loaded in.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.ExtraPlayerBuffSlots">
            <summary>
            The amount of extra buff slots this mod desires for Players. This value is checked after Mod.Load but before Mod.PostSetupContent. The actual number of buffs the player can use will be 22 plus the max value of all enabled mods. In-game use Player.MaxBuffs to check the maximum number of buffs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddRecipeGroups">
            <summary>
            Override this method to add recipe groups to this mod. You must add recipe groups by calling the RecipeGroup.RegisterGroup method here. A recipe group is a set of items that can be used interchangeably in the same recipe.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddRecipes">
            <summary>
            Override this method to add recipes to the game. It is recommended that you do so through instances of Recipe, since it provides methods that simplify recipe creation.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.PostAddRecipes">
            <summary>
            This provides a hook into the mod-loading process immediately after recipes have been added. You can use this to edit recipes added by other mods.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.Close">
            <summary>
            Close is called before Unload, and may be called at any time when mod unloading is imminent (such as when downloading an update, or recompiling)
            Use this to release any additional file handles, or stop streaming music. 
            Make sure to call `base.Close()` at the end
            May be called multiple times before Unload
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.HandlePacket(System.IO.BinaryReader,System.Int32)">
            <summary>
            Called whenever a net message / packet is received from a client (if this is a server) or the server (if this is a client). whoAmI is the ID of whomever sent the packet (equivalent to the Main.myPlayer of the sender), and reader is used to read the binary data of the packet.
            </summary>
            <param name="reader">The reader.</param>
            <param name="whoAmI">The player the message is from.</param>
        </member>
        <member name="P:Terraria.ModLoader.ModBackgroundStyle.Slot">
            <summary>
            The ID of this underground background style.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModUndergroundBackgroundStyle">
            <summary>
            Each background style determines in its own way how exactly the background is drawn. This class serves as a collection of functions for underground backgrounds.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModUndergroundBackgroundStyle.FillTextureArray(System.Int32[])">
            <summary>
            Allows you to determine which textures make up the background by assigning their background slots/IDs to the given array. Mod.GetBackgroundSlot may be useful here. Index 0 is the texture on the border of the ground and sky layers. Index 1 is the texture drawn between rock and ground layers. Index 2 is the texture on the border of ground and rock layers. Index 3 is the texture drawn in the rock layer. The border images are 160x16 pixels, and the others are 160x96, but it seems like the right 32 pixels of each is a duplicate of the far left 32 pixels.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModSurfaceBackgroundStyle">
            <summary>
            Each background style determines in its own way how exactly the background is drawn. This class serves as a collection of functions for above-ground backgrounds.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSurfaceBackgroundStyle.ModifyFarFades(System.Single[],System.Single)">
            <summary>
            Allows you to modify the transparency of all background styles that exist. In general, you should move the index equal to this style's slot closer to 1, and all other indexes closer to 0. The transitionSpeed parameter is what you should add/subtract to each element of the fades parameter. See the ExampleMod for an example.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSurfaceBackgroundStyle.ChooseFarTexture">
            <summary>
            Allows you to determine which texture is drawn in the very back of the background. Mod.GetBackgroundSlot may be useful here, as well as for the other texture-choosing hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSurfaceBackgroundStyle.ChooseMiddleTexture">
            <summary>
            Allows you to determine which texture is drawn in the middle of the background.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSurfaceBackgroundStyle.PreDrawCloseBackground(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Gives you complete freedom over how the closest part of the background is drawn. Return true for ChooseCloseTexture to have an effect; return false to disable tModLoader's own code for drawing the close background.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSurfaceBackgroundStyle.ChooseCloseTexture(System.Single@,System.Double@,System.Single@,System.Single@)">
            <summary>
            Allows you to determine which texture is drawn in the closest part of the background. This also lets you modify the scale and parallax (as well as two unfortunately-unknown parameters).
            </summary>
            <param name="scale">The scale.</param>
            <param name="parallax">The parallax value.</param>
            <param name="a">a?</param>
            <param name="b">b?</param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.GlobalBackgroundStyle">
            <summary>
            This class serves to collect functions that operate on any kind of background style, without being specific to one single background style.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBackgroundStyle.ChooseUndergroundBackgroundStyle(System.Int32@)">
            <summary>
            Allows you to change which underground background style is being used.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBackgroundStyle.ChooseSurfaceBackgroundStyle(System.Int32@)">
            <summary>
            Allows you to change which surface background style is being used.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBackgroundStyle.FillUndergroundTextureArray(System.Int32,System.Int32[])">
            <summary>
            Allows you to change which textures make up the underground background by assigning their background slots/IDs to the given array. Index 0 is the texture on the border of the ground and sky layers. Index 1 is the texture drawn between rock and ground layers. Index 2 is the texture on the border of ground and rock layers. Index 3 is the texture drawn in the rock layer. The border images are 160x16 pixels, and the others are 160x96, but it seems like the right 32 pixels of each is a duplicate of the far left 32 pixels.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBackgroundStyle.ModifyFarSurfaceFades(System.Int32,System.Single[],System.Single)">
            <summary>
            Allows you to modify the transparency of all background styles that exist. The style parameter is the current style that is being used.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModBiome">
            <summary>
            This class represents a biome added by a mod. It exists to centralize various biome related hooks, handling a lot of biome boilerplate.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBiome.IsPrimaryBiome">
            <summary>
            Whether or not this biome impacts NPC shop prices.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBiome.DisplayName">
            <summary>
            The display name for this biome in the bestiary.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBiome.BestiaryIcon">
            <summary>
            The path to the 30x30 texture that will appear for this biome in the bestiary.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBiome.BackgroundPath">
            <summary>
            The path to the background texture that will appear for this biome behind npcs in the bestiary.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBiome.BackgroundColor">
            <summary>
            The color of the bestary background.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.IsSceneEffectActive(Terraria.Player)">
            <summary>
            IsSceneEffectActive is auto-forwarded to read the result of IsBiomeActive.
            Do not need to implement when creating your ModBiome.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.SetStaticDefaults">
            <summary>
            This is where you can set values for DisplayName.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.IsBiomeActive(Terraria.Player)">
            <summary>
            Return true if the player is in the biome.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.OnEnter(Terraria.Player)">
            <summary>
            Override this hook to make things happen when the player enters the biome.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.OnInBiome(Terraria.Player)">
            <summary>
            Override this hook to make things happen when the player is in the biome.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.OnLeave(Terraria.Player)">
            <summary>
            Override this hook to make things happen when the player leaves the biome.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.BiomeVisuals(Terraria.Player)">
            <summary>
            Allows you to create special visual effects in the area around the player. For example, the blood moon's red filter on the screen or the slime rain's falling slime in the background. You must create classes that override Terraria.Graphics.Shaders.ScreenShaderData or Terraria.Graphics.Effects.CustomSky, add them in your mod's Load hook, then call Player.ManageSpecialBiomeVisuals. See the ExampleMod if you do not have access to the source code.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModBlockType">
            <summary>
            This is the superclass for ModTile and ModWall, combining common code
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBlockType.Type">
            <summary> The internal ID of this type of tile/wall. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBlockType.SoundType">
            <summary> The default type of sound made when this tile/wall is hit. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBlockType.SoundStyle">
            <summary> The default style of sound made when this tile/wall is hit. Defaults to 1. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBlockType.DustType">
            <summary> The default type of dust made when this tile/wall is hit. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBlockType.ItemDrop">
            <summary> The default type of item dropped when this tile/wall is killed. Defaults to 0, which means no item. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBlockType.VanillaFallbackOnModDeletion">
            <summary> The vanilla ID of what should replace the instance when a user unloads and subsequently deletes data from your mod in their save file. Defaults to 0. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.CreateMapEntryName(System.String)">
            <summary>
            Creates a ModTranslation object that you can use in AddMapEntry.
            </summary>
            <param name="key">The key for the ModTranslation. The full key will be MapObject.ModName.key</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.SetStaticDefaults">
            <summary>
            Allows you to modify the properties after initial loading has completed.
            <br/> This is where you would set the properties of this tile/wall. Many properties are stored as arrays throughout Terraria's code.
            <br/> For example:
            <list type="bullet">
            <item> Main.tileSolid[Type] = true; </item>
            <item> Main.tileSolidTop[Type] = true; </item>
            <item> Main.tileBrick[Type] = true; </item>
            <item> Main.tileBlockLight[Type] = true; </item>
            </list>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.GetMapOption(System.Int32,System.Int32)">
            <summary>
            Allows you to choose which minimap entry the tile/wall at the given coordinates will use. 0 is the first entry added by AddMapEntry, 1 is the second entry, etc. Returns 0 by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.KillSound(System.Int32,System.Int32)">
            <summary>
            Allows you to customize which sound you want to play when the tile/wall at the given coordinates is hit. Return false to stop the game from playing its default sound for the tile/wall. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.NumDust(System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Allows you to change how many dust particles are created when the tile/wall at the given coordinates is hit.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.CreateDust(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Allows you to modify the default type of dust created when the tile/wall at the given coordinates is hit. Return false to stop the default dust (the type parameter) from being created. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.CanPlace(System.Int32,System.Int32)">
            <summary>
            Allows you to stop this tile/wall from being placed at the given coordinates. Return false to stop the tile/wall from being placed. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.CanExplode(System.Int32,System.Int32)">
            <summary>
            Whether or not the tile/wall at the given coordinates can be killed by an explosion (ie. bombs). Returns true by default; return false to stop an explosion from destroying it.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.PreDraw(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Allows you to draw things behind the tile/wall at the given coordinates. Return false to stop the game from drawing the tile normally. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.PostDraw(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Allows you to draw things in front of the tile/wall at the given coordinates. This can also be used to do things such as creating dust.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.RandomUpdate(System.Int32,System.Int32)">
            <summary>
            Called whenever the world randomly decides to update this tile/wall in a given tick. Useful for things such as growing or spreading.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.PlaceInWorld(System.Int32,System.Int32,Terraria.Item)">
            <summary>
            Allows you to do something when this tile/wall is placed. Called on the local Client and Single Player.
            </summary>
            <param name="i">The x position in tile coordinates. Equal to Player.tileTargetX</param>
            <param name="j">The y position in tile coordinates. Equal to Player.tileTargetY</param>
            <param name="item">The item used to place this tile/wall.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.ModifyLight(System.Int32,System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to determine how much light this tile/wall emits.
            If it is a tile, make sure you set Main.tileLighted[Type] to true in SetDefaults for this to work.
            If it is a wall, it can also let you light up the block in front of this wall.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="T:Terraria.ModLoader.ModBossBar">
            <summary>
            A class that is used to create custom boss health bars for modded and vanilla NPCs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBar.GetIconTexture(System.Nullable{Microsoft.Xna.Framework.Rectangle}@)">
            <summary>
            Allows you to specify the icon texture, and optionally the frame it should be displayed on. The frame defaults to the entire texture otherwise.
            </summary>
            <param name="iconFrame">The frame the texture should be displayed on</param>
            <returns>The icon texture</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBar.ModifyInfo(Terraria.GameContent.UI.BigProgressBar.BigProgressBarInfo@,System.Single@,System.Single@)">
            <summary>
            Allows you to handle the logic for when and how this ModBossBar should work. You want to override this if you have a multisegment NPC. Returns null by default. Failing to return false otherwise will lead to your bar being displayed at wrong times.
            <para>Return null to let the basic logic run after this hook is called (index validity check and assigning lifePercent to match the health of the NPC) and then allowing it to be drawn.</para>
            <para>Return true to allow this ModBossBar to be drawn.</para>
            <para>Return false to prevent this ModBossBar from being drawn so that the game will try to pick a different one.</para>
            </summary>
            <param name="info">Contains the index of the NPC the game decided to focus on</param>
            <param name="lifePercent">The % the bar should be filled with</param>
            <param name="shieldPercent">The % the bar should be filled with (shield)</param>
            <returns><see langword="null"/> for "single-segment" NPC logic, <see langword="true"/> for allowing drawing, <see langword="false"/> for preventing drawing</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBar.PreDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.NPC,Terraria.DataStructures.BossBarDrawParams@)">
            <summary>
            Allows you to draw things before the default draw code is ran. Return false to prevent drawing the ModBossBar. Returns true by default.
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="npc">The NPC this ModBossBar is focused on</param>
            <param name="drawParams">The draw parameters for the boss bar</param>
            <returns><see langword="true"/> for allowing drawing, <see langword="false"/> for preventing drawing</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBar.PostDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.NPC,Terraria.DataStructures.BossBarDrawParams)">
            <summary>
            Allows you to draw things after the bar has been drawn. skipped is true if you or another mod has skipped drawing the bar in PreDraw (possibly hiding it or in favor of new visuals).
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="npc">The NPC this ModBossBar is focused on</param>
            <param name="drawParams">The draw parameters for the boss bar</param>
        </member>
        <member name="T:Terraria.ModLoader.ModBossBarStyle">
            <summary>
            A class that is used to swap out the entire boss bar display system with your own implementation
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBossBarStyle.IsSelected">
            <summary>
            Checks if the selected style matches this ModBossBarStyle.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBossBarStyle.DisplayName">
            <summary>
            Controls the name that shows up in the menu selection. If not overridden, it will use this mod's display name.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBossBarStyle.PreventUpdate">
            <summary>
            Return true to skip update code for boss bars. Useful if you want to use your own code for finding out which NPCs to track. Returns false by default.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBossBarStyle.PreventDraw">
            <summary>
            Return true to skip draw code for boss bars. Useful if you want to use your own code for drawing boss bars. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBarStyle.Update(Terraria.GameContent.UI.BigProgressBar.IBigProgressBar,Terraria.GameContent.UI.BigProgressBar.BigProgressBarInfo@)">
            <summary>
            Runs after update code for boss bars (skipped if PreventUpdate returns true), can be used to identify which NPCs to draw.
            </summary>
            <param name="currentBar">The boss bar that vanilla update code decided to draw. Can be null if skipped or if no suitable NPCs found. Can be casted to ModBossBar</param>
            <param name="info">Contains the index of the NPC the game decided to focus on</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBarStyle.OnSelected">
            <summary>
            Called when this ModBossBarStyle is selected
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBarStyle.OnDeselected">
            <summary>
            Called when this ModBossBarStyle is deselected
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBarStyle.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.GameContent.UI.BigProgressBar.IBigProgressBar,Terraria.GameContent.UI.BigProgressBar.BigProgressBarInfo)">
            <summary>
            Runs after draw code for boss bars (skipped if PreventDraw returns true), can be used to draw your own bars, or reinvoke draw for currently selected-to-draw bar
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="currentBar">The boss bar that vanilla update code decided to draw. Can be null if skipped or if no suitable NPCs found. Can be casted to ModBossBar</param>
            <param name="info">Contains the index of the NPC the game decided to focus on</param>
        </member>
        <member name="T:Terraria.ModLoader.ModBuff">
            <summary>
            This class serves as a place for you to define a new buff and how that buff behaves.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBuff.Type">
            <summary> The buff id of this buff. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBuff.DisplayName">
            <summary> The translations of this buff's display name. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBuff.Description">
            <summary> The translations of this buff's description. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBuff.LongerExpertDebuff">
            <summary> If this buff is a debuff, setting this to true will make this buff last twice as long on players in expert mode. Defaults to false. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBuff.CanBeCleared">
            <summary> Whether or not it is always safe to call Player.DelBuff on this buff. Setting this to false will prevent the nurse from being able to remove this debuff. Defaults to true. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.SetStaticDefaults">
            <summary>
            Allows you to modify the properties after initial loading has completed.
            <br/> This is where all buff related assignments go.
            <br/> For example:
            <list type="bullet">
            <item> Main.debuff[Type] = true; </item>
            <item> Main.buffNoTimeDisplay[Type] = true; </item>
            <item> Main.pvpBuff[Type] = true; </item>
            <item> Main.vanityPet[Type] = true; </item>
            <item> Main.lightPet[Type] = true; </item>
            </list>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.Update(Terraria.Player,System.Int32@)">
            <summary>
            Allows you to make this buff give certain effects to the given player. If you remove the buff from the player, make sure the decrement the buffIndex parameter by 1.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.Update(Terraria.NPC,System.Int32@)">
            <summary>
            Allows you to make this buff give certain effects to the given NPC. If you remove the buff from the NPC, make sure to decrement the buffIndex parameter by 1.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.ReApply(Terraria.Player,System.Int32,System.Int32)">
            <summary>
            Allows to you make special things happen when adding this buff to a player when the player already has this buff. Return true to block the vanilla re-apply code from being called; returns false by default. The vanilla re-apply code sets the buff time to the "time" argument if that argument is larger than the current buff time.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.ReApply(Terraria.NPC,System.Int32,System.Int32)">
            <summary>
            Allows to you make special things happen when adding this buff to an NPC when the NPC already has this buff. Return true to block the vanilla re-apply code from being called; returns false by default. The vanilla re-apply code sets the buff time to the "time" argument if that argument is larger than the current buff time.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.ModifyBuffTip(System.String@,System.Int32@)">
            <summary>
            Allows you to modify the tooltip that displays when the mouse hovers over the buff icon, as well as the color the buff's name is drawn in.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.CommandType">
            <summary>A flag enum representing context where this command operates.</summary>
        </member>
        <member name="F:Terraria.ModLoader.CommandType.Chat">
            <summary>Command can be used in Chat in SP and MP.</summary>
        </member>
        <member name="F:Terraria.ModLoader.CommandType.Server">
            <summary>Command is executed by server in MP.</summary>
        </member>
        <member name="F:Terraria.ModLoader.CommandType.Console">
            <summary>Command can be used in server console during MP.</summary>
        </member>
        <member name="F:Terraria.ModLoader.CommandType.World">
            <summary>Command can be used in Chat in SP and MP, but executes on the Server in MP. (singleplayer ? Chat : Server)</summary>
        </member>
        <member name="P:Terraria.ModLoader.CommandCaller.Player">
            <summary>
            The Player object corresponding to the Player that invoked this command. Use this when the Player is needed. Don't use Main.LocalPlayer because that would be incorrect for various CommandTypes.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.CommandCaller.Reply(System.String,Microsoft.Xna.Framework.Color)">
            <summary>
            Use this to repond to the Player that invoked this command. This method handles writing to the console, writing to chat, or sending messages over the network for you depending on the CommandType used. Avoid using Main.NewText, Console.WriteLine, or NetMessage.SendChatMessageToClient directly because the logic would change depending on CommandType.
            </summary>
            <param name="text"></param>
            <param name="color"></param>
        </member>
        <member name="T:Terraria.ModLoader.ModCommand">
            <summary>
            This class represents a chat or console command. Use the CommandType to specify the scope of the command.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModCommand.Command">
            <summary>The desired text to trigger this command.</summary>
        </member>
        <member name="P:Terraria.ModLoader.ModCommand.Type">
            <summary>A flag enum representing context where this command operates.</summary>
        </member>
        <member name="P:Terraria.ModLoader.ModCommand.Usage">
            <summary>A short usage explanation for this command.</summary>
        </member>
        <member name="P:Terraria.ModLoader.ModCommand.Description">
            <summary>A short description of this command.</summary>
        </member>
        <member name="M:Terraria.ModLoader.ModCommand.Action(Terraria.ModLoader.CommandCaller,System.String,System.String[])">
            <summary>The code that is executed when the command is triggered.</summary>
        </member>
        <member name="T:Terraria.ModLoader.ModContent">
            <summary>
            Manages content added by mods.
            Liasons between mod content and Terraria's arrays and oversees the Loader classes.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetInstance``1">
            <summary> Returns the base instance of the provided content type. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetContent``1">
            <summary> Returns all base content instances that derive from the provided content type across all currently loaded mods. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.Find``1(System.String)">
            <summary> Attempts to find the content instance with the specified full name. Caching the result is recommended.<para/>This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.Find``1(System.String,System.String)">
            <summary> Attempts to find the content instance with the specified name and mod name. Caching the result is recommended.<para/>This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.TryFind``1(System.String,``0@)">
            <summary> Safely attempts to find the content instance with the specified full name. Caching the result is recommended. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.TryFind``1(System.String,System.String,``0@)">
            <summary> Safely attempts to find the content instance with the specified name and mod name. Caching the result is recommended. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetFileBytes(System.String)">
            <summary>
            Gets the byte representation of the file with the specified name. The name is in the format of "ModFolder/OtherFolders/FileNameWithExtension". Throws an ArgumentException if the file does not exist.
            </summary>
            <exception cref="T:Terraria.ModLoader.Exceptions.MissingResourceException">Missing mod: " + name</exception>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.FileExists(System.String)">
            <summary>
            Returns whether or not a file with the specified name exists.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.Request``1(System.String,ReLogic.Content.AssetRequestMode)">
            <summary>
            Gets the asset with the specified name. Throws an Exception if the asset does not exist. 
            </summary>
            <param name="name">The path to the asset without extension, including the mod name (or Terraria) for vanilla assets. Eg "ModName/Folder/FileNameWithoutExtension"</param>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.HasAsset(System.String)">
            <summary>
            Returns whether or not a asset with the specified name exists.
            Includes the mod name prefix like GetAsset
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetMusic(System.String)">
            <summary>
            Gets the music with the specified name. The name is in the same format as for texture names. Throws an ArgumentException if the music does not exist. Note: SoundMP3 is in the Terraria.ModLoader namespace.
            </summary>
            <exception cref="T:Terraria.ModLoader.Exceptions.MissingResourceException">Missing mod: " + name</exception>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.MusicExists(System.String)">
            <summary>
            Returns whether or not a sound with the specified name exists.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModNPC(System.Int32)">
            <summary>
            Gets the ModNPC instance corresponding to the specified type.
            </summary>
            <param name="type">The type of the npc</param>
            <returns>The ModNPC instance in the npcs array, null if not found.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModBossHeadSlot(System.String)">
            <summary>
            Gets the index of the boss head texture corresponding to the given texture path.
            </summary>
            <param name="texture"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModHeadSlot(System.String)">
            <summary>
            Gets the index of the head texture corresponding to the given texture path.
            </summary>
            <param name="texture">Relative texture path</param>
            <returns>The index of the texture in the heads array, -1 if not found.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModItem(System.Int32)">
            <summary>
            Gets the ModItem instance corresponding to the specified type. Returns null if no modded item has the given type.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModDust(System.Int32)">
            <summary>
            Gets the ModDust instance with the given type. Returns null if no ModDust with the given type exists.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModProjectile(System.Int32)">
            <summary>
            Gets the ModProjectile instance corresponding to the specified type.
            </summary>
            <param name="type">The type of the projectile</param>
            <returns>The ModProjectile instance in the projectiles array, null if not found.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModBuff(System.Int32)">
            <summary>
            Gets the ModBuff instance with the given type. If no ModBuff with the given type exists, returns null.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetEquipTexture(Terraria.ModLoader.EquipType,System.Int32)">
            <summary>
            Gets the equipment texture for the specified equipment type and ID.
            </summary>
            <param name="type"></param>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModMount(System.Int32)">
            <summary>
            Gets the ModMount instance corresponding to the given type. Returns null if no ModMount has the given type.
            </summary>
            <param name="type">The type of the mount.</param>
            <returns>Null if not found, otherwise the ModMount associated with the mount.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModTile(System.Int32)">
            <summary>
            Gets the ModTile instance with the given type. If no ModTile with the given type exists, returns null.
            </summary>
            <param name="type">The type of the ModTile</param>
            <returns>The ModTile instance in the tiles array, null if not found.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModWall(System.Int32)">
            <summary>
            Gets the ModWall instance with the given type. If no ModWall with the given type exists, returns null.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModWaterStyle(System.Int32)">
            <summary>
            Returns the ModWaterStyle with the given ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModWaterfallStyle(System.Int32)">
            <summary>
            Returns the ModWaterfallStyle with the given ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModBackgroundSlot(System.String)">
            <summary>
            Returns the slot/ID of the background texture with the given name.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModSurfaceBackgroundStyle(System.Int32)">
            <summary>
            Returns the ModSurfaceBackgroundStyle object with the given ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModUndergroundBackgroundStyle(System.Int32)">
            <summary>
            Returns the ModUndergroundBackgroundStyle object with the given ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GoreType``1">
            <summary>
            Get the id (type) of a ModGore by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.ItemType``1">
            <summary>
            Get the id (type) of a ModItem by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.PrefixType``1">
            <summary>
            Get the id (type) of a ModPrefix by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.RarityType``1">
            <summary>
            Get the id (type) of a ModRarity by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.DustType``1">
            <summary>
            Get the id (type) of a ModDust by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.TileType``1">
            <summary>
            Get the id (type) of a ModTile by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.TileEntityType``1">
            <summary>
            Get the id (type) of a ModTileEntity by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.WallType``1">
            <summary>
            Get the id (type) of a ModWall by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.ProjectileType``1">
            <summary>
            Get the id (type) of a ModProjectile by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.NPCType``1">
            <summary>
            Get the id (type) of a ModNPC by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.BuffType``1">
            <summary>
            Get the id (type) of a ModBuff by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.MountType``1">
            <summary>
            Get the id (type) of a ModMount by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.CleanupModReferences">
            <summary>
            Several arrays and other fields hold references to various classes from mods, we need to clean them up to give properly coded mods a chance to be completely free of references
            so that they can be collected by the garbage collection. For most things eventually they will be replaced during gameplay, but we want the old instance completely gone quickly.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModDust">
            <summary>
            This class represents a type of dust that is added by a mod. Only one instance of this class will ever exist for each type of dust you add.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModDust.UpdateType">
            <summary> Allows you to choose a type of dust for this type of dust to copy the behavior of. Defaults to -1, which means that no behavior is copied. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModDust.Texture2D">
            <summary> The sprite sheet that this type of dust uses. Normally a sprite sheet will consist of a vertical alignment of three 10 x 10 pixel squares, each one containing a possible look for the dust. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModDust.Type">
            <summary> The ID of this type of dust. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModDust.SetStaticDefaults">
            <summary>
            Allows you to modify the properties after initial loading has completed.
            This is where you would update ModDust's UpdateType property and modify the Terraria.GameContent.ChildSafety.SafeDust array.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModDust.OnSpawn(Terraria.Dust)">
            <summary>
            Allows you to modify a dust's fields when it is created.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModDust.Update(Terraria.Dust)">
            <summary>
            Allows you to customize how you want this type of dust to behave. Return true to allow for vanilla dust updating to also take place; will return true by default. Normally you will want this to return false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModDust.MidUpdate(Terraria.Dust)">
            <summary>
            Allows you to add behavior to this dust on top of the default dust behavior. Return true if you're applying your own behavior; return false to make the dust slow down by itself. Normally you will want this to return true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModDust.GetAlpha(Terraria.Dust,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to override the color this dust will draw in. Return null to draw it in the normal light color; returns null by default. Note that the dust.noLight field makes the dust ignore lighting and draw in full brightness, and can be set in OnSpawn instead of having to return Color.White here.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModGore">
            <summary>
            This class allows you to customize the behavior of a custom gore.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModGore.UpdateType">
            <summary> Allows you to copy the Update behavior of a different type of gore. This defaults to 0, which means no behavior is copied. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModGore.OnSpawn(Terraria.Gore)">
            <summary>
            Allows you to modify a gore's fields when it is created.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModGore.Update(Terraria.Gore)">
            <summary>
            Allows you to customize how you want this type of gore to behave. Return true to allow for vanilla gore updating to also take place; returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModGore.GetAlpha(Terraria.Gore,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to override the color this gore will draw in. Return null to draw it in the normal light color; returns null by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModGore.DrawBehind(Terraria.Gore)">
            <summary>
            Allows you to determine whether or not this gore will draw behind tiles, etc. Returns false by default.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModItem">
            <summary>
            This class serves as a place for you to place all your properties and hooks for each item. Create instances of ModItem (preferably overriding this class) to pass as parameters to Mod.AddItem.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModItem.Item">
            <summary>
            The item object that this ModItem controls.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModItem.Type">
            <summary>
            Shorthand for item.type;
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModItem.DisplayName">
            <summary>
            The translations for the display name of this item.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModItem.Tooltip">
            <summary>
            The translations for the display name of this tooltip.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.Clone(Terraria.Item)">
            <summary>
            Create a copy of this ModItem. Called when an item is cloned.
            </summary>
            <param name="item">The new item</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.SetDefaults">
            <summary>
            This is where you set all your item's properties, such as width, damage, shootSpeed, defense, etc. 
            For those that are familiar with tAPI, this has the same function as .json files.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AutoDefaults">
            <summary>
            Automatically sets certain defaults. Override this if you do not want the properties to be set for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AutoStaticDefaults">
            <summary>
            Automatically sets certain static defaults. Override this if you do not want the properties to be set for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ChoosePrefix(Terraria.Utilities.UnifiedRandom)">
            <summary>
            Allows you to manually choose what prefix an item will get.
            </summary>
            <returns>The ID of the prefix to give the item, -1 to use default vanilla behavior</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PrefixChance(System.Int32,Terraria.Utilities.UnifiedRandom)">
            <summary>
            To prevent putting the item in the tinkerer slot, return false when pre is -3.
            To prevent rolling of a prefix on spawn, return false when pre is -1.
            To force rolling of a prefix on spawn, return true when pre is -1.
            
            To reduce the probability of a prefix on spawn (pre == -1) to X%, return false 100-4X % of the time.
            To increase the probability of a prefix on spawn (pre == -1) to X%, return true (4X-100)/3 % of the time.
            
            To delete a prefix from an item when the item is loaded, return false when pre is the prefix you want to delete.
            Use AllowPrefix to prevent rolling of a certain prefix.
            </summary>
            <param name="pre">The prefix being applied to the item, or the roll mode. -1 is when the item is naturally generated in a chest, crafted, purchased from an NPC, looted from a grab bag (excluding presents), or dropped by a slain enemy (if it's spawned with prefixGiven: -1). -2 is when the item is rolled in the tinkerer. -3 determines if the item can be placed in the tinkerer slot.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AllowPrefix(System.Int32)">
            <summary>
            Force a re-roll of a prefix by returning false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanUseItem(Terraria.Player)">
            <summary>
            Returns whether or not this item can be used. By default returns true.
            </summary>
            <param name="player">The player using the item.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseStyle(Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to modify the location and rotation of this item in its use animation.
            </summary>
            <param name="player"> The player. </param>
            <param name="heldItemFrame"> The source rectangle for the held item's texture. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HoldStyle(Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to modify the location and rotation of this item when the player is holding it.
            </summary>
            <param name="player"> The player. </param>
            <param name="heldItemFrame"> The source rectangle for the held item's texture. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HoldItem(Terraria.Player)">
            <summary>
            Allows you to make things happen when the player is holding this item (for example, torches make light and water candles increase spawn rate).
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseTimeMultiplier(Terraria.Player)">
            <summary>
            Allows you to change the effective useTime of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns> The multiplier on the usage time. 1f by default. Values greater than 1 increase the item use's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseAnimationMultiplier(Terraria.Player)">
            <summary>
            Allows you to change the effective useAnimation of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns>The multiplier on the animation time. 1f by default. Values greater than 1 increase the item animation's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseSpeedMultiplier(Terraria.Player)">
            <summary>
            Allows you to safely change both useTime and useAnimation while keeping the values relative to each other.
            <br/> Useful for status effects.
            </summary>
            <returns> The multiplier on the use speed. 1f by default. Values greater than 1 increase the overall item speed. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.GetHealLife(Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of life a life healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healLife value.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of life being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.GetHealMana(Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of mana a mana healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healMana value.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of mana being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyManaCost(Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Allows you to temporarily modify the amount of mana this item will consume on use, based on player buffs, accessories, etc. This is only called for items with a mana value.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="reduce">Used for decreasingly stacking buffs (most common). Only ever use -= on this field.</param>
            <param name="mult">Use to directly multiply the item's effective mana cost. Good for debuffs, or things which should stack separately (eg meteor armor set bonus).</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnMissingMana(Terraria.Player,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player doesn't have enough mana for the item they are trying to use.
            If the player has high enough mana after this hook runs, mana consumption will happen normally.
            Only runs once per item use.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="neededMana">The mana needed to use the item.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnConsumeMana(Terraria.Player,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player consumes mana on use of this item.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="manaConsumed">The mana consumed from the player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyWeaponDamage(Terraria.Player,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Allows you to temporarily modify this weapon's damage based on player buffs, etc. This is useful for creating new classes of damage, or for making subclasses of damage (for example, Shroomite armor set boosts).
            </summary>
            <param name="player">The player using the item</param>
            <param name="damage">Use to directly multiply the player's effective damage.</param>
            <param name="flat">This is a flat damage bonus that will be added after add and mult are applied. It facilitates effects like "4 more damage from weapons"</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyResearchSorting(Terraria.ID.ContentSamples.CreativeHelper.ItemGroup@)">
            <summary>
            Allows you to set an item's sorting group in Journey Mode's duplication menu. This is useful for setting custom item types that group well together, or whenever the default vanilla sorting doesn't sort the way you want it.
            </summary>
            <param name="itemGroup">The item group this item is being assigned to</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyWeaponKnockback(Terraria.Player,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Allows you to temporarily modify this weapon's knockback based on player buffs, etc. This allows you to customize knockback beyond the Player class's limited fields.
            </summary>
            <param name="player">The player using the item</param>
            <param name="knockback">The knockback</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyWeaponCrit(Terraria.Player,System.Int32@)">
            <summary>
            Allows you to temporarily modify this weapon's crit chance based on player buffs, etc.
            </summary>
            <param name="player">The player using this item</param>
            <param name="crit">The critical strike chance, at 0 it will never trigger a crit and at 100 or above it will always trigger a crit</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PickAmmo(Terraria.Item,Terraria.Player,System.Int32@,System.Single@,System.Int32@,System.Single@)">
            <summary>
            Allows you to modify the projectile created by a weapon based on the ammo it is using. This hook is called on the ammo.
            </summary>
            <param name="weapon">The item that is using this ammo</param>
            <param name="player">The player using the item</param>
            <param name="type">The ID of the projectile shot</param>
            <param name="speed">The speed of the projectile shot</param>
            <param name="damage">The damage of the projectile shot</param>
            <param name="knockback">The speed of the projectile shot</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ConsumeAmmo(Terraria.Player)">
            <summary>
            Whether or not ammo will be consumed upon usage. Called both by the gun and by the ammo; if at least one returns false then the ammo will not be used. By default returns true.
            If false is returned, the OnConsumeAmmo hook is never called.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnConsumeAmmo(Terraria.Player)">
            <summary>
            Allows you to makes things happen when ammo is consumed. Called both by the gun and by the ammo.
            Called before the ammo stack is reduced.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanShoot(Terraria.Player)">
            <summary>
            Allows you to prevent this item from shooting a projectile on use. Returns true by default.
            </summary>
            <param name="player"> The player using the item. </param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyShootStats(Terraria.Player,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            Allows you to modify the position, velocity, type, damage and/or knockback of a projectile being shot by this item.
            </summary>
            <param name="player"> The player using the item. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.Shoot(Terraria.Player,Terraria.DataStructures.ProjectileSource_Item_WithAmmo,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single)">
            <summary>
            Allows you to modify this item's shooting mechanism. Return false to prevent vanilla's shooting code from running. Returns true by default.
            </summary>
            <param name="player"> The player using the item. </param>
            <param name="source"> The projectile source's information. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseItemHitbox(Terraria.Player,Microsoft.Xna.Framework.Rectangle@,System.Boolean@)">
            <summary>
            Changes the hitbox of this melee weapon when it is used.
            </summary>
            <param name="player">The player.</param>
            <param name="hitbox">The hitbox.</param>
            <param name="noHitbox">if set to <c>true</c> [no hitbox].</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.MeleeEffects(Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to give this melee weapon special effects, such as creating light or dust.
            </summary>
            <param name="player">The player.</param>
            <param name="hitbox">The hitbox.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanHitNPC(Terraria.Player,Terraria.NPC)">
            <summary>
            Allows you to determine whether this melee weapon can hit the given NPC when swung. Return true to allow hitting the target, return false to block this weapon from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyHitNPC(Terraria.Player,Terraria.NPC,System.Int32@,System.Single@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this melee weapon does to an NPC.
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <param name="damage">The damage.</param>
            <param name="knockBack">The knock back.</param>
            <param name="crit">if set to <c>true</c> [crit].</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnHitNPC(Terraria.Player,Terraria.NPC,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when this melee weapon hits an NPC (for example how the Pumpkin Sword creates pumpkin heads).
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <param name="damage">The damage.</param>
            <param name="knockBack">The knock back.</param>
            <param name="crit">if set to <c>true</c> [crit].</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanHitPvp(Terraria.Player,Terraria.Player)">
            <summary>
            Allows you to determine whether this melee weapon can hit the given opponent player when swung. Return false to block this weapon from hitting the target. Returns true by default.
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <returns>
              <c>true</c> if this instance [can hit PVP] the specified player; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyHitPvp(Terraria.Player,Terraria.Player,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that this melee weapon does to a player.
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <param name="damage">The damage.</param>
            <param name="crit">if set to <c>true</c> [crit].</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnHitPvp(Terraria.Player,Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when this melee weapon hits a player.
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <param name="damage">The damage.</param>
            <param name="crit">if set to <c>true</c> [crit].</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseItem(Terraria.Player)">
            <summary>
            Allows you to make things happen when this item is used. The return value controls whether or not ApplyItemTime will be called for the player.
            <br/> Return true if the item actually did something, to force itemTime.
            <br/> Return false to keep itemTime at 0.
            <br/> Return null for vanilla behavior.
            <para/> Runs on all clients and server. Use <code>if (player.whoAmI == Main.myPlayer)</code> and <code>if (Main.netMode == NetmodeID.??)</code> if appropriate.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseAnimation(Terraria.Player)">
            <summary>
            Allows you to make things happen when this item's use animation starts.
            <para/> Runs on all clients and server. Use <code>if (player.whoAmI == Main.myPlayer)</code> and <code>if (Main.netMode == NetmodeID.??)</code> if appropriate.
            </summary>
            <param name="player"> The player. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ConsumeItem(Terraria.Player)">
            <summary>
            If this item is consumable and this returns true, then this item will be consumed upon usage. Returns true by default.
            If false is returned, the OnConsumeItem hook is never called.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnConsumeItem(Terraria.Player)">
            <summary>
            Allows you to make things happen when this item is consumed.
            Called before the item stack is reduced.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseItemFrame(Terraria.Player)">
            <summary>
            Allows you to modify the player's animation when this item is being used.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HoldItemFrame(Terraria.Player)">
            <summary>
            Allows you to modify the player's animation when the player is holding this item.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AltFunctionUse(Terraria.Player)">
            <summary>
            Allows you to make this item usable by right-clicking. Returns false by default. When this item is used by right-clicking, player.altFunctionUse will be set to 2.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateInventory(Terraria.Player)">
            <summary>
            Allows you to make things happen when this item is in the player's inventory (for example, how the cell phone makes information display).
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateEquip(Terraria.Player)">
            <summary>
            Allows you to give effects to this armor or accessory, such as increased damage.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateAccessory(Terraria.Player,System.Boolean)">
            <summary>
            Allows you to give effects to this accessory. The hideVisual parameter is whether the player has marked the accessory slot to be hidden from being drawn on the player.
            </summary>
            <param name="player">The player.</param>
            <param name="hideVisual">if set to <c>true</c> the accessory is hidden.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateVanity(Terraria.Player)">
            <summary>
            Allows you to give effects to this accessory when equipped in a vanity slot. Vanilla uses this for boot effects, wings and merman/werewolf visual flags
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.EquipFrameEffects(Terraria.Player,Terraria.ModLoader.EquipType)">
            <summary>
            Allows you to create special effects (such as dust) when this item's equipment texture of the given equipment type is displayed on the player. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="player">The player.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.IsArmorSet(Terraria.Item,Terraria.Item,Terraria.Item)">
            <summary>
            Returns whether or not the head armor, body armor, and leg armor make up a set. If this returns true, then this item's UpdateArmorSet method will be called. Returns false by default.
            </summary>
            <param name="head">The head.</param>
            <param name="body">The body.</param>
            <param name="legs">The legs.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateArmorSet(Terraria.Player)">
            <summary>
            Allows you to give set bonuses to the armor set that this armor is in. Set player.setBonus to a string for the bonus description.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.IsVanitySet(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns whether or not the head armor, body armor, and leg armor textures make up a set. This hook is used for the PreUpdateVanitySet, UpdateVanitySet, and ArmorSetShadow hooks. By default, this will return the same value as the IsArmorSet hook (passing the equipment textures' associated items as parameters), so you will not have to use this hook unless you want vanity effects to be entirely separate from armor sets. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="head">The head.</param>
            <param name="body">The body.</param>
            <param name="legs">The legs.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreUpdateVanitySet(Terraria.Player)">
            <summary>
            Allows you to create special effects (such as the necro armor's hurt noise) when the player wears this item's vanity set. This hook is called regardless of whether the player is frozen in any way. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateVanitySet(Terraria.Player)">
            <summary>
            Allows you to create special effects (such as dust) when the player wears this item's vanity set. This hook will only be called if the player is not frozen in any way. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ArmorSetShadows(Terraria.Player)">
            <summary>
            Allows you to determine special visual effects this vanity set has on the player without having to code them yourself. Note that this hook is only ever called through this item's associated equipment texture. Use the player.armorEffectDraw bools to activate the desired effects.
            </summary>
            <example><code>player.armorEffectDrawShadow = true;</code></example>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.SetMatch(System.Boolean,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the equipment that the player appears to be wearing. This hook will only be called for body armor and leg armor. Note that equipSlot is not the same as the item type of the armor the player will appear to be wearing. Worn equipment has a separate set of IDs. You can find the vanilla equipment IDs by looking at the headSlot, bodySlot, and legSlot fields for items, and modded equipment IDs by looking at EquipLoader.
            If this hook is called on body armor, equipSlot allows you to modify the leg armor the player appears to be wearing. If you modify it, make sure to set robes to true. If this hook is called on leg armor, equipSlot allows you to modify the leg armor the player appears to be wearing, and the robes parameter is useless.
            Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="male">if set to <c>true</c> [male].</param>
            <param name="equipSlot">The equip slot.</param>
            <param name="robes">if set to <c>true</c> [robes].</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanRightClick">
            <summary>
            Returns whether or not this item does something when it is right-clicked in the inventory. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.RightClick(Terraria.Player)">
            <summary>
            Allows you to make things happen when this item is right-clicked in the inventory. Useful for goodie bags.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OpenBossBag(Terraria.Player)">
            <summary>
            Allows you to give items to the given player when this item is right-clicked in the inventory if the bossBagNPC field has been set to a positive number. This ignores the CanRightClick and RightClick hooks.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanStackInWorld(Terraria.Item)">
            <summary>
            Allows you to decide if this item is allowed to stack with another of its type in the world.
            This is only called when attempting to stack with an item of the same type.
            </summary>
            <param name="item2">The item this is trying to stack with</param>
            <returns>Whether or not the item is allowed to stack</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ReforgePrice(System.Int32@,System.Boolean@)">
            <summary>
            Returns if the normal reforge pricing is applied. 
            If true or false is returned and the price is altered, the price will equal the altered price.
            The passed reforge price equals the item.value. Vanilla pricing will apply 20% discount if applicable and then price the reforge at a third of that value.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreReforge">
            <summary>
            This hook gets called when the player clicks on the reforge button and can afford the reforge.
            Returns whether the reforge will take place. If false is returned, the PostReforge hook is never called.
            Reforging preserves modded data on the item. 
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostReforge">
            <summary>
            This hook gets called immediately after an item gets reforged by the Goblin Tinkerer.
            Useful for modifying modded data based on the reforge result.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.DrawHands(System.Boolean@,System.Boolean@)">
            <summary>
            Allows you to determine whether the skin/shirt on the player's arms and hands are drawn when this body armor is worn. By default both flags will be false. Note that if drawHands is false, the arms will not be drawn either. Also note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="drawHands">if set to <c>true</c> [draw hands].</param>
            <param name="drawArms">if set to <c>true</c> [draw arms].</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.DrawHair(System.Boolean@,System.Boolean@)">
            <summary>
            Allows you to determine whether the player's hair or alt (hat) hair draws when this head armor is worn. By default both flags will be false. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="drawHair">if set to <c>true</c> [draw hair].</param>
            <param name="drawAltHair">if set to <c>true</c> [draw alt hair].</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.DrawHead">
            <summary>
            Return false to hide the player's head when this head armor is worn. Returns true by default. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.DrawBody">
            <summary>
            Return false to hide the player's body when this body armor is worn. Returns true by default. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.DrawLegs">
            <summary>
            Return false to hide the player's legs when this leg armor or shoe accessory is worn. Returns true by default. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.DrawArmorColor(Terraria.Player,System.Single,Microsoft.Xna.Framework.Color@,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify the colors in which this armor and surrounding accessories are drawn, in addition to which glow mask and in what color is drawn. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="drawPlayer">The draw player.</param>
            <param name="shadow">The shadow.</param>
            <param name="color">The color.</param>
            <param name="glowMask">The glow mask.</param>
            <param name="glowMaskColor">Color of the glow mask.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ArmorArmGlowMask(Terraria.Player,System.Single,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify which glow mask and in what color is drawn on the player's arms. Note that this is only called for body armor. Also note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="drawPlayer">The draw player.</param>
            <param name="shadow">The shadow.</param>
            <param name="glowMask">The glow mask.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.VerticalWingSpeeds(Terraria.Player,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to modify the speeds at which you rise and fall when these wings are equipped.
            </summary>
            <param name="player">The player.</param>
            <param name="ascentWhenFalling">The ascent when falling.</param>
            <param name="ascentWhenRising">The ascent when rising.</param>
            <param name="maxCanAscendMultiplier">The maximum can ascend multiplier.</param>
            <param name="maxAscentMultiplier">The maximum ascent multiplier.</param>
            <param name="constantAscend">The constant ascend.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HorizontalWingSpeeds(Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Allows you to modify these wing's horizontal flight speed and acceleration.
            </summary>
            <param name="player">The player.</param>
            <param name="speed">The speed.</param>
            <param name="acceleration">The acceleration.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.WingUpdate(Terraria.Player,System.Boolean)">
            <summary>
            Allows for Wings to do various things while in use. "inUse" is whether or not the jump button is currently pressed. Called when these wings visually appear on the player. Use to animate wings, create dusts, invoke sounds, and create lights. Note that this hook is only ever called through this item's associated equipment texture. False will keep everything the same. True, you need to handle all animations in your own code.
            </summary>
            <param name="player">The player.</param>
            <param name="inUse">if set to <c>true</c> [in use].</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.Update(System.Single@,System.Single@)">
            <summary>
            Allows you to customize this item's movement when lying in the world. Note that this will not be called if this item is currently being grabbed by a player.
            </summary>
            <param name="gravity">The gravity.</param>
            <param name="maxFallSpeed">The maximum fall speed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanBurnInLava">
            <summary>
            Returns whether or not this item will burn in lava regardless of any conditions. Returns null by default (follow vanilla behaviour).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostUpdate">
            <summary>
            Allows you to make things happen when this item is lying in the world. This will always be called, even when it is being grabbed by a player. This hook should be used for adding light, or for increasing the age of less valuable items.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.GrabRange(Terraria.Player,System.Int32@)">
            <summary>
            Allows you to modify how close this item must be to the player in order to move towards the player.
            </summary>
            <param name="player">The player.</param>
            <param name="grabRange">The grab range.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.GrabStyle(Terraria.Player)">
            <summary>
            Allows you to modify the way this item moves towards the player. Return true if you override this hook; returning false will allow the vanilla grab style to take place. Returns false by default.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanPickup(Terraria.Player)">
            <summary>
            Allows you to determine whether or not the item can be picked up
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnPickup(Terraria.Player)">
            <summary>
            Allows you to make special things happen when the player picks up this item. Return false to stop the item from being added to the player's inventory; returns true by default.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ItemSpace(Terraria.Player)">
            <summary>
            Return true to specify that the item can be picked up despite not having enough room in inventory. Useful for something like hearts or experience items. Use in conjunction with OnPickup to actually consume the item and handle it.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.GetAlpha(Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which this item is drawn. Return null to use the default color (normally light color). Returns null by default.
            </summary>
            <param name="lightColor">Color of the light.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreDrawInWorld(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single@,System.Single@,System.Int32)">
            <summary>
            Allows you to draw things behind this item, or to modify the way this item is drawn in the world. Return false to stop the game from drawing the item (useful if you're manually drawing the item). Returns true by default.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="lightColor">Color of the light.</param>
            <param name="alphaColor">Color of the alpha.</param>
            <param name="rotation">The rotation.</param>
            <param name="scale">The scale.</param>
            <param name="whoAmI">The who am i.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostDrawInWorld(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Int32)">
            <summary>
            Allows you to draw things in front of this item. This method is called even if PreDrawInWorld returns false.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="lightColor">Color of the light.</param>
            <param name="alphaColor">Color of the alpha.</param>
            <param name="rotation">The rotation.</param>
            <param name="scale">The scale.</param>
            <param name="whoAmI">The who am i.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreDrawInInventory(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Allows you to draw things behind this item in the inventory. Return false to stop the game from drawing the item (useful if you're manually drawing the item). Returns true by default.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="position">The position.</param>
            <param name="frame">The frame.</param>
            <param name="drawColor">Color of the draw.</param>
            <param name="itemColor">Color of the item.</param>
            <param name="origin">The origin.</param>
            <param name="scale">The scale.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostDrawInInventory(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Allows you to draw things in front of this item in the inventory. This method is called even if PreDrawInInventory returns false.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="position">The position.</param>
            <param name="frame">The frame.</param>
            <param name="drawColor">Color of the draw.</param>
            <param name="itemColor">Color of the item.</param>
            <param name="origin">The origin.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HoldoutOffset">
            <summary>
            Allows you to determine the offset of this item's sprite when used by the player. This is only used for items with a useStyle of 5 that aren't staves. Return null to use the vanilla holdout offset; returns null by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HoldoutOrigin">
            <summary>
            Allows you to determine the point on this item's sprite that the player holds onto when using this item. The origin is from the bottom left corner of the sprite. This is only used for staves with a useStyle of 5. Return null to use the vanilla holdout origin (zero); returns null by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanEquipAccessory(Terraria.Player,System.Int32)">
            <summary>
            Allows you to disallow the player from equipping this accessory. Return false to disallow equipping this accessory. Returns true by default.
            </summary>
            <param name="player">The player.</param>
            <param name="slot">The inventory slot that the item is attempting to occupy.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ExtractinatorUse(System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify what item, and in what quantity, is obtained when this item is fed into the Extractinator. By default the parameters will be set to the output of feeding Silt/Slush into the Extractinator.
            </summary>
            <param name="resultType">Type of the result.</param>
            <param name="resultStack">The result stack.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AutoLightSelect(System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Allows you to tell the game whether this item is a torch that cannot be placed in liquid, a torch that can be placed in liquid, or a glowstick. This information is used for when the player is holding down the auto-select keybind.
            </summary>
            <param name="dryTorch">if set to <c>true</c> [dry torch].</param>
            <param name="wetTorch">if set to <c>true</c> [wet torch].</param>
            <param name="glowstick">if set to <c>true</c> [glowstick].</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CaughtFishStack(System.Int32@)">
            <summary>
            Allows you to determine how many of this item a player obtains when the player fishes this item.
            </summary>
            <param name="stack">The stack.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.IsQuestFish">
            <summary>
            Whether or not the Angler can ever randomly request this type of item for his daily quest. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.IsAnglerQuestAvailable">
            <summary>
            Whether or not specific conditions have been satisfied for the Angler to be able to request this item. (For example, Hardmode.) Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AnglerQuestChat(System.String@,System.String@)">
            <summary>
            Allows you to set what the Angler says when he requests for this item. The description parameter is his dialogue, and catchLocation should be set to "\n(Caught at [location])".
            </summary>
            <param name="description">The description.</param>
            <param name="catchLocation">The catch location.</param>
        </member>
        <member name="P:Terraria.ModLoader.ModItem.OnlyShootOnSwing">
            <summary>
            Setting this to true makes it so that this weapon can shoot projectiles only at the beginning of its animation. Set this to true if you want a sword and its projectile creation to be in sync (for example, the Terra Blade). Defaults to false.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModItem.BossBagNPC">
            <summary>
            The type of NPC that drops this boss bag. Used to determine how many coins this boss bag contains. Defaults to 0, which means this isn't a boss bag.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.Save">
            <summary>
            Allows you to save custom data for this item. Returns null by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.Load(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load custom data that you have saved for this item.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.NetSend(System.IO.BinaryWriter)">
            <summary>
            Allows you to send custom data for this item between client and server.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.NetReceive(System.IO.BinaryReader)">
            <summary>
            Receives the custom data sent in the NetSend hook.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AddRecipes">
            <summary>
            This is essentially the same as Mod.AddRecipes. Do note that this will be called for every instance of the overriding ModItem class that is added to the game. This allows you to avoid clutter in your overriding Mod class by adding recipes for which this item is the result.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnCraft(Terraria.Recipe)">
            <summary>
            Allows you to make anything happen when the player crafts this item using the given recipe.
            </summary>
            <param name="recipe">The recipe that was used to craft this item.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreDrawTooltip(System.Collections.ObjectModel.ReadOnlyCollection{Terraria.ModLoader.TooltipLine},System.Int32@,System.Int32@)">
            <summary>
            Allows you to do things before this item's tooltip is drawn.
            </summary>
            <param name="lines">The tooltip lines for this item</param>
            <param name="x">The top X position for this tooltip. It is where the first line starts drawing</param>
            <param name="y">The top Y position for this tooltip. It is where the first line starts drawing</param>
            <returns>Whether or not to draw this tooltip</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostDrawTooltip(System.Collections.ObjectModel.ReadOnlyCollection{Terraria.ModLoader.DrawableTooltipLine})">
            <summary>
            Allows you to do things after this item's tooltip is drawn. The lines contain draw information as this is ran after drawing the tooltip.
            </summary>
            <param name="lines">The tooltip lines for this item</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreDrawTooltipLine(Terraria.ModLoader.DrawableTooltipLine,System.Int32@)">
            <summary>
            Allows you to do things before a tooltip line of this item is drawn. The line contains draw info.
            </summary>
            <param name="line">The line that would be drawn</param>
            <param name="yOffset">The Y offset added for next tooltip lines</param>
            <returns>Whether or not to draw this tooltip line</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostDrawTooltipLine(Terraria.ModLoader.DrawableTooltipLine)">
            <summary>
            Allows you to do things after a tooltip line of this item is drawn. The line contains draw info.
            </summary>
            <param name="line">The line that was drawn</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyTooltips(System.Collections.Generic.List{Terraria.ModLoader.TooltipLine})">
            <summary>
            Allows you to modify all the tooltips that display for this item. See here for information about TooltipLine.
            </summary>
            <param name="tooltips">The tooltips.</param>
        </member>
        <member name="T:Terraria.ModLoader.ModKeybind">
            <summary>
            Represents a loaded input binding. It is suggested to access the keybind status only in ModPlayer.ProcessTriggers. 
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModKeybind.GetAssignedKeys(Terraria.GameInput.InputMode)">
            <summary>
            Gets the currently assigned keybindings. Useful for prompts, tooltips, informing users.
            </summary>
            <param name="mode"> The InputMode. Choose between InputMode.Keyboard and InputMode.XBoxGamepad </param>
        </member>
        <member name="P:Terraria.ModLoader.ModKeybind.Current">
            <summary>
            Returns true if this keybind is pressed currently. Useful for creating a behavior that relies on the keybind being held down.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModKeybind.JustPressed">
            <summary>
            Returns true if this keybind has just been pressed this update. This is a fire-once-per-press behavior.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModKeybind.JustReleased">
            <summary>
            Returns true if this keybind has just been released this update.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModKeybind.Old">
            <summary>
            Returns true if this keybind has been pressed during the previous update.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModLoader">
            <summary>
            This serves as the central class which loads mods. It contains many static fields and methods related to mods and their contents.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModLoader.GetMod(System.String)">
            <summary> Gets the instance of the Mod with the specified name. This will throw an exception if the mod cannot be found. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:Terraria.ModLoader.ModLoader.TryGetMod(System.String,Terraria.ModLoader.Mod@)">
            <summary> Safely attempts to get the instance of the Mod with the specified name. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="F:Terraria.ModLoader.ModLoader._enabledMods">
            <summary>A cached list of enabled mods (not necessarily currently loaded or even installed), mirroring the enabled.json file.</summary>
        </member>
        <member name="M:Terraria.ModLoader.ModLoader.BuildGlobalHook``2(``1[]@,System.Collections.Generic.IList{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Allows type inference on T and F
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModMenu">
            <summary>
            A class that is used to customize aesthetic features of the main menu, such as the logo, background and music.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.Logo">
            <summary>
            The logo texture shown when this ModMenu is active. If not overridden, it will use the tModLoader logo.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.SunTexture">
            <summary>
            The sun texture shown when this ModMenu is active. If not overridden, it will use the vanilla sun.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.MoonTexture">
            <summary>
            The moon texture shown when this ModMenu is active. If not overridden, it will use the vanilla moon.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.Music">
            <summary>
            The music that will be played while this ModMenu is active. If not overridden, it will use the vanilla music.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.MenuBackgroundStyle">
            <summary>
            The background style that will be used when this ModMenu is active. If not overridden, it will use the vanilla background.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.IsAvailable">
            <summary>
            Controls whether this ModMenu will be available to switch to. Useful if you want this menu to only be available at specific times.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.DisplayName">
            <summary>
            Controls the name that shows up at the base of the screen when this ModMenu is active. If not overridden, it will use this mod's display name.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMenu.OnSelected">
            <summary>
            Called when this ModMenu is selected. Set the state of the UserInterface to a given UIState to make that UIState appear on the main menu.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMenu.OnDeselected">
            <summary>
            Called when this ModMenu is deselected.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMenu.Update(System.Boolean)">
            <summary>
            Called when this ModMenu's logic is updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMenu.PreDrawLogo(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2@,System.Single@,System.Single@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Called just before the logo is drawn, and allows you to modify some of the parameters of the logo draw code.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMenu.PostDrawLogo(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            Called just after the logo is drawn, and gives the values of some of the parameters of the logo draw code.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModMount">
            <summary>
            This class serves as a place for you to place all your properties and hooks for each mount. Create instances of ModMoundData (preferably overriding this class) to pass as parameters to Mod.AddMount.
            Only one instance of ModMount will exist for each mount, so storing player specific data on the ModMount is not good. 
            Modders can use player.mount._mountSpecificData or a ModPlayer class to store player specific data relating to a mount. Use SetMount to assign these fields.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMount.MountData">
            <summary>
            The vanilla MountData object that is controlled by this ModMount.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMount.Type">
            <summary>
            The index of this ModMount in the Mount.mounts array.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.SetStaticDefaults">
            <summary>
            Allows you to modify the properties after initial loading has completed.
            This is where you would set properties of this type of mount.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.JumpHeight(Terraria.Player,System.Int32@,System.Single)">
            <summary>
            Allows you to modify the mount's jump height based on its state.
            </summary>
            <param name="mountedPlayer"></param>
            <param name="jumpHeight"></param>
            <param name="xVelocity"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.JumpSpeed(Terraria.Player,System.Single@,System.Single)">
            <summary>
            Allows you to modify the mount's jump speed based on its state.
            </summary>
            <param name="mountedPlayer"></param>
            <param name="jumpSeed"></param>
            <param name="xVelocity"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.UpdateEffects(Terraria.Player)">
            <summary>
            Allows you to make things happen when mount is used (creating dust etc.) Can also be used for mount special abilities.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.UpdateFrame(Terraria.Player,System.Int32,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Allows for manual updating of mount frame. Return false to stop the default frame behavior. Returns true by default.
            </summary>
            <param name="mountedPlayer"></param>
            <param name="state"></param>
            <param name="velocity"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.UseAbility(Terraria.Player,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Allows you to make things happen while the mouse is pressed while the mount is active. Called each tick the mouse is pressed.
            </summary>
            <param name="player"></param>
            <param name="mousePosition"></param>
            <param name="toggleOn">Does nothing yet</param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.AimAbility(Terraria.Player,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Allows you to make things happen when the mount ability is aiming (while charging).
            </summary>
            <param name="player"></param>
            <param name="mousePosition"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.SetMount(Terraria.Player,System.Boolean@)">
            <summary>
            Allows you to make things happen when this mount is spawned in. Useful for player-specific initialization, utilizing player.mount._mountSpecificData or a ModPlayer class since ModMount is shared between all players.
            Custom dust spawning logic is also possible via the skipDust parameter.
            </summary>
            <param name="player"></param>
            <param name="skipDust">Set to true to skip the vanilla dust spawning logic</param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.Dismount(Terraria.Player,System.Boolean@)">
            <summary>
            Allows you to make things happen when this mount is de-spawned. Useful for player-specific cleanup, see SetMount.
            Custom dust spawning logic is also possible via the skipDust parameter.
            </summary>
            <param name="player"></param>
            <param name="skipDust">Set to true to skip the vanilla dust spawning logic</param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.Draw(System.Collections.Generic.List{Terraria.DataStructures.DrawData},System.Int32,Terraria.Player,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Rectangle@,Microsoft.Xna.Framework.Color@,Microsoft.Xna.Framework.Color@,System.Single@,Microsoft.Xna.Framework.Graphics.SpriteEffects@,Microsoft.Xna.Framework.Vector2@,System.Single@,System.Single)">
            <summary>
            Allows for complete customization of mount drawing. This method will be called once for each supported mount texture layer that exists. Use drawType to conditionally apply changes.
            drawType corresponds to the following: 0: backTexture, 1: backTextureExtra, 2: frontTexture. 3: frontTextureExtra
            Corresponding glow textures, such as backTextureGlow, are paired with their corresponding texture and passed into this method as well.
            Return false if you are manually adding DrawData to playerDrawData to replace the vanilla draw behavior, otherwise tweak ref variables to customize the drawing and add additional DrawData to playerDrawData.
            </summary>
            <param name="playerDrawData"></param>
            <param name="drawType">Corresponds to the following: 0: backTexture, 1: backTextureExtra, 2: frontTexture. 3: frontTextureExtra</param>
            <param name="drawPlayer"></param>
            <param name="texture"></param>
            <param name="glowTexture">The corresponding glow texture, if present</param>
            <param name="drawPosition"></param>
            <param name="frame"></param>
            <param name="drawColor"></param>
            <param name="glowColor"></param>
            <param name="rotation"></param>
            <param name="spriteEffects"></param>
            <param name="drawOrigin"></param>
            <param name="drawScale"></param>
            <param name="shadow"></param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.ModNPC">
            <summary>
            This class serves as a place for you to place all your properties and hooks for each NPC. Create instances of ModNPC (preferably overriding this class) to pass as parameters to Mod.AddNPC.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.NPC">
            <summary> The NPC object that this ModNPC controls. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.Type">
            <summary> Shorthand for npc.type; </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.DisplayName">
            <summary> The translations for the display name of this NPC. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.HeadTexture">
            <summary> The file name of this NPC's head texture file, to be used in autoloading. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.BossHeadTexture">
            <summary> This file name of this NPC's boss head texture file, to be used in autoloading. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.AIType">
            <summary> Determines which type of vanilla NPC this ModNPC will copy the behavior (AI) of. Leave as 0 to not copy any behavior. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.AnimationType">
            <summary> Determines which type of vanilla NPC this ModNPC will copy the animation (FindFrame) of. Leave as 0 to not copy any animation. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.BossBag">
            <summary> The item type of the boss bag that is dropped when DropBossBags is called for this NPC. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.Music">
            <summary> The ID of the music that plays when this NPC is on or near the screen. Defaults to -1, which means music plays normally. </summary>
            Will be superceded by ModSceneEffect. Kept for legacy.
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.SceneEffectPriority">
            <summary> The priority of the music that plays when this NPC is on or near the screen. </summary>
            Will be superceded by ModSceneEffect. Kept for legacy.
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.DrawOffsetY">
            <summary> The vertical offset used for drawing this NPC. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.Banner">
            <summary> The type of NPC that this NPC will be considered as when determining banner drops and banner bonuses. By default this will be 0, which means this NPC is not associated with any banner. To give your NPC its own banner, set this field to the NPC's type. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.BannerItem">
            <summary> The type of the item this NPC drops for every 50 times it is defeated. For any ModNPC whose banner field is set to the type of this NPC, that ModNPC will drop this banner. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.SpawnModBiomes">
            <summary> The ModBiome Types associated with this NPC spawning, if applicable. Used in Bestiary </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.CloneNewInstances">
            <summary>
            Whether instances of this ModNPC are created through a memberwise clone or its constructor. Defaults to false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.Clone">
            <summary>
            Returns a clone of this ModNPC. 
            Allows you to decide which fields of your ModNPC class are copied over when a new NPC is created. 
            By default this will return a memberwise clone; you will want to override this if your ModNPC contains object references. 
            Only called if CloneNewInstances is set to true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.NewInstance(Terraria.NPC)">
            <summary>
            Create a new instance of this ModNPC for an NPC instance. 
            Called at the end of NPC.SetDefaults.
            If CloneNewInstances is true, just calls Clone()
            Otherwise calls the default constructor and copies fields
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SetDefaults">
            <summary>
            Allows you to set all your NPC's properties, such as width, damage, aiStyle, lifeMax, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.AutoStaticDefaults">
            <summary>
            Automatically sets certain static defaults. Override this if you do not want the properties to be set for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ScaleExpertStats(System.Int32,System.Single)">
            <summary>
            Allows you to customize this NPC's stats in expert mode. This is useful because expert mode's doubling of damage and life might be too much sometimes (for example, with bosses). Also useful for scaling life with the number of players in the world.
            </summary>
            <param name="numPlayers"></param>
            <param name="bossLifeScale"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SetBestiary(Terraria.GameContent.Bestiary.BestiaryDatabase,Terraria.GameContent.Bestiary.BestiaryEntry)">
            <summary>
            Allows you to set an NPC's information in the Bestiary.
            </summary>
            <param name="database"></param>
            <param name="bestiaryEntry"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ResetEffects">
            <summary>
            This is where you reset any fields you add to your subclass to their default states. This is necessary in order to reset your fields if they are conditionally set by a tick update but the condition is no longer satisfied. (Note: This hook is only really useful for GlobalNPC, but is included in ModNPC for completion.)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.PreAI">
            <summary>
            Allows you to determine how this NPC behaves. Return false to stop the vanilla AI and the AI hook from being run. Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.AI">
            <summary>
            Allows you to determine how this NPC behaves. This will only be called if PreAI returns true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SendExtraAI(System.IO.BinaryWriter)">
            <summary>
            If you are storing AI information outside of the npc.ai array, use this to send that AI information between clients and servers.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ReceiveExtraAI(System.IO.BinaryReader)">
            <summary>
            Use this to receive information that was sent in SendExtraAI.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.FindFrame(System.Int32)">
            <summary>
            Allows you to modify the frame from this NPC's texture that is drawn, which is necessary in order to animate NPCs.
            </summary>
            <param name="frameHeight"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Terraria.ModLoader.ModNPC.HitEffect(System.Int32,System.Double)" -->
        <member name="M:Terraria.ModLoader.ModNPC.UpdateLifeRegen(System.Int32@)">
            <summary>
            Allows you to make the NPC either regenerate health or take damage over time by setting npc.lifeRegen. Regeneration or damage will occur at a rate of half of npc.lifeRegen per second. The damage parameter is the number that appears above the NPC's head if it takes damage over time.
            </summary>
            <param name="damage"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CheckActive">
            <summary>
            Whether or not to run the code for checking whether this NPC will remain active. Return false to stop this NPC from being despawned and to stop this NPC from counting towards the limit for how many NPCs can exist near a player. Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CheckDead">
            <summary>
            Whether or not this NPC should be killed when it reaches 0 health. You may program extra effects in this hook (for example, how Golem's head lifts up for the second phase of its fight). Return false to stop this NPC from being killed. Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SpecialOnKill">
            <summary>
            Allows you to call OnKill on your own when the NPC dies, rather then letting vanilla call it on its own. Returns false by default.
            </summary>
            <returns>Return true to stop vanilla from calling OnKill on its own. Do this if you call OnKill yourself.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.PreKill">
            <summary>
            Allows you to determine whether or not this NPC will do anything upon death (besides dying). Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnKill">
            <summary>
            Allows you to make things happen when this NPC dies (for example, dropping items and setting ModSystem fields). This hook runs on the server/single player. For client-side effects, such as dust, gore, and sounds, see HitEffect
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnCatchNPC(Terraria.Player,Terraria.Item)">
            <summary>
            Allows you to make things happen when this NPC is caught. Ran Serverside
            </summary>
            <param name="player">The player catching this NPC</param>
            <param name="item">The item that will be spawned</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyNPCLoot(Terraria.ModLoader.NPCLoot)">
            <summary>
            Allows you to add and modify NPC loot tables to drop on death and to appear in the Bestiary.
            </summary>
            <param name="npcLoot"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.BossLoot(System.String@,System.Int32@)">
            <summary>
            Allows you to customize what happens when this boss dies, such as which name is displayed in the defeat message and what type of potion it drops.
            </summary>
            <param name="name"></param>
            <param name="potionType"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanHitPlayer(Terraria.Player,System.Int32@)">
            <summary>
            Allows you to determine whether this NPC can hit the given player. Return false to block this NPC from hitting the target. Returns true by default. CooldownSlot determines which of the player's cooldown counters to use (-1, 0, or 1), and defaults to -1.
            </summary>
            <param name="target"></param>
            <param name="cooldownSlot"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyHitPlayer(Terraria.Player,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that this NPC does to a player.
            </summary>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnHitPlayer(Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when this NPC hits a player (for example, inflicting debuffs).
            </summary>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanHitNPC(Terraria.NPC)">
            <summary>
            Allows you to determine whether this NPC can hit the given friendly NPC. Return true to allow hitting the target, return false to block this NPC from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyHitNPC(Terraria.NPC,System.Int32@,System.Single@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this NPC does to a friendly NPC.
            </summary>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnHitNPC(Terraria.NPC,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when this NPC hits a friendly NPC.
            </summary>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanBeHitByItem(Terraria.Player,Terraria.Item)">
            <summary>
            Allows you to determine whether this NPC can be hit by the given melee weapon when swung. Return true to allow hitting the NPC, return false to block hitting the NPC, and return null to use the vanilla code for whether the NPC can be hit. Returns null by default.
            </summary>
            <param name="player"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyHitByItem(Terraria.Player,Terraria.Item,System.Int32@,System.Single@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this NPC takes from a melee weapon.
            </summary>
            <param name="player"></param>
            <param name="item"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnHitByItem(Terraria.Player,Terraria.Item,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when this NPC is hit by a melee weapon.
            </summary>
            <param name="player"></param>
            <param name="item"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanBeHitByProjectile(Terraria.Projectile)">
            <summary>
            Allows you to determine whether this NPC can be hit by the given projectile. Return true to allow hitting the NPC, return false to block hitting the NPC, and return null to use the vanilla code for whether the NPC can be hit. Returns null by default.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyHitByProjectile(Terraria.Projectile,System.Int32@,System.Single@,System.Boolean@,System.Int32@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this NPC takes from a projectile. This method is only called for the owner of the projectile, meaning that in multi-player, projectiles owned by a player call this method on that client, and projectiles owned by the server such as enemy projectiles call this method on the server.
            </summary>
            <param name="projectile"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
            <param name="hitDirection"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnHitByProjectile(Terraria.Projectile,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when this NPC is hit by a projectile.
            </summary>
            <param name="projectile"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.StrikeNPC(System.Double@,System.Int32,System.Single@,System.Int32,System.Boolean@)">
            <summary>
            Allows you to use a custom damage formula for when this NPC takes damage from any source. For example, you can change the way defense works or use a different crit multiplier. Return false to stop the game from running the vanilla damage formula; returns true by default.
            </summary>
            <param name="damage"></param>
            <param name="defense"></param>
            <param name="knockback"></param>
            <param name="hitDirection"></param>
            <param name="crit"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.BossHeadSlot(System.Int32@)">
            <summary>
            Allows you to customize the boss head texture used by an NPC based on its state. Set index to -1 to stop the texture from being displayed.
            </summary>
            <param name="index">The index for NPCID.Sets.BossHeadTextures</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.BossHeadRotation(System.Single@)">
            <summary>
            Allows you to customize the rotation of this NPC's boss head icon on the map.
            </summary>
            <param name="rotation"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.BossHeadSpriteEffects(Microsoft.Xna.Framework.Graphics.SpriteEffects@)">
            <summary>
            Allows you to flip this NPC's boss head icon on the map.
            </summary>
            <param name="spriteEffects"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.GetAlpha(Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which this NPC is drawn. Return null to use the default color (normally light and buff color). Returns null by default.
            </summary>
            <param name="drawColor"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.DrawEffects(Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to add special visual effects to this NPC (such as creating dust), and modify the color in which the NPC is drawn.
            </summary>
            <param name="drawColor"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.PreDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things behind this NPC, or to modify the way this NPC is drawn. Substract screenPos from the draw position before drawing. Return false to stop the game from drawing the NPC (useful if you're manually drawing the NPC). Returns true by default.
            </summary>
            <param name="spriteBatch">The spritebatch to draw on</param>
            <param name="screenPos">The screen position used to translate world position into screen position</param>
            <param name="drawColor">The color the NPC is drawn in</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.PostDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things in front of this NPC. Substract screenPos from the draw position before drawing. This method is called even if PreDraw returns false.
            </summary>
            <param name="spriteBatch">The spritebatch to draw on</param>
            <param name="screenPos">The screen position used to translate world position into screen position</param>
            <param name="drawColor">The color the NPC is drawn in</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.DrawBehind(System.Int32)">
            <summary>
            When used in conjunction with "npc.hide = true", allows you to specify that this npc should be drawn behind certain elements. Add the index to one of Main.DrawCacheNPCsMoonMoon, DrawCacheNPCsOverPlayers, DrawCacheNPCProjectiles, or DrawCacheNPCsBehindNonSolidTiles.
            </summary>
            <param name="npc"></param>
            <param name="index"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.DrawHealthBar(System.Byte,System.Single@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Allows you to control how the health bar for this NPC is drawn. The hbPosition parameter is the same as Main.hbPosition; it determines whether the health bar gets drawn above or below the NPC by default. The scale parameter is the health bar's size. By default, it will be the normal 1f; most bosses set this to 1.5f. Return null to let the normal vanilla health-bar-drawing code to run. Return false to stop the health bar from being drawn. Return true to draw the health bar in the position specified by the position parameter (note that this is the world position, not screen position).
            </summary>
            <param name="hbPosition"></param>
            <param name="scale"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SpawnChance(Terraria.ModLoader.NPCSpawnInfo)">
            <summary>
            Whether or not this NPC can spawn with the given spawning conditions. Return the weight for the chance of this NPC to spawn compared to vanilla mobs. All vanilla mobs combined have a total weight of 1. Returns 0 by default, which disables natural spawning. Remember to always use spawnInfo.player and not Main.LocalPlayer when checking Player or ModPlayer fields, otherwise your mod won't work in Multiplayer.
            </summary>
            <param name="spawnInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SpawnNPC(System.Int32,System.Int32)">
            <summary>
            Allows you to customize how this NPC is created when it naturally spawns (for example, its position or ai array). Return the return value of NPC.NewNPC. By default this method spawns this NPC on top of the tile at the given coordinates.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanTownNPCSpawn(System.Int32,System.Int32)">
            <summary>
            Whether or not the conditions have been met for this town NPC to be able to move into town. For example, the Demolitionist requires that any player has an explosive.
            </summary>
            <param name="numTownNPCs"></param>
            <param name="money"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CheckConditions(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to define special conditions required for this town NPC's house. For example, Truffle requires the house to be in an aboveground mushroom biome.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="top"></param>
            <param name="bottom"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCName">
            <summary>
            Allows you to give this town NPC any name when it spawns. By default returns something embarrassing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.UsesPartyHat">
            <summary>
            Allows you to determine whether this town NPC wears a party hat during a party. Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanChat">
            <summary>
            Allows you to determine whether this NPC can talk with the player. By default, returns if the NPC is a town NPC.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.GetChat">
            <summary>
            Allows you to give this NPC a chat message when a player talks to it. By default returns something embarrassing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SetChatButtons(System.String@,System.String@)">
            <summary>
            Allows you to set the text for the buttons that appear on this NPC's chat window. A parameter left as an empty string will not be included as a button on the chat window.
            </summary>
            <param name="button"></param>
            <param name="button2"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnChatButtonClicked(System.Boolean,System.Boolean@)">
            <summary>
            Allows you to make something happen whenever a button is clicked on this NPC's chat window. The firstButton parameter tells whether the first button or second button (button and button2 from SetChatButtons) was clicked. Set the shop parameter to true to open this NPC's shop.
            </summary>
            <param name="firstButton"></param>
            <param name="shop"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SetupShop(Terraria.Chest,System.Int32@)">
            <summary>
            Allows you to add items to this NPC's shop. Add an item by setting the defaults of shop.item[nextSlot] then incrementing nextSlot. In the end, nextSlot must have a value of 1 greater than the highest index in shop.item that contains an item.
            </summary>
            <param name="shop"></param>
            <param name="nextSlot"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanGoToStatue(System.Boolean)">
            <summary>
            Whether this NPC can be telported to a King or Queen statue. Returns false by default.
            </summary>
            <param name="toKingStatue">Whether the NPC is being teleported to a King or Queen statue.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnGoToStatue(System.Boolean)">
            <summary>
            Allows you to make things happen when this NPC teleports to a King or Queen statue.
            This method is only called server side.
            </summary>
            <param name="toKingStatue">Whether the NPC was teleported to a King or Queen statue.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackStrength(System.Int32@,System.Single@)">
            <summary>
            Allows you to determine the damage and knockback of this town NPC's attack before the damage is scaled. (More information on scaling in GlobalNPC.BuffTownNPCs.)
            </summary>
            <param name="damage"></param>
            <param name="knockback"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackCooldown(System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the cooldown between each of this town NPC's attack. The cooldown will be a number greater than or equal to the first parameter, and less then the sum of the two parameters.
            </summary>
            <param name="cooldown"></param>
            <param name="randExtraCooldown"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackProj(System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the projectile type of this town NPC's attack, and how long it takes for the projectile to actually appear. This hook is only used when the town NPC has an attack type of 0 (throwing), 1 (shooting), or 2 (magic).
            </summary>
            <param name="projType"></param>
            <param name="attackDelay"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackProjSpeed(System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to determine the speed at which this town NPC throws a projectile when it attacks. Multiplier is the speed of the projectile, gravityCorrection is how much extra the projectile gets thrown upwards, and randomOffset allows you to randomize the projectile's velocity in a square centered around the original velocity. This hook is only used when the town NPC has an attack type of 0 (throwing), 1 (shooting), or 2 (magic).
            </summary>
            <param name="multiplier"></param>
            <param name="gravityCorrection"></param>
            <param name="randomOffset"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackShoot(System.Boolean@)">
            <summary>
            Allows you to tell the game that this town NPC has already created a projectile and will still create more projectiles as part of a single attack so that the game can animate the NPC's attack properly. Only used when the town NPC has an attack type of 1 (shooting).
            </summary>
            <param name="inBetweenShots"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackMagic(System.Single@)">
            <summary>
            Allows you to control the brightness of the light emitted by this town NPC's aura when it performs a magic attack. Only used when the town NPC has an attack type of 2 (magic)
            </summary>
            <param name="auraLightMultiplier"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackSwing(System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the width and height of the item this town NPC swings when it attacks, which controls the range of this NPC's swung weapon. Only used when the town NPC has an attack type of 3 (swinging).
            </summary>
            <param name="itemWidth"></param>
            <param name="itemHeight"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.DrawTownAttackGun(System.Single@,System.Int32@,System.Int32@)">
            <summary>
            Allows you to customize how this town NPC's weapon is drawn when this NPC is shooting (this NPC must have an attack type of 1). Scale is a multiplier for the item's drawing size, item is the ID of the item to be drawn, and closeness is how close the item should be drawn to the NPC.
            </summary>
            <param name="scale"></param>
            <param name="item"></param>
            <param name="closeness"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.DrawTownAttackSwing(Microsoft.Xna.Framework.Graphics.Texture2D@,System.Int32@,System.Single@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Allows you to customize how this town NPC's weapon is drawn when this NPC is swinging it (this NPC must have an attack type of 3). Item is the Texture2D instance of the item to be drawn (use Main.itemTexture[id of item]), itemSize is the width and height of the item's hitbox (the same values for TownNPCAttackSwing), scale is the multiplier for the item's drawing size, and offset is the offset from which to draw the item from its normal position.
            </summary>
            <param name="item"></param>
            <param name="itemSize"></param>
            <param name="scale"></param>
            <param name="offset"></param>
        </member>
        <member name="T:Terraria.ModLoader.ModPacket">
            <summary>
            This class inherits from BinaryWriter. This means that you can use all of its writing functions to send information between client and server. This class also comes with a Send method that's used to actually send everything you've written between client and server.
            
            ModPacket has all the same methods as BinaryWriter, and some additional ones.
            </summary>
            <seealso cref="T:System.IO.BinaryWriter" />
        </member>
        <member name="M:Terraria.ModLoader.ModPacket.Send(System.Int32,System.Int32)">
            <summary>
            Sends all the information you've written between client and server. If the toClient parameter is non-negative, this packet will only be sent to the specified client. If the ignoreClient parameter is non-negative, this packet will not be sent to the specified client.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModPlayer">
            <summary>
            A ModPlayer instance represents an extension of a Player instance. You can store fields in the ModPlayer classes, much like how the Player class abuses field usage, to keep track of mod-specific information on the player that a ModPlayer instance represents. It also contains hooks to insert your code into the Player class.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModPlayer.Player">
            <summary>
            The Player instance that this ModPlayer instance is attached to.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModPlayer.CloneNewInstances">
            <summary>
            Whether each player gets a ModPlayer by cloning the ModPlayer added to the Mod or by creating a new ModPlayer object with the same type as the ModPlayer added to the Mod. The accessor returns true by default. Return false if you want to assign fields through the constructor.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.Initialize">
            <summary>
            Called whenever the player is loaded (on the player selection screen). This can be used to initialize data structures, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ResetEffects">
            <summary>
            This is where you reset any fields you add to your ModPlayer subclass to their default states. This is necessary in order to reset your fields if they are conditionally set by a tick update but the condition is no longer satisfied.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateDead">
            <summary>
            Similar to UpdateDead, except this is only called when the player is dead. If this is called, then ResetEffects will not be called.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreSaveCustomData">
            <summary>
            Currently never gets called, so this is useless.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.Save">
            <summary>
            Allows you to save custom data for this player. Returns null by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.Load(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load custom data you have saved for this player.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreSavePlayer">
            <summary>
            PreSavePlayer and PostSavePlayer wrap the vanilla player saving code (both are before the ModPlayer.Save). Useful for advanced situations where a save might be corrupted or rendered unusable by the values that normally would save.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostSavePlayer">
            <summary>
            PreSavePlayer and PostSavePlayer wrap the vanilla player saving code (both are before the ModPlayer.Save). Useful for advanced situations where a save might be corrupted or rendered unusable by the values that normally would save.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.clientClone(Terraria.ModLoader.ModPlayer)">
            <summary>
            Allows you to copy information about this player to the clientClone parameter. You should copy information that you intend to sync between server and client. This hook is called in the Player.clientClone method. See SendClientChanges for more info.
            </summary>
            <param name="clientClone"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.SyncPlayer(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Allows you to sync information about this player between server and client. The toWho and fromWho parameters correspond to the remoteClient/toClient and ignoreClient arguments, respectively, of NetMessage.SendData/ModPacket.Send. The newPlayer parameter is whether or not the player is joining the server (it is true on the joining client).
            </summary>
            <param name="toWho"></param>
            <param name="fromWho"></param>
            <param name="newPlayer"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.SendClientChanges(Terraria.ModLoader.ModPlayer)">
            <summary>
            Allows you to sync any information that has changed between the server and client. Here, you should check the information you have copied in the clientClone parameter; if they differ between this player and the clientPlayer parameter, then you should send that information using NetMessage.SendData or ModPacket.Send.
            </summary>
            <param name="clientPlayer"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.GetMapBackgroundImage">
            <summary>
            Allows you to change the background that displays when viewing the map. Return null if you do not want to change the background. Returns null by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateBadLifeRegen">
            <summary>
            Allows you to give the player a negative life regeneration based on its state (for example, the "On Fire!" debuff makes the player take damage-over-time). This is typically done by setting player.lifeRegen to 0 if it is positive, setting player.lifeRegenTime to 0, and subtracting a number from player.lifeRegen. The player will take damage at a rate of half the number you subtract per second.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateLifeRegen">
            <summary>
            Allows you to increase the player's life regeneration based on its state. This can be done by incrementing player.lifeRegen by a certain number. The player will recover life at a rate of half the number you add per second. You can also increment player.lifeRegenTime to increase the speed at which the player reaches its maximum natural life regeneration.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.NaturalLifeRegen(System.Single@)">
            <summary>
            Allows you to modify the power of the player's natural life regeneration. This can be done by multiplying the regen parameter by any number. For example, campfires multiply it by 1.1, while walking multiplies it by 0.5.
            </summary>
            <param name="regen"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateAutopause">
            <summary>
            Allows you to modify the player's stats while the game is paused due to the autopause setting being on.
            This is called in single player only, some time before the player's tick update would happen when the game isn't paused.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreUpdate">
            <summary>
            This is called at the beginning of every tick update for this player, after checking whether the player exists.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ProcessTriggers(Terraria.GameInput.TriggersSet)">
            <summary>
            Use this to check on keybinds you have registered. While SetControls is set even while in text entry mode, this hook is only called during gameplay.
            </summary>
            <param name="triggersSet"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.SetControls">
            <summary>
            Use this to modify the control inputs that the player receives. For example, the Confused debuff swaps the values of player.controlLeft and player.controlRight. This is called sometime after PreUpdate is called.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreUpdateBuffs">
            <summary>
            This is called sometime after SetControls is called, and right before all the buffs update on this player. This hook can be used to add buffs to the player based on the player's state (for example, the Campfire buff is added if the player is near a Campfire).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostUpdateBuffs">
            <summary>
            This is called right after all of this player's buffs update on the player. This can be used to modify the effects that the buff updates had on this player, and can also be used for general update tasks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateEquips">
            <summary>
            Called after Update Accessories. 
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostUpdateEquips">
            <summary>
            This is called right after all of this player's equipment and armor sets update on the player, which is sometime after PostUpdateBuffs is called. This can be used to modify the effects that the equipment had on this player, and can also be used for general update tasks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostUpdateMiscEffects">
            <summary>
            This is called after miscellaneous update code is called in Player.Update, which is sometime after PostUpdateEquips is called. This can be used for general update tasks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostUpdateRunSpeeds">
            <summary>
            This is called after the player's horizontal speeds are modified, which is sometime after PostUpdateMiscEffects is called, and right before the player's horizontal position is updated. Use this to modify maxRunSpeed, accRunSpeed, runAcceleration, and similar variables before the player moves forwards/backwards.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreUpdateMovement">
            <summary>
            This is called right before modifying the player's position based on velocity. Use this to make direct changes to the velocity.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostUpdate">
            <summary>
            This is called at the very end of the Player.Update method. Final general update tasks can be placed here.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateVanityAccessories">
            <summary>
            This is called after VanillaUpdateVanityAccessory() in player.UpdateEquips()
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.FrameEffects">
            <summary>
            Allows you to modify the armor and accessories that visually appear on the player. In addition, you can create special effects around this character, such as creating dust.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreHurt(System.Boolean,System.Boolean,System.Int32@,System.Int32@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,Terraria.DataStructures.PlayerDeathReason@)">
            <summary>
            This hook is called before every time the player takes damage. The pvp parameter is whether the damage was from another player. The quiet parameter determines whether the damage will be communicated to the server. The damage, hitDirection, and crit parameters can be modified. Set the customDamage parameter to true if you want to use your own damage formula (this parameter will disable automatically subtracting the player's defense from the damage). Set the playSound parameter to false to disable the player's hurt sound, and the genGore parameter to false to disable the dust particles that spawn. (These are useful for creating your own sound or gore.) The deathText parameter can be modified to change the player's death message if the player dies. Return false to stop the player from taking damage. Returns true by default.
            </summary>
            <param name="pvp"></param>
            <param name="quiet"></param>
            <param name="damage"></param>
            <param name="hitDirection"></param>
            <param name="crit"></param>
            <param name="customDamage"></param>
            <param name="playSound"></param>
            <param name="genGore"></param>
            <param name="damageSource"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.Hurt(System.Boolean,System.Boolean,System.Double,System.Int32,System.Boolean)">
            <summary>
            Allows you to make anything happen right before damage is subtracted from the player's health.
            </summary>
            <param name="pvp"></param>
            <param name="quiet"></param>
            <param name="damage"></param>
            <param name="hitDirection"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostHurt(System.Boolean,System.Boolean,System.Double,System.Int32,System.Boolean)">
            <summary>
            Allows you to make anything happen when the player takes damage.
            </summary>
            <param name="pvp"></param>
            <param name="quiet"></param>
            <param name="damage"></param>
            <param name="hitDirection"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreKill(System.Double,System.Int32,System.Boolean,System.Boolean@,System.Boolean@,Terraria.DataStructures.PlayerDeathReason@)">
            <summary>
            This hook is called whenever the player is about to be killed after reaching 0 health. Set the playSound parameter to false to stop the death sound from playing. Set the genGore parameter to false to stop the gore and dust from being created. (These are useful for creating your own sound or gore.) Return false to stop the player from being killed. Only return false if you know what you are doing! Returns true by default.
            </summary>
            <param name="damage"></param>
            <param name="hitDirection"></param>
            <param name="pvp"></param>
            <param name="playSound"></param>
            <param name="genGore"></param>
            <param name="damageSource"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.Kill(System.Double,System.Int32,System.Boolean,Terraria.DataStructures.PlayerDeathReason)">
            <summary>
            Allows you to make anything happen when the player dies.
            </summary>
            <param name="damage"></param>
            <param name="hitDirection"></param>
            <param name="pvp"></param>
            <param name="damageSource"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreModifyLuck(System.Single@)">
            <summary>
            Called before vanilla makes any luck calculations. Return false to prevent vanilla from making their luck calculations. Returns true by default.
            </summary>
            <param name="luck"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyLuck(System.Single@)">
            <summary>
            Allows you to modify a player's luck amount.
            </summary>
            <param name="luck"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreItemCheck">
            <summary>
            Allows you to do anything before the update code for the player's held item is run. Return false to stop the held item update code from being run (for example, if the player is frozen). Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostItemCheck">
            <summary>
            Allows you to do anything after the update code for the player's held item is run. Hooks for the middle of the held item update code have more specific names in ModItem and ModPlayer.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UseTimeMultiplier(Terraria.Item)">
            <summary>
            Allows you to change the effective useTime of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns> The multiplier on the usage time. 1f by default. Values greater than 1 increase the item use's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UseAnimationMultiplier(Terraria.Item)">
            <summary>
            Allows you to change the effective useAnimation of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns>The multiplier on the animation time. 1f by default. Values greater than 1 increase the item animation's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UseSpeedMultiplier(Terraria.Item)">
            <summary>
            Allows you to safely change both useTime and useAnimation while keeping the values relative to each other.
            <br/> Useful for status effects.
            </summary>
            <returns> The multiplier on the use speed. 1f by default. Values greater than 1 increase the overall item speed. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.GetHealLife(Terraria.Item,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of life a life healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healLife value.
            </summary>
            <param name="item">The item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of life being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.GetHealMana(Terraria.Item,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of mana a mana healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healMana value.
            </summary>
            <param name="item">The item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of mana being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyManaCost(Terraria.Item,System.Single@,System.Single@)">
            <summary>
            Allows you to temporarily modify the amount of mana an item will consume on use, based on player buffs, accessories, etc. This is only called for items with a mana value.
            </summary>
            <param name="item">The item being used.</param>
            <param name="reduce">Used for decreasingly stacking buffs (most common). Only ever use -= on this field.</param>
            <param name="mult">Use to directly multiply the item's effective mana cost. Good for debuffs, or things which should stack separately (eg meteor armor set bonus).</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnMissingMana(Terraria.Item,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player doesn't have enough mana for the item they are trying to use.
            If the player has high enough mana after this hook runs, mana consumption will happen normally.
            Only runs once per item use.
            </summary>
            <param name="item">The item being used.</param>
            <param name="neededMana">The mana needed to use the item.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnConsumeMana(Terraria.Item,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player consumes mana on use of an item.
            </summary>
            <param name="item">The item being used.</param>
            <param name="manaConsumed">The mana consumed from the player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyWeaponDamage(Terraria.Item,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Allows you to temporarily modify this weapon's damage based on player buffs, etc. This is useful for creating new classes of damage, or for making subclasses of damage (for example, Shroomite armor set boosts).
            </summary>
            <param name="item">The item being used</param>
            <param name="add">Used for additively stacking buffs (most common). Only ever use += on this field. Things with effects like "5% increased MyDamageClass damage" would use this: `add += 0.05f`</param>
            <param name="mult">Use to directly multiply the player's effective damage. Good for debuffs, or things which should stack separately (eg ammo type buffs)</param>
            <param name="flat">This is a flat damage bonus that will be added after add and mult are applied. It facilitates effects like "4 more damage from weapons"</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyWeaponKnockback(Terraria.Item,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Allows you to temporarily modify a weapon's knockback based on player buffs, etc. This allows you to customize knockback beyond the Player class's limited fields.
            </summary>
            <param name="item"></param>
            <param name="knockback"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyWeaponCrit(Terraria.Item,System.Int32@)">
            <summary>
            Allows you to temporarily modify a weapon's crit chance based on player buffs, etc.
            </summary>
            <param name="item">The item</param>
            <param name="crit">The crit chance, ranging from 0 to 100</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ConsumeAmmo(Terraria.Item,Terraria.Item)">
            <summary>
            Whether or not ammo will be consumed upon usage. Return false to stop the ammo from being depleted. Returns true by default.
            If false is returned, the OnConsumeAmmo hook is never called.
            </summary>
            <param name="weapon"></param>
            <param name="ammo"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnConsumeAmmo(Terraria.Item,Terraria.Item)">
            <summary>
            Allows you to make things happen when ammo is consumed.
            Called before the ammo stack is reduced.
            </summary>
            <param name="weapon"></param>
            <param name="ammo"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanShoot(Terraria.Item)">
            <summary>
            Allows you to prevent an item from shooting a projectile on use. Returns true by default.
            </summary>
            <param name="item"> The item being used. </param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyShootStats(Terraria.Item,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            Allows you to modify the position, velocity, type, damage and/or knockback of a projectile being shot by an item.
            </summary>
            <param name="item"> The item being used. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.Shoot(Terraria.Item,Terraria.DataStructures.ProjectileSource_Item_WithAmmo,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single)">
            <summary>
            Allows you to modify an item's shooting mechanism. Return false to prevent vanilla's shooting code from running. Returns true by default.
            </summary>
            <param name="item"> The item being used. </param>
            <param name="source"> The projectile source's information. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.MeleeEffects(Terraria.Item,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to give this player's melee weapon special effects, such as creating light or dust.
            </summary>
            <param name="item"></param>
            <param name="hitbox"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitAnything(System.Single,System.Single,Terraria.Entity)">
            <summary>
            This hook is called when a player damages anything, whether it be an NPC or another player, using anything, whether it be a melee weapon or a projectile. The x and y parameters are the coordinates of the victim parameter's center.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="victim"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanHitNPC(Terraria.Item,Terraria.NPC)">
            <summary>
            Allows you to determine whether a player can hit the given NPC by swinging a melee weapon. Return true to allow hitting the target, return false to block this player from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="item"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHitNPC(Terraria.Item,Terraria.NPC,System.Int32@,System.Single@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this player does to an NPC by swinging a melee weapon.
            </summary>
            <param name="item"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitNPC(Terraria.Item,Terraria.NPC,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when this player hits an NPC by swinging a melee weapon (for example how the Pumpkin Sword creates pumpkin heads).
            </summary>
            <param name="item"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanHitNPCWithProj(Terraria.Projectile,Terraria.NPC)">
            <summary>
            Allows you to determine whether a projectile created by this player can hit the given NPC. Return true to allow hitting the target, return false to block this projectile from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="proj"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHitNPCWithProj(Terraria.Projectile,Terraria.NPC,System.Int32@,System.Single@,System.Boolean@,System.Int32@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that a projectile created by this player does to an NPC.
            </summary>
            <param name="proj"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
            <param name="hitDirection"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitNPCWithProj(Terraria.Projectile,Terraria.NPC,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when a projectile created by this player hits an NPC (for example, inflicting debuffs).
            </summary>
            <param name="proj"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanHitPvp(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to determine whether a melee weapon swung by this player can hit the given opponent player. Return false to block this weapon from hitting the target. Returns true by default.
            </summary>
            <param name="item"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHitPvp(Terraria.Item,Terraria.Player,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that a melee weapon swung by this player does to an opponent player.
            </summary>
            <param name="item"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitPvp(Terraria.Item,Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when this player's melee weapon hits an opponent player.
            </summary>
            <param name="item"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanHitPvpWithProj(Terraria.Projectile,Terraria.Player)">
            <summary>
            Allows you to determine whether a projectile created by this player can hit the given opponent player. Return false to block the projectile from hitting the target. Returns true by default.
            </summary>
            <param name="proj"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHitPvpWithProj(Terraria.Projectile,Terraria.Player,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that a projectile created by this player does to an opponent player.
            </summary>
            <param name="proj"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitPvpWithProj(Terraria.Projectile,Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when a projectile created by this player hits an opponent player.
            </summary>
            <param name="proj"></param>
            <param name="target"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanBeHitByNPC(Terraria.NPC,System.Int32@)">
            <summary>
            Allows you to determine whether the given NPC can hit this player. Return false to block this player from being hit by the NPC. Returns true by default. CooldownSlot determines which of the player's cooldown counters to use (-1, 0, or 1), and defaults to -1.
            </summary>
            <param name="npc"></param>
            <param name="cooldownSlot"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHitByNPC(Terraria.NPC,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that an NPC does to this player.
            </summary>
            <param name="npc"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitByNPC(Terraria.NPC,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when an NPC hits this player (for example, inflicting debuffs).
            </summary>
            <param name="npc"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanBeHitByProjectile(Terraria.Projectile)">
            <summary>
            Allows you to determine whether the given hostile projectile can hit this player. Return false to block this player from being hit. Returns true by default.
            </summary>
            <param name="proj"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHitByProjectile(Terraria.Projectile,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that a hostile projectile does to this player.
            </summary>
            <param name="proj"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitByProjectile(Terraria.Projectile,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when a hostile projectile hits this player.
            </summary>
            <param name="proj"></param>
            <param name="damage"></param>
            <param name="crit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CatchFish(Terraria.Item,Terraria.Item,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Allows you to change the item the player gains from catching a fish. The fishingRod and bait parameters refer to the said items in the player's inventory. The liquidType parameter is 0 if the player is fishing in water, 1 for lava, and 2 for honey. The poolSize parameter is the tile size of the pool the player is fishing in. The worldLayer parameter is 0 if the player is in the sky, 1 if the player is on the surface, 2 if the player is underground, 3 if the player is in the caverns, and 4 if the player is in the underworld. The questFish parameter is the item ID for the day's Angler quest. Modify the caughtType parameter to change the item the player catches. The junk parameter is whether the player catches junk; you can set this to true if you make the player catch a junk item, and is mostly used to pass information (has no effect on the game).
            </summary>
            <param name="fishingRod"></param>
            <param name="bait"></param>
            <param name="power"></param>
            <param name="liquidType"></param>
            <param name="poolSize"></param>
            <param name="worldLayer"></param>
            <param name="questFish"></param>
            <param name="caughtType"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.GetFishingLevel(Terraria.Item,Terraria.Item,System.Single@)">
            <summary>
            Allows you to modify the player's fishing power. As an example of the type of stuff that should go here, the phase of the moon can influence fishing power.
            </summary>
            <param name="fishingRod"></param>
            <param name="bait"></param>
            <param name="fishingLevel"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.AnglerQuestReward(System.Single,System.Collections.Generic.List{Terraria.Item})">
            <summary>
            Allows you to add to, change, or remove from the items the player earns when finishing an Angler quest. The rareMultiplier is a number between 0.15 and 1 inclusively; the lower it is the higher chance there should be for the player to earn rare items.
            </summary>
            <param name="rareMultiplier"></param>
            <param name="rewardItems"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.GetDyeTraderReward(System.Collections.Generic.List{System.Int32})">
            <summary>
            Allows you to modify what items are possible for the player to earn when giving a Strange Plant to the Dye Trader.
            </summary>
            <param name="rewardPool"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.DrawEffects(Terraria.DataStructures.PlayerDrawSet,System.Single@,System.Single@,System.Single@,System.Single@,System.Boolean@)">
            <summary>
            Allows you to create special effects when this player is drawn, such as creating dust, modifying the color the player is drawn in, etc. The fullBright parameter makes it so that the drawn player ignores the modified color and lighting. Note that the fullBright parameter only works if r, g, b, and/or a is not equal to 1. Make sure to add the indexes of any dusts you create to drawInfo.DustCache, and the indexes of any gore you create to drawInfo.GoreCache.
            </summary>
            <param name="drawInfo"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="a"></param>
            <param name="fullBright"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyDrawInfo(Terraria.DataStructures.PlayerDrawSet@)">
            <summary>
            Allows you to modify the drawing parameters of the player before drawing begins.
            </summary>
            <param name="drawInfo"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyDrawLayerOrdering(System.Collections.Generic.IDictionary{Terraria.ModLoader.PlayerDrawLayer,Terraria.ModLoader.PlayerDrawLayer.Position})">
            <summary>
            Allows you to reorder the player draw layers. 
            This is called once at the end of mod loading, not during the game.
            Use with extreme caution, or risk breaking other mods.
            </summary>
            <param name="positions">Add/remove/change the positions applied to each layer here</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.HideDrawLayers(Terraria.DataStructures.PlayerDrawSet)">
            <summary>
            Allows you to modify the visiblity of layers about to be drawn
            </summary>
            <param name="layers"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyScreenPosition">
            <summary>
            Use this hook to modify Main.screenPosition after weapon zoom and camera lerp have taken place.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyZoom(System.Single@)">
            <summary>
            Use this to modify the zoom factor for the player. The zoom correlates to the percentage of half the screen size the zoom can reach. A value of -1 passed in means no vanilla scope is in effect. A value of 1.0 means the scope can zoom half a screen width/height away, putting the player on the edge of the game screen. Vanilla values include .8, .6666, and .5.
            </summary>
            <param name="zoom"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PlayerConnect(Terraria.Player)">
            <summary>
            Called on clients when a player connects.
            </summary>
            <param name="player">The player that connected.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PlayerDisconnect(Terraria.Player)">
            <summary>
            Called when a player disconnects.
            </summary>
            <param name="player">The player that disconnected.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnEnterWorld(Terraria.Player)">
            <summary>
            Called on the LocalPlayer when that player enters the world. SP and Client. Only called on the player who is entering. A possible use is ensuring that UI elements are reset to the configuration specified in data saved to the ModPlayer. Can also be used for informational messages.
            </summary>
            <param name="player">The player that entered the world.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnRespawn(Terraria.Player)">
            <summary>
            Called when a player respawns in the world.
            </summary>
            <param name="player">The player that respawns</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ShiftClickSlot(Terraria.Item[],System.Int32,System.Int32)">
            <summary>
            Called whenever the player shift-clicks an item slot. This can be used to override default clicking behavior (ie. selling, trashing, moving items).
            </summary>
            <param name="inventory">The array of items the slot is part of.</param>
            <param name="context">The Terraria.UI.ItemSlot.Context of the inventory.</param>
            <param name="slot">The index in the inventory of the clicked slot.</param>
            <returns>Whether or not to block the default code (sell, trash, move, etc) from running. Returns false by default.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostSellItem(Terraria.NPC,Terraria.Item[],Terraria.Item)">
            <summary>
            Called whenever the player sells an item to an NPC.
            </summary>
            <param name="vendor">The NPC vendor.</param>
            <param name="shopInventory">The current inventory of the NPC shop.</param>
            <param name="item">The item the player just sold.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanSellItem(Terraria.NPC,Terraria.Item[],Terraria.Item)">
            <summary>
            Return false to prevent a transaction. Called before the transaction.
            </summary>
            <param name="vendor">The NPC vendor.</param>
            <param name="shopInventory">The current inventory of the NPC shop.</param>
            <param name="item">The item the player is attempting to sell.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostBuyItem(Terraria.NPC,Terraria.Item[],Terraria.Item)">
            <summary>
            Called whenever the player buys an item from an NPC.
            </summary>
            <param name="vendor">The NPC vendor.</param>
            <param name="shopInventory">The current inventory of the NPC shop.</param>
            <param name="item">The item the player just purchased.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanBuyItem(Terraria.NPC,Terraria.Item[],Terraria.Item)">
            <summary>
            Return false to prevent a transaction. Called before the transaction.
            </summary>
            <param name="vendor">The NPC vendor.</param>
            <param name="shopInventory">The current inventory of the NPC shop.</param>
            <param name="item">The item the player is attempting to buy.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanUseItem(Terraria.Item)">
            <summary>
            Return false to prevent an item from being used. By default returns true.
            </summary>
            <param name="item">The item the player is attempting to use.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyNurseHeal(Terraria.NPC,System.Int32@,System.Boolean@,System.String@)">
            <summary>
            Called on the Client while the nurse chat is displayed. Return false to prevent the player from healing. If you return false, you need to set chatText so the user knows why they can't heal.
            </summary>
            <param name="nurse">The Nurse NPC instance.</param>
            <param name="health">How much health the player gains.</param>
            <param name="removeDebuffs">If set to false, debuffs will not be healed.</param>
            <param name="chatText">Set this to the Nurse chat text that will display if healing is prevented.</param>
            <returns>True by default. False to prevent nurse services.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyNursePrice(Terraria.NPC,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Called on the Client while the nurse chat is displayed and after ModifyNurseHeal. Allows custom pricing for Nurse services. See https://terraria.gamepedia.com/Nurse for the default pricing.
            </summary>
            <param name="nurse">The Nurse NPC instance.</param>
            <param name="health">How much health the player gains.</param>
            <param name="removeDebuffs">Whether or not debuffs will be healed.</param>
            <param name="price"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostNurseHeal(Terraria.NPC,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Called on the Client after the player heals themselves with the Nurse NPC.
            </summary>
            <param name="nurse">The Nurse npc providing the heal.</param>
            <param name="health">How much health the player gained.</param>
            /// <param name="removeDebuffs">Whether or not debuffs were healed.</param>
            <param name="price">The price the player paid in copper coins.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Terraria.ModLoader.ModPlayer.AddStartingItems(System.Boolean)" -->
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyStartingInventory(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.List{Terraria.Item}},System.Boolean)">
            <summary>
            Allows you to modify the items that will be added to the player's inventory. Useful if you want to stop vanilla or other mods from adding an item.
            You can access a mod's items by using the mod's internal name as the indexer, such as: additions["ModName"]. To access vanilla items you can use "Terraria" as the index.
            </summary>
            <param name="itemsByMod">The items that will be added. Each key is the internal mod name of the mod adding the items. Vanilla items use the "Terraria" key.</param>
            <param name="mediumCoreDeath">Whether you are setting up a mediumcore player's inventory after their death.</param>
        </member>
        <member name="F:Terraria.ModLoader.PrefixCategory.Melee">
            <summary>
            Can modify the size of the weapon
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.PrefixCategory.Ranged">
            <summary>
            Can modify the shoot speed of the weapon
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.PrefixCategory.Magic">
            <summary>
            Can modify the mana usage of the weapon
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.PrefixCategory.Custom">
            <summary>
            Will not appear by default. Useful as prefixes for your own damage type.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModPrefix.Category">
            <summary>
            The category your prefix belongs to, PrefixCategory.Custom by default
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.RollChance(Terraria.Item)">
            <summary>
            The roll chance of your prefix relative to a vanilla prefix, 1f by default. 
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.CanRoll(Terraria.Item)">
            <summary>
            Returns if your ModPrefix can roll on the given item
            By default returns RollChance(item) > 0
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.SetStats(System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Int32@)">
            <summary>
            Sets the stat changes for this prefix. If data is not already pre-stored, it is best to store custom data changes to some static variables.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.ValidateItem(Terraria.Item,System.Boolean@)">
            <summary>
            Validates whether this prefix with the custom data stats set from SetStats is allowed on the given item.
            It is not allowed if one of the stat changes do not cause any change (eg. percentage being too small to make a difference).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.Apply(Terraria.Item)">
            <summary>
            Applies the custom data stats set in SetStats to the given item.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.ModifyValue(System.Single@)">
            <summary>
            Allows you to modify the sell price of the item based on the prefix or changes in custom data stats. This also influences the item's rarity.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModProjectile">
            <summary>
            This class serves as a place for you to place all your properties and hooks for each projectile. Create instances of ModProjectile (preferably overriding this class) to pass as parameters to Mod.AddProjectile.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.Projectile">
            <summary> The projectile object that this ModProjectile controls. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.DisplayName">
            <summary> The translations for the display name of this projectile. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.AIType">
            <summary> Determines which type of vanilla projectile this ModProjectile will copy the behavior (AI) of. Leave as 0 to not copy any behavior. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.CooldownSlot">
            <summary> Determines which of the player's cooldown counters to use (-1, 0, or 1) when this projectile damages it. Defaults to -1. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.DrawOffsetX">
            <summary> How far to the right of its position this projectile should be drawn. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.DrawOriginOffsetY">
            <summary> The vertical origin offset from the projectile's center when it is drawn. The origin is essentially the point of rotation. This field will also determine the vertical drawing offset of the projectile. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.DrawOriginOffsetX">
            <summary> The horizontal origin offset from the projectile's center when it is drawn. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.DrawHeldProjInFrontOfHeldItemAndArms">
            <summary> If this projectile is held by the player, determines whether it is drawn in front of or behind the player's arms. Defaults to false. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.GlowTexture">
            <summary> The file name of this projectile's glow texture file in the mod loader's file space. If it does not exist it is ignored. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.Type">
            <summary>  Shorthand for projectile.type; </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.CloneNewInstances">
            <summary>
            Whether instances of this ModProjectile are created through a memberwise clone or its constructor. Defaults to false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.Clone">
            <summary>
            Returns a clone of this ModProjectile. 
            Allows you to decide which fields of your ModProjectile class are copied over when a new Projectile is created. 
            By default this will return a memberwise clone; you will want to override this if your ModProjectile contains object references. 
            Only called if CloneNewInstances is set to true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.NewInstance(Terraria.Projectile)">
            <summary>
            Create a new instance of this ModProjectile for a Projectile instance. 
            Called at the end of Projectile.SetDefaults.
            If CloneNewInstances is true, just calls Clone()
            Otherwise calls the default constructor and copies fields
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.SetDefaults">
            <summary>
            Allows you to set all your projectile's properties, such as width, damage, aiStyle, penetrate, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.AutoStaticDefaults">
            <summary>
            Automatically sets certain static defaults. Override this if you do not want the properties to be set for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PreAI">
            <summary>
            Allows you to determine how this projectile behaves. Return false to stop the vanilla AI and the AI hook from being run. Returns true by default.
            </summary>
            <returns>Whether or not to stop other AI.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.AI">
            <summary>
            Allows you to determine how this projectile behaves. This will only be called if PreAI returns true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PostAI">
            <summary>
            Allows you to determine how this projectile behaves. This will be called regardless of what PreAI returns.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.SendExtraAI(System.IO.BinaryWriter)">
            <summary>
            If you are storing AI information outside of the projectile.ai array, use this to send that AI information between clients and servers.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ReceiveExtraAI(System.IO.BinaryReader)">
            <summary>
            Use this to receive information that was sent in SendExtraAI.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ShouldUpdatePosition">
            <summary>
            Whether or not this projectile should update its position based on factors such as its velocity, whether it is in liquid, etc. Return false to make its velocity have no effect on its position. Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.TileCollideStyle(System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to determine how this projectile interacts with tiles. Width and height determine the projectile's hitbox for tile collision, and default to -1. Leave them as -1 to use the projectile's real size. Fallthrough determines whether the projectile can fall through platforms, etc., and defaults to true.
            </summary>
            <param name="width">Width of the hitbox.</param>
            <param name="height">Height of the hitbox.</param>
            <param name="fallThrough">If the projectile can fall through platforms etc.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.OnTileCollide(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Allows you to determine what happens when this projectile collides with a tile. OldVelocity is the velocity before tile collision. The velocity that takes tile collision into account can be found with projectile.velocity. Return true to allow the vanilla tile collision code to take place (which normally kills the projectile). Returns true by default.
            </summary>
            <param name="oldVelocity">The velocity of the projectile upon collision.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanCutTiles">
            <summary>
            Return true or false to specify if the projectile can cut tiles, like vines. Return null for vanilla decision.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CutTiles">
            <summary>
            Code ran when the projectile cuts tiles. Only runs if CanCutTiles() returns true. Useful when programming lasers and such.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PreKill(System.Int32)">
            <summary>
            Allows you to determine whether the vanilla code for Kill and the Kill hook will be called. Return false to stop them from being called. Returns true by default. Note that this does not stop the projectile from dying.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.Kill(System.Int32)">
            <summary>
            Allows you to control what happens when this projectile is killed (for example, creating dust or making sounds). Also useful for creating retrievable ammo. Called on all clients and the server in multiplayer, so be sure to use `if (projectile.owner == Main.myPlayer)` if you are spawning retrievable ammo. (As seen in ExampleJavelinProjectile)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanDamage">
            <summary>
            Whether or not this projectile is capable of killing tiles (such as grass) and damaging NPCs/players.
            Return false to prevent it from doing any sort of damage.
            Return true if you want the projectile to do damage regardless of the default blacklist.
            Return null to let the projectile follow vanilla can-damage-anything rules. This is what happens by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.MinionContactDamage">
            <summary>
            Whether or not this minion can damage NPCs by touching them. Returns false by default. Note that this will only be used if this projectile is considered a pet.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ModifyDamageHitbox(Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Allows you to change the hitbox used by this projectile for damaging players and NPCs.
            </summary>
            <param name="hitbox"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanHitNPC(Terraria.NPC)">
            <summary>
            Allows you to determine whether this projectile can hit the given NPC. Return true to allow hitting the target, return false to block this projectile from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ModifyHitNPC(Terraria.NPC,System.Int32@,System.Single@,System.Boolean@,System.Int32@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this projectile does to an NPC. This method is only called for the owner of the projectile, meaning that in multi-player, projectiles owned by a player call this method on that client, and projectiles owned by the server such as enemy projectiles call this method on the server.
            </summary>
            <param name="target">The target.</param>
            <param name="damage">The modifiable damage.</param>
            <param name="knockback">The modifiable knockback.</param>
            <param name="crit">The modifiable crit.</param>
            <param name="hitDirection">The modifiable hit direction.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.OnHitNPC(Terraria.NPC,System.Int32,System.Single,System.Boolean)">
            <summary>
            Allows you to create special effects when this projectile hits an NPC (for example, inflicting debuffs). This method is only called for the owner of the projectile, meaning that in multi-player, projectiles owned by a player call this method on that client, and projectiles owned by the server such as enemy projectiles call this method on the server.
            </summary>
            <param name="target">The target.</param>
            <param name="damage">The damage.</param>
            <param name="knockback">The knockback.</param>
            <param name="crit">The critical hit.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanHitPvp(Terraria.Player)">
            <summary>
            Allows you to determine whether this projectile can hit the given opponent player. Return false to block this projectile from hitting the target. Returns true by default.
            </summary>
            <param name="target">The target</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ModifyHitPvp(Terraria.Player,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that this projectile does to an opponent player.
            </summary>
            <param name="target">The target.</param>
            <param name="damage">The modifiable damage.</param>
            <param name="crit">The modifiable crit.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.OnHitPvp(Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when this projectile hits an opponent player.
            </summary>
            <param name="target">The target.</param>
            <param name="damage">The damage.</param>
            <param name="crit">The critical hit.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanHitPlayer(Terraria.Player)">
            <summary>
            Allows you to determine whether this hostile projectile can hit the given player. Return false to block this projectile from hitting the target. Returns true by default.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ModifyHitPlayer(Terraria.Player,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the damage, etc., that this hostile projectile does to a player.
            </summary>
            <param name="target">The target.</param>
            <param name="damage">The modifiable damage.</param>
            <param name="crit">The modifiable crit.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.OnHitPlayer(Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to create special effects when this hostile projectile hits a player.
            </summary>
            <param name="target">The target.</param>
            <param name="damage">The damage.</param>
            <param name="crit">The critical hit.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.Colliding(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to use custom collision detection between this projectile and a player or NPC that this projectile can damage. Useful for things like diagonal lasers, projectiles that leave a trail behind them, etc.
            </summary>
            <param name="projHitbox">The hitbox of the projectile.</param>
            <param name="targetHitbox">The hitbox of the target.</param>
            <returns>Whether they collide or not.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ModifyFishingLine(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Color@)">
            <summary>
            If this projectile is a bobber, allows you to modify the origin of the fisihing line that's connecting to the fishing pole, as well as the fishing line's color.
            </summary>
            <param name="lineOriginOffset"> The offset of the fishing line's origin from the player's center. </param>
            <param name="lineColor"> The fishing line's color, before being overridden by string color accessories. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.GetAlpha(Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which this projectile is drawn. Return null to use the default color (normally light and buff color). Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PreDrawExtras">
            <summary>
            Allows you to draw things behind this projectile. Use the Main.EntitySpriteDraw method for drawing. Returns false to stop the game from drawing extras textures related to the projectile (for example, the chains for grappling hooks), useful if you're manually drawing the extras. Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PreDraw(Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to draw things behind this projectile, or to modify the way it is drawn. Use the Main.EntitySpriteDraw method for drawing. Return false to stop the vanilla projectile drawing code (useful if you're manually drawing the projectile). Returns true by default.
            </summary>
            <param name="lightColor"> The color of the light at the projectile's center. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PostDraw(Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things in front of this projectile. Use the Main.EntitySpriteDraw method for drawing. This method is called even if PreDraw returns false.
            </summary>
            <param name="lightColor"> The color of the light at the projectile's center, after being modified by vanilla and other mods. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanUseGrapple(Terraria.Player)">
            <summary>
            This code is called whenever the player uses a grappling hook that shoots this type of projectile. Use it to change what kind of hook is fired (for example, the Dual Hook does this), to kill old hook projectiles, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.SingleGrappleHook(Terraria.Player)">
            <summary>
            Whether or not a grappling hook can only have one hook per player in the world at a time. Return null to use the vanilla code. Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.UseGrapple(Terraria.Player,System.Int32@)">
            <summary>
            This code is called whenever the player uses a grappling hook that shoots this type of projectile. Use it to change what kind of hook is fired (for example, the Dual Hook does this), to kill old hook projectiles, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.GrappleRange">
            <summary>
            How far away this grappling hook can travel away from its player before it retracts.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.NumGrappleHooks(Terraria.Player,System.Int32@)">
            <summary>
            How many of this type of grappling hook the given player can latch onto blocks before the hooks start disappearing. Change the numHooks parameter to determine this; by default it will be 3.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.GrappleRetreatSpeed(Terraria.Player,System.Single@)">
            <summary>
            The speed at which the grapple retreats back to the player after not hitting anything. Defaults to 11, but vanilla hooks go up to 24.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.GrapplePullSpeed(Terraria.Player,System.Single@)">
            <summary>
            The speed at which the grapple pulls the player after hitting something. Defaults to 11, but the Bat Hook uses 16.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.GrappleTargetPoint(Terraria.Player,System.Single@,System.Single@)">
            <summary>
            The location that the grappling hook pulls the player to. Defaults to the center of the hook projectile.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.DrawBehind(System.Int32,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            When used in conjunction with "projectile.hide = true", allows you to specify that this projectile should be drawn behind certain elements. Add the index to one and only one of the lists. For example, the Nebula Arcanum projectile draws behind NPCs and tiles.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModProperties">
            <summary>
            This is a struct that stores the properties of a mod. Without setting it in your Mod constructor, all properties default to true.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.ModProperties.Autoload">
            <summary>
            Whether or not this mod will autoload content by default. Autoloading content means you do not need to manually add content through methods.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.ModProperties.AutoloadGores">
            <summary>
            Whether or not this mod will automatically add images in the Gores folder as gores to the game, along with any ModGore classes that share names with the images. This means you do not need to manually call Mod.AddGore.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.ModProperties.AutoloadSounds">
            <summary>
            Whether or not this mod will automatically add sounds in the Sounds folder to the game. Place sounds in Sounds/Item to autoload them as item sounds, Sounds/NPCHit to add them as npcHit sounds, Sounds/NPCKilled to add them as npcKilled sounds, and Sounds/Music to add them as music tracks. Sounds placed anywhere else in the Sounds folder will be added as custom sounds. Any ModSound classes that share the same name as the sound files will be bound to them. Setting this field to true means that you do not need to manually call AddSound.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.ModProperties.AutoloadBackgrounds">
            <summary>
            Whether or not this mod will automatically add images in the Backgrounds folder as background textures to the game. This means you do not need to manually call Mod.AddBackgroundTexture.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProperties.AutoLoadAll">
            <summary>
            Automatically return a ModProperties object which has all AutoLoad values set to true.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModRarity.RarityColor">
            <summary>
            Your ModRarity's color.
            Returns White by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModRarity.GetPrefixedRarity(System.Int32,System.Single)">
            <summary>
            Allows you to modify which rarities will come before and after this when a modifier is applied (since modifiers can affect rarity)
            </summary>
            <param name="offset">The amount by which the rarity would be offset in vanilla. -2 is the most it can go down, and +2 is the most it can go up by.</param>
            <param name="valueMult">The combined stat and prefix value scale. Can be used to implement super high or low value rarity adjustments outside normal vanilla ranges</param>
            <returns>The adjusted rarity type. Return <code>Type</code> for no change.</returns>
        </member>
        <member name="T:Terraria.ModLoader.ModSceneEffect">
            <summary>
            ModSceneEffect is an abstract class that your classes can derive from. It serves as a container for handling exclusive SceneEffect content such as backgrounds, music, and water styling. 
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModSceneEffect.Priority">
            <summary>
            The <see cref="T:Terraria.ModLoader.SceneEffectPriority"/> of this SceneEffect layer. Determines the relative postion compared to vanilla SceneEffect.
            Analogously, if SceneEffect were competing in a wrestling match, this would be the 'Weight Class' that this SceneEffect is competing in. 
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModSceneEffect.TileColorStyle">
            <summary>
            Used to apply secondary colour shading for the capture camera. For example, darkening the background with the GlowingMushroom style.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSceneEffect.RegisterSceneEffect(Terraria.ModLoader.ModSceneEffect)">
            <summary>
            Forcefully registers the provided ModSceneEffect to LoaderManager.
            ModBiome and direct implementations call this.
            Does NOT cache the return type.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSceneEffect.GetWeight(Terraria.Player)">
            <summary>
            Is invoked when two or more modded SceneEffect layers are active within the same <see cref="P:Terraria.ModLoader.ModSceneEffect.Priority"/> group to attempt to determine which one should take precedence, if it matters.
            It's uncommon that need to assign a weight - you'd have to specifically believe that you don't need higher SceneEffectPriority, but do need to be the active SceneEffect within the priority you designated
            Analogously, if SceneEffect were competing in a wrestling match, this would be how likely the SceneEffect should win within its weight class.
            Is intentionally bounded at a max of 100% (1) to reduce complexity. Defaults to 50% (0.5).
            Typical calculations may include: 1) how many tiles are present as a percentage of target amount; 2) how far away you are from the cause of the SceneEffect
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSceneEffect.GetCorrWeight(Terraria.Player)">
            <summary>
            Combines Priority and Weight to determine what SceneEffect should be active. 
            Priority is used to do primary sorting with respect to vanilla SceneEffect. 
            Weight will be used if multiple SceneEffect have the same SceneEffectPriority so as to attempt to distinguish them based on their needs.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModSide">
            <summary>A ModSide enum defines how mods are synced between clients and servers. You can set your mod's ModSide from its build.txt file.</summary>
        </member>
        <member name="F:Terraria.ModLoader.ModSide.Both">
            <summary>The default value for ModSide. This means that the mod has effects both client-side and server-side. When a client connects to a server, this mod will be disabled if the server does not have it. If a client without this mod connects to a server with this mod, the server will send this mod to the client and enable it. In general all mods that add game content should use this.</summary>
        </member>
        <member name="F:Terraria.ModLoader.ModSide.Client">
            <summary>This means that the mod only has effects client-side. This mod will not be disabled client-side if the server does not have it. This is useful for mods that only add controls (for example, keybinds), change textures/musics, etc.</summary>
        </member>
        <member name="F:Terraria.ModLoader.ModSide.Server">
            <summary>This means that the mod only has effects server-side. The server will not send this mod to every client that connects.</summary>
        </member>
        <member name="F:Terraria.ModLoader.ModSide.NoSync">
            <summary>This means that the mod could have effects client-side and could have effects server-side. The client will not download this mod if it connects to a server with this mod, and the client will not disable this mod if it connects to a server without this mod. If a client connects to a server and both have this mod, then IDs will still be synchronized. This is useful if you want optional extra features when both the client and server have this mod.</summary>
        </member>
        <member name="T:Terraria.ModLoader.ModSound">
            <summary>
            This class allows you to customize how a sound you add is played. To use this, pass an instance to Mod.AddSound, or if you are autoloading sounds, give an overriding class the same name as the file with the sound you are adding.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModSound.Sound">
            <summary>
            The SoundEffect instance of the sound that this ModSound controls. This is here so you can call CreateInstance on it.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSound.PlaySound(Microsoft.Xna.Framework.Audio.SoundEffectInstance@,System.Single,System.Single,Terraria.ModLoader.SoundType)">
            <summary>
            Override this hook to customize how this sound is played. If this sound is already currently playing, you have the option to call soundInstance.Stop(). You must eventually assign the result of sound.CreateInstance() to soundInstace. Afterwards, you can modify soundInstance.Volume, soundInstance.Pan, and soundInstance.Pitch to your liking. The default volume and pan have been passed as parameters. Volume measures loudness, pan measures how far to the left or right the sound is, and pitch measures the octave. Finally, call Main.PlaySoundInstance(soundInstance).
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModSystem">
            <summary>
            ModSystem is an abstract class that your classes can derive from. It contains general-use hooks, and, unlike Mod, can have unlimited amounts of types deriving from it. 
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.OnModLoad">
            <summary>
            This hook is called right after Mod.Load(), which is guaranteed to be called after all content has been autoloaded.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostSetupContent">
            <summary>
            Allows you to load things in your system after the mod's content has been setup (arrays have been resized to fit the content, etc).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.OnWorldLoad">
            <summary>
            Called whenever a world is loaded. This can be used to initialize data structures, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.OnWorldUnload">
            <summary>
            Called whenever a world is unloaded. Use this to deinitialize world-related data structures, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyScreenPosition">
            <summary>
            Use this hook to modify Main.screenPosition after weapon zoom and camera lerp have taken place.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyTransformMatrix(Terraria.Graphics.SpriteViewMatrix@)">
            <summary>
            Allows you to set the transformation of the screen that is drawn. (Translations, rotations, scales, etc.)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.UpdateUI(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Ran every update and suitable for calling Update for UserInterface classes
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateEntities">
            <summary>
            Use this if you want to do something before anything in the World gets updated.
            Called after UI updates, but before anything in the World (Players, NPCs, Projectiles, Tiles) gets updated.
            <para />
            When <see cref="F:Terraria.Main.autoPause" /> is true or <see cref="F:Terraria.Main.FrameSkipMode" /> is 0 or 2, the game may do a partial update. This means that it only updates menus and some animations, but not the World or Entities. This hook - and every hook after it - only gets called on frames with a full update.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdatePlayers">
            <summary>
            Called before Players get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdatePlayers">
            <summary>
            Called after Players get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateNPCs">
            <summary>
            Called before NPCs get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateNPCs">
            <summary>
            Called after NPCs get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateGores">
            <summary>
            Called before Gores get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateGores">
            <summary>
            Called after Gores get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateProjectiles">
            <summary>
            Called before Projectiles get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateProjectiles">
            <summary>
            Called after Projectiles get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateItems">
            <summary>
            Called before Items get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateItems">
            <summary>
            Called after Items get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateDusts">
            <summary>
            Called before Dusts get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateDusts">
            <summary>
            Called after Dusts get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateTime">
            <summary>
            Called before Time gets updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateTime">
            <summary>
            Called after Time gets updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateWorld">
            <summary>
            Use this method to have things happen in the world. In vanilla Terraria, a good example of code suitable for this hook is how Falling Stars fall to the ground during the night.
            <para/> This hook is not called for multiplayer clients.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateWorld">
            <summary>
            Use this method to have things happen in the world. In vanilla Terraria, a good example of code suitable for this hook is how Falling Stars fall to the ground during the night.
            <para/> This hook is not called for multiplayer clients.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateInvasions">
            <summary>
            Called before Invasions get updated.
            <para/> This hook is not called for multiplayer clients.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateInvasions">
            <summary>
            Called after Invasions get updated.
            <para/> This hook is not called for multiplayer clients.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateEverything">
            <summary>
            Called after the Network got updated, this is the last hook that happens in an update.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyInterfaceLayers(System.Collections.Generic.List{Terraria.UI.GameInterfaceLayer})">
            <summary>
            Allows you to modify the elements of the in-game interface that get drawn. GameInterfaceLayer can be found in the Terraria.UI namespace. Check https://github.com/tModLoader/tModLoader/wiki/Vanilla-Interface-layers-values for vanilla interface layer names
            </summary>
            <param name="layers">The layers.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostDrawInterface(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Called after interface is drawn but right before mouse and mouse hover text is drawn. Allows for drawing interface.
            
            Note: This hook should no longer be used. It is better to use the ModifyInterfaceLayers hook.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostDrawFullscreenMap(System.String@)">
            <summary>
            Called while the fullscreen map is active. Allows custom drawing to the map.
            </summary>
            <param name="mouseText">The mouse text.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateInput">
            <summary>
            Called after the input keys are polled. Allows for modifying things like scroll wheel if your custom drawing should capture that.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreSaveAndQuit">
            <summary>
            Called in SP or Client when the Save and Quit button is pressed. One use for this hook is clearing out custom UI slots to return items to the player.  
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostDrawTiles">
            <summary>
            Called after drawing Tiles. Can be used for drawing a tile overlay akin to wires. Note that spritebatch should be begun and ended within this method.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyTimeRate(System.Double@,System.Double@,System.Double@)">
            <summary>
            Called after all other time calculations. Can be used to modify the speed at which time should progress per tick in seconds, along with the rate at which the tiles in the world and the events in the world should update with it.
            All fields are measured in in-game minutes per real-life second (min/sec).
            You may want to consider <see cref="F:Terraria.Main.fastForwardTime"/> and <see cref="!:CreativePowerManager.Instance.GetPower&lt;CreativePowers.FreezeTime&gt;().Enabled"/> here.
            </summary>
            <param name="timeRate">The speed at which time flows in min/sec.</param>
            <param name="tileUpdateRate">The speed at which tiles in the world update in min/sec.</param>
            <param name="eventUpdateRate">The speed at which various events in the world (weather changes, fallen star/fairy spawns, etc.) update in min/sec.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.SaveWorldData">
            <summary>
            Allows you to save custom data for this system in the current world. Useful for things like saving world specific flags. For example, if your mod adds a boss and you want certain NPC to only spawn once it has been defeated, this is where you would store the information that that boss has been defeated in this world. Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.LoadWorldData(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load custom data you have saved for this system in the currently loading world.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.NetSend(System.IO.BinaryWriter)">
            <summary>
            Allows you to send custom data between clients and server. This is useful for syncing information such as bosses that have been defeated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.NetReceive(System.IO.BinaryReader)">
            <summary>
            Allows you to do things with custom data that is received between clients and server.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.HijackGetData(System.Byte@,System.IO.BinaryReader@,System.Int32)">
            <summary>
            Allows you to modify net message / packet information that is received before the game can act on it.
            </summary>
            <param name="messageType">Type of the message.</param>
            <param name="reader">The reader.</param>
            <param name="playerNumber">The player number the message is from.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.HijackSendData(System.Int32,System.Int32,System.Int32,System.Int32,Terraria.Localization.NetworkText,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Hijacks the send data method. Only use if you absolutely know what you are doing. If any hooks return true, the message is not sent.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreWorldGen">
            <summary>
            Allows a mod to run code before a world is generated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyWorldGenTasks(System.Collections.Generic.List{Terraria.WorldBuilding.GenPass},System.Single@)">
            <summary>
            A more advanced option to PostWorldGen, this method allows you modify the list of Generation Passes before a new world begins to be generated. <para/>
            For example, removing the "Planting Trees" pass will cause a world to generate without trees. Placing a new Generation Pass before the "Dungeon" pass will prevent the the mod's pass from cutting into the dungeon.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostWorldGen">
            <summary>
            Use this method to place tiles in the world after world generation is complete.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ResetNearbyTileEffects">
            <summary>
            Use this to reset any fields you set in any of your ModTile.NearbyEffects hooks back to their default values.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyHardmodeTasks(System.Collections.Generic.List{Terraria.WorldBuilding.GenPass})">
            <summary>
            Similar to ModifyWorldGenTasks, but occurs in-game when Hardmode starts. Can be used to modify which tasks should be done and/or add custom tasks. By default the list will only contain 4 items, the vanilla hardmode tasks called "Hardmode Good", "Hardmode Evil", "Hardmode Walls", and "Hardmode Announcment"
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifySunLightColor(Microsoft.Xna.Framework.Color@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify color of light the sun emits.
            </summary>
            <param name="tileColor">Tile lighting color</param>
            <param name="backgroundColor">Background lighting color</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyLightingBrightness(System.Single@)">
            <summary>
            Allows you to modify overall brightness of lights. Can be used to create effects similiar to what night vision and darkness (de)buffs give you. Values too high or too low might result in glitches. For night vision effect use scale 1.03
            </summary>
            <param name="scale">Brightness scale</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.TileCountsAvailable(System.ReadOnlySpan{System.Int32})">
            <summary>
            Allows you to store information about how many of each tile is nearby the player. This is useful for counting how many tiles of a certain custom biome there are.
            <br/> The <paramref name="tileCounts"/> parameter is a read-only span (treat this as an array) that stores the tile count indexed by tile type.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModTexturedType">
            <summary>
            The base type for most modded things with textures.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTexturedType.Texture">
            <summary>
            The file name of this type's texture file in the mod loader's file space.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModTile">
            <summary>
            This class represents a type of tile that can be added by a mod. Only one instance of this class will ever exist for each type of tile that is added. Any hooks that are called will be called by the instance corresponding to the tile type. This is to prevent the game from using a massive amount of memory storing tile instances.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.AnimationFrameHeight">
            <summary> The height of a group of animation frames for this tile. Defaults to 0, which disables animations. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.MineResist">
            <summary> A multiplier describing how much this block resists harvesting. Higher values will make it take longer to harvest. Defaults to 1f. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.MinPick">
            <summary> The minimum pickaxe power required for pickaxes to mine this block. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.AdjTiles">
            <summary> An array of the IDs of tiles that this tile can be considered as when looking for crafting stations. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.CloseDoorID">
            <summary> The ID of the tile that this door transforms into when it is closed. Defaults to -1, which means this tile isn't a door. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.OpenDoorID">
            <summary> The ID of the tile that this door transforms into when it is opened. Defaults to -1, which means this tile isn't a door. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.ChestDrop">
            <summary> The ID of the item that drops when this chest is destroyed. Defaults to 0. Honestly, this is only really used when the chest limit is reached on a server. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.DresserDrop">
            <summary> The ID of the item that drops when this dresser is destroyed. Defaults to 0. Honestly, this is only really used when the chest limit is reached on a server. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.ContainerName">
            <summary> The translations for the name that is displayed when this tile is opened as a chest or dresser. This won't be used if you don't add your tile to <see cref="F:Terraria.ID.TileID.Sets.BasicChest"/> or <see cref="F:Terraria.ID.TileID.Sets.BasicDresser"/>. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.HighlightTexture">
            <summary> The highlight texture used when this tile is selected by smart interact. Defaults to adding "_Highlight" onto the main texture. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AddToArray(System.Int32[]@)">
            <summary>
            A convenient method for adding this tile's Type to the given array. This can be used with the arrays in TileID.Sets.RoomNeeds.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.Localization.LocalizedText)">
            <summary>
            Adds an entry to the minimap for this tile with the given color and display name. This should be called in SetDefaults.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.ModLoader.ModTranslation)">
            <summary>
            Adds an entry to the minimap for this tile with the given color and display name. This should be called in SetDefaults.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.Localization.LocalizedText,System.Func{System.String,System.Int32,System.Int32,System.String})">
            <summary>
            Adds an entry to the minimap for this tile with the given color, default display name, and display name function. The parameters for the function are the default display name, x-coordinate, and y-coordinate. This should be called in SetDefaults.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.ModLoader.ModTranslation,System.Func{System.String,System.Int32,System.Int32,System.String})">
            <summary>
            Adds an entry to the minimap for this tile with the given color, default display name, and display name function. The parameters for the function are the default display name, x-coordinate, and y-coordinate. This should be called in SetDefaults.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.SetModTree(Terraria.ModLoader.ModTree)">
            <summary>
            Allows this tile to grow the given modded tree.
            </summary>
            <param name="tree">The ModTree.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.SetModPalmTree(Terraria.ModLoader.ModPalmTree)">
            <summary>
            Allows this tile to grow the given modded palm tree.
            </summary>
            <param name="palmTree">The ModPalmTree</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.SetModCactus(Terraria.ModLoader.ModCactus)">
            <summary>
            Allows this tile to grow the given modded cactus.
            </summary>
            <param name="cactus">The ModCactus</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.PostSetDefaults">
            <summary>
            Allows you to override some default properties of this tile, such as Main.tileNoSunLight and Main.tileObsidianKill.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.HasSmartInteract">
            <summary>
            Whether or not the smart interact function can select this tile. Useful for things like chests. Defaults to false.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.DropCritterChance(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify the chance the tile at the given coordinates has of spawning a certain critter when the tile is killed.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.Drop(System.Int32,System.Int32)">
            <summary>
            Allows you to customize which items the tile at the given coordinates drops. Remember that the x, y (i, j) coordinates are in tile coordinates, you will need to multiply them by 16 if you want to drop an item using them. Return false to stop the game from dropping the tile's default item. Returns true by default. Please note that this hook currently only works for 1x1 tiles.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.CanKillTile(System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Allows you to determine whether or not the tile at the given coordinates can be hit by anything. Returns true by default. blockDamaged currently has no use.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.KillTile(System.Int32,System.Int32,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Allows you to determine what happens when the tile at the given coordinates is killed or hit with a pickaxe. Fail determines whether the tile is mined, effectOnly makes it so that only dust is created, and noItem stops items from dropping.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.KillMultiTile(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This hook is called exactly once whenever a block encompassing multiple tiles is destroyed. You can use it to make your multi-tile block drop a single item, for example.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.NearbyEffects(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Allows you to make things happen when this tile is within a certain range of the player (around the same range water fountains and music boxes work). The closer parameter is whether or not the tile is within the range at which aesthetics like monoliths and music boxes and clocks work. It is false for campfires and heart lanterns.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.GetTorchLuck(Terraria.Player)">
            <summary>
            Only called for torches, when there is one nearby. Use this to contribute to vanilla torch luck calculations.
            Typical return values are 1f for a torch in its biome, 0.5f for a weak positive torch, -1f for a torch in an opposing biome, and -0.5f for a weak negative torch.
            </summary>
            <param name="player">Main.LocalPlayer</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.Dangersense(System.Int32,System.Int32,Terraria.Player)">
            <summary>
            Allows you to determine whether this block glows red when the given player has the Dangersense buff.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.SetSpriteEffects(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteEffects@)">
            <summary>
            Allows you to determine whether or not the tile will draw itself flipped in the world.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.SetDrawPositions(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Allows you to customize the position in which this tile is drawn. Width refers to the width of one frame of the tile, offsetY refers to how many pixels below its actual position the tile should be drawn, and height refers to the height of one frame of the tile. By default the values will be set to the values you give this tile's TileObjectData. If this tile has no TileObjectData then they will default to 16, 0, and 16, respectively.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AnimateTile(System.Int32@,System.Int32@)">
             <summary>
             Allows you to animate your tile. Use frameCounter to keep track of how long the current frame has been active, and use frame to change the current frame. This is called once an update. Use AnimateIndividualTile to animate specific tile instances directly.
             </summary>
             <example><code>if (++frameCounter > 8)
            {
            	frameCounter = 0;
            	if (++frame > 5)
            	{
            		frame = 0;
            	}
            }</code>
            	or, to mimic another tile, simply:
            	<code>frame = Main.tileFrame[TileID.FireflyinaBottle];</code></example>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AnimateIndividualTile(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Animates an individual tile. i and j are the coordinates of the Tile in question. frameXOffset and frameYOffset should be used to specify an offset from the tiles frameX and frameY. "frameYOffset = modTile.animationFrameHeight * Main.tileFrame[type];" will already be set before this hook is called, taking into account the TileID-wide animation set via AnimateTile. 
            Use this hook for off-sync animations (lightning bug in a bottle), temporary animations (trap chests), or TileEntities to achieve unique animation behaviors without having to manually draw the tile via PreDraw. 
            </summary>
            <param name="type">The tile type.</param>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="frameXOffset">The offset to frameX.</param>
            <param name="frameYOffset">The offset to frameY.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.DrawEffects(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.DataStructures.TileDrawInfo@)">
            <summary>
            Allows you to make stuff happen whenever the tile at the given coordinates is drawn. For example, creating dust or changing the color the tile is drawn in.
            SpecialDraw will only be called if coordinates are added using Main.instance.TilesRenderer.AddSpecialLegacyPoint here.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="drawData">Various information about the tile that is being drawn, such as color, framing, glow textures, etc.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.SpecialDraw(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Special Draw. Only called if coordinates are added using Main.instance.TilesRenderer.AddSpecialLegacyPoint during DrawEffects. Useful for drawing things that would otherwise be impossible to draw due to draw order, such as items in item frames.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.TileFrame(System.Int32,System.Int32,System.Boolean@,System.Boolean@)">
            <summary>
            Called whenever this tile updates due to being placed or being next to a tile that is changed. Return false to stop the game from carrying out its default TileFrame operations. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.RightClick(System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when this tile is right-clicked by the player. Return true to indicate that a tile interaction has occurred, preventing other right click actions like minion targetting from happening. Returns false by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <returns>Return true to indicate that a tile interaction has occurred, preventing other right click actions like minion targetting from happening. Returns false by default.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.MouseOver(System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when the mouse hovers over this tile. Useful for showing item icons or text on the mouse.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.MouseOverFar(System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when the mouse hovers over this tile, even when the player is far away. Useful for showing what's written on signs, etc.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AutoSelect(System.Int32,System.Int32,Terraria.Item)">
            <summary>
            Allows you to determine whether the given item can become selected when the cursor is hovering over this tile and the auto selection keybind is pressed.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.HitWire(System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when a wire current passes through this tile.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.Slope(System.Int32,System.Int32)">
            <summary>
            Allows you to control how hammers slope this tile. Return true to allow it to slope normally. Returns true by default. Called on the local Client and Single Player.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.FloorVisuals(Terraria.Player)">
            <summary>
            Allows you to make something happen when a player stands on this type of tile. For example, you can make the player slide as if on ice.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.HasWalkDust">
            <summary>
            Whether or not this tile creates dust when the player walks on it. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.WalkDust(System.Int32@,System.Boolean@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify the dust created when the player walks on this tile. The makeDust parameter is whether or not to make dust; you can randomly set this to false to reduce the amount of dust produced.
            </summary>
            <param name="dustType"></param>
            <param name="makeDust"></param>
            <param name="color"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.ChangeWaterfallStyle(System.Int32@)">
            <summary>
            Allows you to change the style of waterfall that passes through or over this type of tile.
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.SaplingGrowthType(System.Int32@)">
            <summary>
            Allows this tile to support a sapling that can eventually grow into a tree. The type of the sapling should be returned here. Returns -1 by default. The style parameter will determine which sapling is chosen if multiple sapling types share the same ID; even if you only have a single sapling in an ID, you must still set this to 0.
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.IsLockedChest(System.Int32,System.Int32)">
            <summary>
            Return true if this Tile corresponds to a chest that is locked. Prevents Quick Stacking items into the chest.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.UnlockChest(System.Int32,System.Int32,System.Int16@,System.Int32@,System.Boolean@)">
            <summary>
            Allows customization of how a chest unlock is accomplished. By default, frameXAdjustment will be -36, shifting the frameX over to the left
            by 1 chest style. If your chests are in a different order, adjust frameXAdjustment accordingly. 
            This hook is called on the client, and if successful will be called on the server and other clients as the action is synced.
            Make sure that the logic is consistent and not dependent on local player data.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="frameXAdjustment">The adjustment made to each Tile.frameX, defaults to -36</param>
            <param name="dustType">The dust spawned, defaults to 11</param>
            <param name="manual">Set this to true to bypass the code playing the unlock sound, adjusting the tile frame, and spawning dust. Network syncing will still happen.</param>
            <returns>Return true if this tile truly is a locked chest and the chest can be unlocked</returns>
        </member>
        <member name="T:Terraria.ModLoader.ModTileEntity">
            <summary>
            Tile Entities are Entities tightly coupled with tiles, allowing the possibility of tiles to exhibit cool behavior. TileEntity.Update is called in SP and on Server, not on Clients.
            </summary>
            <seealso cref="T:Terraria.DataStructures.TileEntity" />
        </member>
        <member name="P:Terraria.ModLoader.ModTileEntity.Mod">
            <summary>
            The mod that added this ModTileEntity.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTileEntity.Name">
            <summary>
            The internal name of this ModTileEntity.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTileEntity.Type">
            <summary>
            The numeric type used to identify this kind of tile entity.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.CountInWorld">
            <summary>
            Returns the number of modded tile entities that exist in the world currently being played.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.NetPlaceEntityAttempt(System.Int32,System.Int32)">
            <summary>
            You should never use this. It is only included here for completion's sake.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.ConstructFromType(System.Int32)">
            <summary>
            Returns a new ModTileEntity with the same class, mod, name, and type as the ModTileEntity with the given type. It is very rare that you should have to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.ConstructFromBase(Terraria.ModLoader.ModTileEntity)">
            <summary>
            Returns a new ModTileEntity with the same class, mod, name, and type as the parameter. It is very rare that you should have to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.Place(System.Int32,System.Int32)">
            <summary>
            A helper method that places this kind of tile entity in the given coordinates for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.Kill(System.Int32,System.Int32)">
            <summary>
            A helper method that removes this kind of tile entity from the given coordinates for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.Find(System.Int32,System.Int32)">
            <summary>
            Returns the entity ID of this kind of tile entity at the given coordinates for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.WriteExtraData(System.IO.BinaryWriter,System.Boolean)">
            <summary>
            Should never be called on ModTileEntity. Replaced by NetSend and Save.
            Would make the base method internal if not for patch size
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.ReadExtraData(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Should never be called on ModTileEntity. Replaced by NetReceive and Load
            Would make the base method internal if not for patch size
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.ValidTile(System.Int32,System.Int32)">
            <summary>
            Whether or not this tile entity is allowed to survive at the given coordinates. You should check whether the tile is active, as well as the tile's type and frame.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.Hook_AfterPlacement(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method does not get called by tModLoader, and is only included for you convenience so you do not have to cast the result of Mod.GetTileEntity.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.OnNetPlace">
            <summary>
            Code that should be run when this tile entity is placed by means of server-syncing. Called on Server only.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.PreGlobalUpdate">
            <summary>
            Code that should be run before all tile entities in the world update.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.PostGlobalUpdate">
            <summary>
            Code that should be run after all tile entities in the world update.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.OnKill">
            <summary>
            This method only gets called in the Kill method. If you plan to use that, you can put code here to make things happen when it is called.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModType">
            <summary>
            The base type for most modded things.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModType.Mod">
            <summary>
             The mod this belongs to.
             </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModType.Name">
            <summary>
            The internal name of this.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModType.FullName">
            <summary>
            The internal name of this, including the mod it is from.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.Load">
            <summary>
            Allows you to perform one-time loading tasks. Beware that mod content has not finished loading here, things like ModContent lookup tables or ID Sets are not fully populated.
            <para>Use <see cref="M:Terraria.ModLoader.ModType.SetStaticDefaults"/> when you need to access content.</para>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.Register">
            <summary>
            If you make a new ModType, seal this override.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.SetupContent">
            <summary>
            If you make a new ModType, seal this override, and call <see cref="M:Terraria.ModLoader.ModType.SetStaticDefaults"/> in it.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.SetStaticDefaults">
            <summary>
            Allows you to modify the properties after initial loading has completed.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.Unload">
            <summary>
            Allows you to safely unload things you added in <see cref="M:Terraria.ModLoader.ModType.Load"/>.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModWall">
            <summary>
            This class represents a type of wall that can be added by a mod. Only one instance of this class will ever exist for each type of wall that is added. Any hooks that are called will be called by the instance corresponding to the wall type.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.Localization.LocalizedText)">
            <summary>
            Adds an entry to the minimap for this wall with the given color and display name. This should be called in SetDefaults.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.ModLoader.ModTranslation)">
            <summary>
            Adds an entry to the minimap for this wall with the given color and display name. This should be called in SetDefaults.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.Localization.LocalizedText,System.Func{System.String,System.Int32,System.Int32,System.String})">
            <summary>
            Adds an entry to the minimap for this wall with the given color, default display name, and display name function. The parameters for the function are the default display name, x-coordinate, and y-coordinate. This should be called in SetDefaults.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.ModLoader.ModTranslation,System.Func{System.String,System.Int32,System.Int32,System.String})">
            <summary>
            Adds an entry to the minimap for this wall with the given color, default display name, and display name function. The parameters for the function are the default display name, x-coordinate, and y-coordinate. This should be called in SetDefaults.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.Drop(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Allows you to customize which items the wall at the given coordinates drops. Return false to stop the game from dropping the tile's default item (the type parameter). Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.KillWall(System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Allows you to determine what happens when the tile at the given coordinates is killed or hit with a hammer. Fail determines whether the tile is mined (whether it is killed).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.AnimateWall(System.Byte@,System.Byte@)">
            <summary>
            Allows you to animate your wall. Use frameCounter to keep track of how long the current frame has been active, and use frame to change the current frame.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModWaterStyle">
            <summary>
            Represents a style of water that gets drawn, based on factors such as the background. This is used to determine the color of the water, as well as other things as determined by the hooks below.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModWaterStyle.Slot">
            <summary>
            The ID of the water style.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.ChooseWaterfallStyle">
            <summary>
            The ID of the waterfall style the game should use when this water style is in use.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.GetSplashDust">
            <summary>
            The ID of the dust that is created when anything splashes in water.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.GetDropletGore">
            <summary>
            The ID of the gore that represents droplets of water falling down from a block.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.LightColorMultiplier(System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to modify the light levels of the tiles behind the water. The light color components will be multiplied by the parameters.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.BiomeHairColor">
            <summary>
            Allows you to change the hair color resulting from the biome hair dye when this water style is in use.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModWaterfallStyle">
            <summary>
            Represents a style of waterfalls that gets drawn. This is mostly used to determine the color of the waterfall.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModWaterfallStyle.Slot">
            <summary>
            The ID of this waterfall style.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterfallStyle.AddLight(System.Int32,System.Int32)">
            <summary>
            Allows you to create light at a tile occupied by a waterfall of this style.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterfallStyle.ColorMultiplier(System.Single@,System.Single@,System.Single@,System.Single)">
            <summary>
            Allows you to determine the color multiplier acting on waterfalls of this style. Useful for waterfalls whose colors change over time.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.MountLoader">
            <summary>
            This serves as the central place from which mounts are stored and mount-related functions are carried out.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.GetMount(System.Int32)">
            <summary>
            Gets the ModMount instance corresponding to the given type. Returns null if no ModMount has the given type.
            </summary>
            <param name="type">The type of the mount.</param>
            <returns>Null if not found, otherwise the ModMount associated with the mount.</returns>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.UseAbility(Terraria.Player,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Allows you to make things happen while the mouse is pressed while the mount is active. Called each tick the mouse is pressed.
            </summary>
            <param name="player"></param>
            <param name="mousePosition"></param>
            <param name="toggleOn">Does nothing yet</param>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.AimAbility(Terraria.Mount,Terraria.Player,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Allows you to make things happen when the mount ability is aiming (while charging).
            </summary>
            <param name="mount"></param>
            <param name="player"></param>
            <param name="mousePosition"></param>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.SetMount(Terraria.Mount,Terraria.Player,System.Boolean@)">
            <summary>
            Allows you to make things happen when this mount is spawned in. Useful for player-specific initialization, utilizing player.mount._mountSpecificData or a ModPlayer class since ModMount is shared between all players.
            Custom dust spawning logic is also possible via the skipDust parameter. 
            </summary>
            <param name="mount"></param>
            <param name="player"></param>
            <param name="skipDust">Set to true to skip the vanilla dust spawning logic</param>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.Dismount(Terraria.Mount,Terraria.Player,System.Boolean@)">
            <summary>
            Allows you to make things happen when this mount is de-spawned. Useful for player-specific cleanup, see SetMount.
            Custom dust spawning logic is also possible via the skipDust parameter.
            </summary>
            <param name="mount"></param>
            <param name="player"></param>
            <param name="skipDust">Set to true to skip the vanilla dust spawning logic</param>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.Draw(Terraria.Mount,System.Collections.Generic.List{Terraria.DataStructures.DrawData},System.Int32,Terraria.Player,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Rectangle@,Microsoft.Xna.Framework.Color@,Microsoft.Xna.Framework.Color@,System.Single@,Microsoft.Xna.Framework.Graphics.SpriteEffects@,Microsoft.Xna.Framework.Vector2@,System.Single@,System.Single)">
            <summary>
            See <see cref="M:Terraria.ModLoader.ModMount.Draw(System.Collections.Generic.List{Terraria.DataStructures.DrawData},System.Int32,Terraria.Player,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Rectangle@,Microsoft.Xna.Framework.Color@,Microsoft.Xna.Framework.Color@,System.Single@,Microsoft.Xna.Framework.Graphics.SpriteEffects@,Microsoft.Xna.Framework.Vector2@,System.Single@,System.Single)"/>
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.MountTextureType">
            <summary>
            This is an enum of all possible types of extra mount textures for custom mounts. Use these as keys in the extraTextures dictionary passed to Mod.AddMount to give your mount front and back textures.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.NPCHeadLoader">
            <summary>
            This class serves as a central place from which NPC head slots are stored and NPC head textures are assigned. This can be used to obtain the corresponding slots to head textures.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCHeadLoader.VanillaHeadCount">
            <summary>
            The number of vanilla town NPC head textures that exist.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCHeadLoader.VanillaBossHeadCount">
            <summary>
            The number of vanilla boss head textures that exist.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.NPCHeadLoader.GetHeadSlot(System.String)">
            <summary>
            Gets the index of the head texture corresponding to the given texture path.
            </summary>
            <param name="texture">Relative texture path</param>
            <returns>The index of the texture in the heads array, -1 if not found.</returns>
        </member>
        <member name="M:Terraria.ModLoader.NPCHeadLoader.GetBossHeadSlot(System.String)">
            <summary>
            Gets the index of the boss head texture corresponding to the given texture path.
            </summary>
            <param name="texture"></param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.NPCLoader">
            <summary>
            This serves as the central class from which NPC-related functions are carried out. It also stores a list of mod NPCs by ID.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCLoader.blockLoot">
            <summary>
            Allows you to stop an NPC from dropping loot by adding item IDs to this list. This list will be cleared whenever NPCLoot ends. Useful for either removing an item or change the drop rate of an item in the NPC's loot table. To change the drop rate of an item, use the PreNPCLoot hook, spawn the item yourself, then add the item's ID to this list.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.NPCLoader.GetNPC(System.Int32)">
            <summary>
            Gets the ModNPC instance corresponding to the specified type.
            </summary>
            <param name="type">The type of the npc</param>
            <returns>The ModNPC instance in the npcs array, null if not found.</returns>
        </member>
        <member name="T:Terraria.ModLoader.NPCLoot">
            <summary> This readonly struct is a simple shortcut to <see cref="T:Terraria.GameContent.ItemDropRules.ItemDropDatabase"/>'s methods. </summary>
        </member>
        <member name="T:Terraria.ModLoader.NPCSpawnInfo">
            <summary>
            A struct that stores information regarding where an NPC is naturally spawning and the player it is spawning around. This serves to reduce the parameter count for ModNPC.CanSpawn and GlobalNPC.EditSpawnPool.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.spawnTileX">
            <summary>
            The x-coordinate of the tile the NPC will spawn above.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.spawnTileY">
            <summary>
            The y-coordinate of the tile the NPC will spawn above.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.player">
            <summary>
            The player that this NPC is spawning around.
            For convenience, here are the player zones, which are also useful for determining NPC spawn:
            <list type="bullet">
            <item><description>ZoneDungeon</description></item>
            <item><description>ZoneCorrupt</description></item>
            <item><description>ZoneHoly</description></item>
            <item><description>ZoneMeteor</description></item>
            <item><description>ZoneJungle</description></item>
            <item><description>ZoneSnow</description></item>
            <item><description>ZoneCrimson</description></item>
            <item><description>ZoneWaterCandle</description></item>
            <item><description>ZonePeaceCandle</description></item>
            <item><description>ZoneTowerSolar</description></item>
            <item><description>ZoneTowerVortex</description></item>
            <item><description>ZoneTowerNebula</description></item>
            <item><description>ZoneTowerStardust</description></item>
            <item><description>ZoneDesert</description></item>
            <item><description>ZoneGlowshroom</description></item>
            <item><description>ZoneUndergroundDesert</description></item>
            <item><description>ZoneSkyHeight</description></item>
            <item><description>ZoneOverworldHeight</description></item>
            <item><description>ZoneDirtLayerHeight</description></item>
            <item><description>ZoneRockLayerHeight</description></item>
            <item><description>ZoneUnderworldHeight</description></item>
            <item><description>ZoneBeach</description></item>
            <item><description>ZoneRain</description></item>
            <item><description>ZoneSandstorm</description></item>
            </list>
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.playerFloorX">
            <summary>
            The x-coordinate of the tile the player is standing on.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.playerFloorY">
            <summary>
            The y-coordinate of the tile the player is standing on.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.sky">
            <summary>
            Whether or not the player is in the sky biome, where harpies and wyverns spawn.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.lihzahrd">
            <summary>
            Whether or not the player is inside the jungle temple, where Lihzahrds spawn.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.playerSafe">
            <summary>
            Whether or not the player is in front of a player-placed wall or in a large town. If this is true, enemies that can attack through walls should not spawn (unless an invasion is in progress).
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.invasion">
            <summary>
            Whether or not there is an invasion going on and the player is near it.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.water">
            <summary>
            Whether or not the tile the NPC will spawn in contains water.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.granite">
            <summary>
            Whether or not the NPC will spawn on a granite block or the player is near a granite biome.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.marble">
            <summary>
            Whether or not the NPC will spawn on a marble block or the player is near a marble biome.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.spiderCave">
            <summary>
            Whether or not the player is in a spider cave or the NPC will spawn near one.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.playerInTown">
            <summary>
            Whether or not the player is in a town. This is used for spawning critters instead of monsters.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.desertCave">
            <summary>
            Whether or not the player is in front of a desert wall or the NPC will spawn near one.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.planteraDefeated">
            <summary>
            Whether Plantera is defeated and the world is in hardmode. This isn't needed (it's easy to find by yourself), but it's a local flag in NPC.SpawnNPC, so it is included for completeness.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.safeRangeX">
            <summary>
            Whether or not the NPC is horizontally within the range near the player in which NPCs cannot spawn. If this is true, it also means that it is vertically outside of the range near the player in which NPCs cannot spawn.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.PlayerDrawLayer">
            <summary>
            This class represents a DrawLayer for the player, and uses PlayerDrawInfo as its InfoType. Drawing should be done by adding Terraria.DataStructures.DrawData objects to Main.playerDrawData.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PlayerDrawLayer.Transformation.PreDraw(Terraria.DataStructures.PlayerDrawSet@)">
            <summary>
            Add a transformation to the drawInfo
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PlayerDrawLayer.Transformation.PostDraw(Terraria.DataStructures.PlayerDrawSet@)">
            <summary>
            Reverse a transformation from the drawInfo
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.PlayerDrawLayer.IsHeadLayer">
            <summary> Returns whether or not this layer should be rendered for the minimap icon. </summary>
        </member>
        <member name="M:Terraria.ModLoader.PlayerDrawLayer.GetDefaultVisiblity(Terraria.DataStructures.PlayerDrawSet)">
            <summary> Returns the layer's default visibility. This is usually called as a layer is queued for drawing, but modders can call it too for information. </summary>
            <returns> Whether or not this layer will be visible by default. Modders can hide layers later, if needed.</returns>
        </member>
        <member name="M:Terraria.ModLoader.PlayerDrawLayer.Draw(Terraria.DataStructures.PlayerDrawSet@)">
            <summary> Draws this layer. </summary>
        </member>
        <member name="M:Terraria.ModLoader.PlayerDrawLayerLoader.GetDrawLayers(Terraria.DataStructures.PlayerDrawSet)">
            <summary>
            Note, not threadsafe
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.PlayerLoader">
            <summary>
            This is where all ModPlayer hooks are gathered and called.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PlayerLoader.ModifyWeaponDamage(Terraria.Player,Terraria.Item,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Calls ModItem.HookModifyWeaponDamage, then all GlobalItem.HookModifyWeaponDamage hooks.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.PosData`1.OrderedSparseLookupBuilder">
            <summary>
            Efficient builder for <see cref="T:Terraria.ModLoader.PosData`1"/>[] lookups covering the whole world.
            Must add elements in ascending pos order.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData`1.OrderedSparseLookupBuilder.#ctor(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use <paramref name="compressEqualValues"/> to produce a smaller lookup which won't work with <see cref="M:Terraria.ModLoader.PosData.LookupExact``1(Terraria.ModLoader.PosData{``0}[],System.Int32,System.Int32,``0@)"/>
            When using <paramref name="compressEqualValues"/> without <paramref name="insertDefaultEntries"/>,
            unspecified positions will default to the value of the previous specified position
            </summary>
            <param name="capacity">Defaults to 1M entries to reduce reallocations. Final built collection will be smaller. </param>
            <param name="compressEqualValues">Reduces the size of the map, but gives unspecified positions a value.</param>
            <param name="insertDefaultEntries">Ensures unspecified positions are assigned a default value when used with <paramref name="compressEqualValues"/></param>
        </member>
        <member name="M:Terraria.ModLoader.PosData.CoordsToPos(System.Int32,System.Int32)">
            <summary>
            Gets a Position ID based on the x,y position. If using in an order sensitive case, see NextLocation.
            </summary>
            <param name="posX"></param>
            <param name="posY"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.PosData.FindIndex``1(Terraria.ModLoader.PosData{``0}[],System.Int32)">
            <summary>
            Searches for the value i for which <code>posMap[i].pos &lt; pos &lt; posMap[i + 1].pos</code>
            </summary>
            <returns>The index of the nearest entry with <see cref="F:Terraria.ModLoader.PosData`1.pos"/> &lt;= <paramref name="pos"/> or -1 if <paramref name="pos"/> &lt; <paramref name="posMap"/>[0].pos</returns>
        </member>
        <member name="M:Terraria.ModLoader.PosData.Find``1(Terraria.ModLoader.PosData{``0}[],System.Int32)">
            <summary>
            Raw lookup function. Always returns the raw entry in the position map. Use if default values returned are a concern, as negative position returned are ~'null'
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData.Lookup``1(Terraria.ModLoader.PosData{``0}[],System.Int32,System.Int32)">
            <summary>
            General purpose lookup function. Always returns a value (even if that value is `default`).
            See <see cref="M:Terraria.ModLoader.PosData`1.OrderedSparseLookupBuilder.#ctor(System.Int32,System.Boolean,System.Boolean)"/>for more info
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData.Lookup``1(Terraria.ModLoader.PosData{``0}[],System.Int32)">
            <summary>
            General purpose lookup function. Always returns a value (even if that value is `default`).
            See <see cref="M:Terraria.ModLoader.PosData`1.OrderedSparseLookupBuilder.#ctor(System.Int32,System.Boolean,System.Boolean)"/>for more info
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData.LookupExact``1(Terraria.ModLoader.PosData{``0}[],System.Int32,System.Int32,``0@)">
            <summary>
            For use with uncompressed sparse data lookups. Checks that the exact position exists in the lookup table.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData.LookupExact``1(Terraria.ModLoader.PosData{``0}[],System.Int32,``0@)">
            <summary>
            For use with uncompressed sparse data lookups. Checks that the exact position exists in the lookup table.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData.NearbySearchOrderedPosMap``1(Terraria.ModLoader.PosData{``0}[],Microsoft.Xna.Framework.Point,System.Int32,Terraria.ModLoader.PosData{``0}@)">
            <summary>
            Searches around the provided point to check for the nearest entry in the map for OrdereredSparse data
            Doesn't work with 'compressed' lookups from <see cref="T:Terraria.ModLoader.PosData`1.OrderedSparseLookupBuilder"/>
            </summary>
            <param name="posMap"></param>
            <param name="pt"></param>
            <param name="distance"> The distance between the provided Point and nearby entry </param>
            <returns> True if successfully found an entry nearby </returns>
        </member>
        <member name="M:Terraria.ModLoader.PrefixLoader.GetPrefix(System.Int32)">
            <summary>
            Returns the ModPrefix associated with specified type
            If not a ModPrefix, returns null.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PrefixLoader.GetPrefixesInCategory(Terraria.ModLoader.PrefixCategory)">
            <summary>
            Returns a list of all modded prefixes of a certain category.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PrefixLoader.Roll(Terraria.Item,System.Int32@,System.Int32,Terraria.ModLoader.PrefixCategory[])">
            <summary>
            Performs a mod prefix roll. If the vanillaWeight wins the roll, then prefix is unchanged.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ProjectileLoader">
            <summary>
            This serves as the central class from which projectile-related functions are carried out. It also stores a list of mod projectiles by ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ProjectileLoader.GetProjectile(System.Int32)">
            <summary>
            Gets the ModProjectile instance corresponding to the specified type.
            </summary>
            <param name="type">The type of the projectile</param>
            <returns>The ModProjectile instance in the projectiles array, null if not found.</returns>
        </member>
        <member name="T:Terraria.ModLoader.RecipeLoader">
            <summary>
            This is where all Recipe and GlobalRecipe hooks are gathered and called.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.RecipeLoader.setupRecipes">
            <summary>
            Set when tML sets up modded recipes. Used to detect misuse of CreateRecipe
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.RecipeLoader.RecipeAvailable(Terraria.Recipe)">
            <summary>
            Returns whether or not the conditions are met for this recipe to be available for the player to use.
            </summary>
            <param name="recipe">The recipe to check.</param>
            <returns>Whether or not the conditions are met for this recipe.</returns>
        </member>
        <member name="M:Terraria.ModLoader.RecipeLoader.OnCraft(Terraria.Item,Terraria.Recipe)">
            <summary>
            Allows you to make anything happen when a player uses this recipe.
            </summary>
            <param name="item">The item crafted.</param>
            <param name="recipe">The recipe used to craft the item.</param>
        </member>
        <member name="M:Terraria.ModLoader.RecipeLoader.ConsumeItem(Terraria.Recipe,System.Int32,System.Int32@)">
            <summary>
            Allows to edit the amount of item the player uses in a recipe.
            </summary>
            <param name="recipe">The recipe used for the craft.</param>
            <param name="type">Type of the ingredient.</param>
            <param name="amount">Modifiable amount of the item consumed.</param>
        </member>
        <member name="T:Terraria.ModLoader.SceneEffectLoader`1">
            <summary>
            This serves as the central class from which SceneEffect functions are supported and carried out.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.SceneEffectPriority">
            <summary>
            This enum dictates from low to high which SceneEffect selections take priority.
            Setting appropriate priority values is important so that your mod works well with other mods and vanilla selections.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.None">
            <summary>Represents no priority</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BiomeLow">
            <summary> Will override vanilla SceneEffect for Hallow, Ocean, Desert, Overworld, Night</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BiomeMedium">
            <summary> Will override vanilla SceneEffect for Dungeon, Meteor, Jungle, Snow</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BiomeHigh">
            <summary> Will override vanilla SceneEffect for Temple, Mushrooms, Corruption, Crimson, </summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.Environment">
            <summary> Will override vanilla SceneEffect for Sandstorm, Hell, Above surface during Eclipse, Space</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.Event">
            <summary> Will override vanilla SceneEffect for Pirate Invasion, Goblin Invasion, Old Ones Army</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BossLow">
            <summary>All other bosses and default modded boss priority</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BossMedium">
            <summary>Will override vanilla SceneEffect for Martian Madness, Celestial Towers, Plantera</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BossHigh">
            <summary>Will override SceneEffect of Moon Lord</summary>
        </member>
        <member name="T:Terraria.ModLoader.SoundLoader">
            <summary>
            This class is used to keep track of and support the existence of custom sounds that have been added to the game.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.SoundLoader.customSoundType">
            <summary>
            This value should be passed as the first parameter to Main.PlaySound whenever you want to play a custom sound that is not an item, npcHit, or npcKilled sound.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.SoundLoader.GetSoundSlot(Terraria.ModLoader.SoundType,System.String)">
            <summary>
            Returns the style (last parameter passed to Main.PlaySound) of the sound corresponding to the given SoundType and the given sound file path. Returns 0 if there is no corresponding style.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.SoundLoader.GetLegacySoundSlot(Terraria.ModLoader.SoundType,System.String)">
            <summary>
            Returns a LegacySoundStyle object which encapsulates both a sound type and a sound style (This is the new way to do sounds in 1.3.4) Returns null if there is no corresponding style.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.SoundType">
            <summary>
            This is an enum of the types of sound you can add to the game. This is used for determining whether a sound is a music or a sound effect. If it's a sound effect, it's also used for determining the "type" passed to Main.PlaySound (first parameter) that is required in order for a sound to play; 2 for item sounds, 3 for npcHit sounds, 4 for npcKilled sounds, and SoundLoader.customSoundType for anything else.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.SystemLoader">
            <summary>
            This is where all <see cref="T:Terraria.ModLoader.ModSystem"/> hooks are gathered and called.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.TileLoader">
            <summary>
            This serves as the central class from which tile-related functions are supported and carried out.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.TileLoader.GetTile(System.Int32)">
            <summary>
            Gets the ModTile instance with the given type. If no ModTile with the given type exists, returns null.
            </summary>
            <param name="type">The type of the ModTile</param>
            <returns>The ModTile instance in the tiles array, null if not found.</returns>
        </member>
        <member name="M:Terraria.ModLoader.TileLoader.SetAnimationFrame(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Sets the animation frame. Sets frameYOffset = modTile.animationFrameHeight * Main.tileFrame[type]; and then calls ModTile.AnimateIndividualTile
            </summary>
            <param name="type">The tile type.</param>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="frameXOffset">The offset to frameX.</param>
            <param name="frameYOffset">The offset to frameY.</param>
        </member>
        <member name="M:Terraria.ModLoader.TileLoader.SpecialDraw(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Special Draw calls ModTile and GlobalTile SpecialDraw methods. Special Draw is called at the end of the DrawSpecialTilesLegacy loop, allowing for basically another layer above tiles. Use DrawEffects hook to queue for SpecialDraw. 
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.TooltipLine">
            <summary>
            This class serves as a way to store information about a line of tooltip for an item. You will create and manipulate objects of this class if you use the ModifyTooltips hook.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.mod">
            <summary>
            The name of the mod adding this tooltip line. This will be "Terraria" for all vanilla tooltip lines.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.Name">
            <summary>
            The name of the tooltip, used to help you identify its function.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.text">
            <summary>
            The actual text that this tooltip displays.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.isModifier">
            <summary>
            Whether or not this tooltip gives prefix information. This will make it so that the tooltip is colored either green or red.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.isModifierBad">
            <summary>
            If isModifier is true, this determines whether the tooltip is colored green or red.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.overrideColor">
            <summary>
            This completely overrides the color the tooltip is drawn in. If it is set to null (the default value) then the tooltip's color will not be overridden.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.TooltipLine.#ctor(Terraria.ModLoader.Mod,System.String,System.String)">
            <summary>
            Creates a tooltip line object with the given mod, identifier name, and text.<para />
            These are the names of the vanilla tooltip lines, in the order in which they appear, along with their functions. All of them will have a mod name of "Terraria". Remember that most of these tooltip lines will not exist depending on the item.<para />
            <list type="bullet">
            <item><description>"ItemName" - The name of the item.</description></item>
            <item><description>"Favorite" - Tells if the item is favorited.</description></item>
            <item><description>"FavoriteDesc" - Tells what it means when an item is favorited.</description></item>
            <item><description>"Social" - Tells if the item is in a social slot.</description></item>
            <item><description>"SocialDesc" - Tells what it means for an item to be in a social slot.</description></item>
            <item><description>"Damage" - The damage value and type of the weapon.</description></item>
            <item><description>"CritChance" - The critical strike chance of the weapon.</description></item>
            <item><description>"Speed" - The use speed of the weapon.</description></item>
            <item><description>"Knockback" - The knockback of the weapon.</description></item>
            <item><description>"FishingPower" - Tells the fishing power of the fishing pole.</description></item>
            <item><description>"NeedsBait" - Tells that a fishing pole requires bait.</description></item>
            <item><description>"BaitPower" - The bait power of the bait.</description></item>
            <item><description>"Equipable" - Tells that an item is equipable.</description></item>
            <item><description>"WandConsumes" - Tells what item a tile wand consumes.</description></item>
            <item><description>"Quest" - Tells that this is a quest item.</description></item>
            <item><description>"Vanity" - Tells that this is a vanity item.</description></item>
            <item><description>"Defense" - Tells how much defense the item gives when equipped.</description></item>
            <item><description>"PickPower" - The item's pickaxe power.</description></item>
            <item><description>"AxePower" - The item's axe power.</description></item>
            <item><description>"HammerPower" - The item's hammer power.</description></item>
            <item><description>"TileBoost" - How much farther the item can reach than normal items.</description></item>
            <item><description>"HealLife" - How much health the item recovers when used.</description></item>
            <item><description>"HealMana" - How much mana the item recovers when used.</description></item>
            <item><description>"UseMana" - Tells how much mana the item consumes upon usage.</description></item>
            <item><description>"Placeable" - Tells if the item is placeable.</description></item>
            <item><description>"Ammo" - Tells if the item is ammo.</description></item>
            <item><description>"Consumable" - Tells if the item is consumable.</description></item>
            <item><description>"Material" - Tells if the item can be used to craft something.</description></item>
            <item><description>"Tooltip#" - A tooltip line of the item. # will be 0 for the first line, 1 for the second, etc.</description></item>
            <item><description>"EtherianManaWarning" - Warning about how the item can't be used without Etherian Mana until the Eternia Crystal has been defeated.</description></item>
            <item><description>"WellFedExpert" - In expert mode, tells that food increases life renegeration.</description></item>
            <item><description>"BuffTime" - Tells how long the item's buff lasts.</description></item>
            <item><description>"OneDropLogo" - The One Drop logo for yoyos.This is a specially-marked tooltip line that has no text.</description></item>
            <item><description>"PrefixDamage" - The damage modifier of the prefix.</description></item>
            <item><description>"PrefixSpeed" - The usage speed modifier of the prefix.</description></item>
            <item><description>"PrefixCritChance" - The critical strike chance modifier of the prefix.</description></item>
            <item><description>"PrefixUseMana" - The mana consumption modifier of the prefix.</description></item>
            <item><description>"PrefixSize" - The melee size modifier of the prefix.</description></item>
            <item><description>"PrefixShootSpeed" - The shootSpeed modifier of the prefix.</description></item>
            <item><description>"PrefixKnockback" - The knockback modifier of the prefix.</description></item>
            <item><description>"PrefixAccDefense" - The defense modifier of the accessory prefix.</description></item>
            <item><description>"PrefixAccMaxMana" - The maximum mana modifier of the accessory prefix.</description></item>
            <item><description>"PrefixAccCritChance" - The critical strike chance modifier of the accessory prefix.</description></item>
            <item><description>"PrefixAccDamage" - The damage modifier of the accessory prefix.</description></item>
            <item><description>"PrefixAccMoveSpeed" - The movement speed modifier of the accessory prefix.</description></item>
            <item><description>"PrefixAccMeleeSpeed" - The melee speed modifier of the accessory prefix.</description></item>
            <item><description>"SetBonus" - The set bonus description of the armor set.</description></item>
            <item><description>"Expert" - Tells whether the item is from expert-mode.</description></item>
            <item><description>"SpecialPrice" - Tells the alternate currency price of an item.</description></item>
            <item><description>"Price" - Tells the price of an item.</description></item>
            </list>
            </summary>
            <param name="mod">The mod instance</param>
            <param name="name">The name of the tooltip</param>
            <param name="text">The content of the tooltip</param>
        </member>
        <member name="M:Terraria.ModLoader.UI.ModBrowser.UIModBrowser.DownloadMods(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Enqueues a list of mods, if found on the browser (also used for ModPacks)
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Utilities.NPCSpawnHelper">
            <summary>
            This server as a central class to help modders spawn their npcs. It's basically the vanilla spawn code if-else chains condensed into objects. See ExampleMod for usages.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.WallLoader">
            <summary>
            This serves as the central class from which wall-related functions are supported and carried out.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.WallLoader.GetWall(System.Int32)">
            <summary>
            Gets the ModWall instance with the given type. If no ModWall with the given type exists, returns null.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Terraria.NPC.BossBar" -->
        <member name="M:Terraria.NPC.GetGlobalNPC``1(System.Boolean)">
            <summary> Gets the instance of the specified GlobalNPC type. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.IndexOutOfRangeException"/>
        </member>
        <member name="M:Terraria.NPC.GetGlobalNPC``1(``0)">
            <summary> Gets the local instance of the type of the specified GlobalNPC instance. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.NullReferenceException"/>
        </member>
        <member name="M:Terraria.NPC.TryGetGlobalNPC``1(``0@,System.Boolean)">
            <summary> Gets the instance of the specified GlobalNPC type. </summary>
        </member>
        <member name="M:Terraria.NPC.TryGetGlobalNPC``1(``0,``0@)">
            <summary> Safely attempts to get the local instance of the type of the specified GlobalNPC instance. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="M:Terraria.Player.QuickSpawnClonedItem(Terraria.Item,System.Int32)">
            <summary>
            Will spawn an item like QuickSpawnItem, but clones it (handy when you need to retain item infos)
            </summary>
            <param name="item">The item you want to be cloned</param>
            <param name="stack">The stack to give the item. Note that this will override maxStack if it's higher.</param>
        </member>
        <member name="M:Terraria.Player.UpdateVisibleAccessory(Terraria.Item)">
            <summary>
            Won't work with yoraiz0rEye as effect needs target item slot.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Terraria.Player.GetModPlayer``1">
            <summary> Gets the instance of the specified ModPlayer type. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.IndexOutOfRangeException"/>
        </member>
        <member name="M:Terraria.Player.GetModPlayer``1(``0)">
            <summary> Gets the local instance of the type of the specified ModPlayer instance. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.IndexOutOfRangeException"/>
            <exception cref="T:System.NullReferenceException"/>
        </member>
        <member name="M:Terraria.Player.GetCritChance``1">
            <summary>
            Gets the crit modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary> 
        </member>
        <member name="M:Terraria.Player.GetDamage``1">
            <summary>
            Gets the damage modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetKnockback``1">
            <summary>
            Gets the knockback modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetCritChance(Terraria.ModLoader.DamageClass)">
            <summary>
            Gets the crit modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetDamage(Terraria.ModLoader.DamageClass)">
            <summary>
            Gets the damage modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetKnockback(Terraria.ModLoader.DamageClass)">
            <summary>
            Gets the knockback modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="P:Terraria.Player.CurrentSceneEffect">
            <summary>
            Container for current SceneEffect client properties such as: Backgrounds, music, and water styling
            </summary>
        </member>
        <member name="F:Terraria.Player.modBiomeFlags">
            <summary>
            Stores whether or not the player is in a modbiome using boolean bits.
            </summary>
        </member>
        <member name="M:Terraria.Player.InModBiome(Terraria.ModLoader.ModBiome)">
            <summary> 
            Determines if the player is in specified ModBiome. This will throw exceptions on failure. 
            </summary>
            <exception cref="T:System.IndexOutOfRangeException"/>
            <exception cref="T:System.NullReferenceException"/>
        </member>
        <member name="P:Terraria.Player.ZonePurity">
            <summary>
            The zone property storing if the player is in the purity/forest biome. Updated in <see cref="M:Terraria.Player.UpdateBiomes"/>
            </summary>
        </member>
        <member name="M:Terraria.Player.InZonePurity">
            <summary>
            Calculates whether or not the player is in the purity/forest biome.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Terraria.Projectile.DamageType" -->
        <member name="M:Terraria.Projectile.GetGlobalProjectile``1(System.Boolean)">
            <summary> Gets the instance of the specified GlobalProjectile type. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.IndexOutOfRangeException"/>
        </member>
        <member name="M:Terraria.Projectile.GetGlobalProjectile``1(``0)">
            <summary> Gets the local instance of the type of the specified GlobalProjectile instance. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.NullReferenceException"/>
        </member>
        <member name="M:Terraria.Projectile.TryGetGlobalProjectile``1(``0@,System.Boolean)">
            <summary> Gets the instance of the specified GlobalProjectile type. </summary>
        </member>
        <member name="M:Terraria.Projectile.TryGetGlobalProjectile``1(``0,``0@)">
            <summary> Safely attempts to get the local instance of the type of the specified GlobalProjectile instance. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="F:Terraria.Recipe.ConsumptionRules.Alchemy">
            <summary> Gives 1/3 chance for every ingredient to not be consumed, if used at an alchemy table. (!) This behavior is already automatically given to all items that can be made at a placed bottle tile. </summary>
        </member>
        <member name="P:Terraria.Recipe.RecipeIndex">
            <summary>
            The index of the recipe in the Main.recipe array.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.AddIngredient(System.Int32,System.Int32)">
            <summary>
            Adds an ingredient to this recipe with the given item type and stack size. Ex: <c>recipe.AddIngredient(ItemID.IronAxe)</c>
            </summary>
            <param name="itemID">The item identifier.</param>
            <param name="stack">The stack.</param>
        </member>
        <member name="M:Terraria.Recipe.AddIngredient(Terraria.ModLoader.Mod,System.String,System.Int32)">
            <summary>
            Adds an ingredient to this recipe with the given item name from the given mod, and with the given stack stack. If the mod parameter is null, then it will automatically use an item from the mod creating this recipe.
            </summary>
            <param name="mod">The mod.</param>
            <param name="itemName">Name of the item.</param>
            <param name="stack">The stack.</param>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">The item " + itemName + " does not exist in mod " + mod.Name + ". If you are trying to use a vanilla item, try removing the first argument.</exception>
        </member>
        <member name="M:Terraria.Recipe.AddIngredient(Terraria.ModLoader.ModItem,System.Int32)">
            <summary>
            Adds an ingredient to this recipe of the given type of item and stack size.
            </summary>
            <param name="item">The item.</param>
            <param name="stack">The stack.</param>
        </member>
        <member name="M:Terraria.Recipe.AddIngredient``1(System.Int32)">
            <summary>
            Adds an ingredient to this recipe of the given type of item and stack size.
            </summary>
            <param name="item">The item.</param>
            <param name="stack">The stack.</param>
        </member>
        <member name="M:Terraria.Recipe.AddRecipeGroup(System.String,System.Int32)">
            <summary>
            Adds a recipe group ingredient to this recipe with the given RecipeGroup name and stack size. Vanilla recipe groups consist of "Wood", "IronBar", "PresurePlate", "Sand", and "Fragment".
            </summary>
            <param name="name">The name.</param>
            <param name="stack">The stack.</param>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">A recipe group with the name " + name + " does not exist.</exception>
        </member>
        <member name="M:Terraria.Recipe.AddRecipeGroup(System.Int32,System.Int32)">
            <summary>
            Adds a recipe group ingredient to this recipe with the given RecipeGroupID and stack size. Vanilla recipe group IDs can be found in Terraria.ID.RecipeGroupID and modded recipe group IDs will be returned from RecipeGroup.RegisterGroup.
            </summary>
            <param name="recipeGroupId">The RecipeGroupID.</param>
            <param name="stack">The stack.</param>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">A recipe group with the ID " + recipeGroupID + " does not exist.</exception>
        </member>
        <member name="M:Terraria.Recipe.AddRecipeGroup(Terraria.RecipeGroup,System.Int32)">
            <summary>
            Adds a recipe group ingredient to this recipe with the given RecipeGroup.
            </summary>
            <param name="recipeGroup">The RecipeGroup.</param>
        </member>
        <member name="M:Terraria.Recipe.AddTile(System.Int32)">
            <summary>
            Adds a required crafting station with the given tile type to this recipe. Ex: <c>recipe.AddTile(TileID.WorkBenches)</c>
            </summary>
            <param name="tileID">The tile identifier.</param>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">No tile has ID " + tileID</exception>
        </member>
        <member name="M:Terraria.Recipe.AddTile(Terraria.ModLoader.Mod,System.String)">
            <summary>
            Adds a required crafting station to this recipe with the given tile name from the given mod. If the mod parameter is null, then it will automatically use a tile from the mod creating this recipe.
            </summary>
            <param name="mod">The mod.</param>
            <param name="tileName">Name of the tile.</param>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">The tile " + tileName + " does not exist in mod " + mod.Name + ". If you are trying to use a vanilla tile, try using Recipe.AddTile(tileID).</exception>
        </member>
        <member name="M:Terraria.Recipe.AddTile(Terraria.ModLoader.ModTile)">
            <summary>
            Adds a required crafting station to this recipe of the given type of tile.
            </summary>
            <param name="tile">The tile.</param>
        </member>
        <member name="M:Terraria.Recipe.AddTile``1">
            <summary>
            Adds a required crafting station to this recipe of the given type of tile.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.AddCondition(Terraria.Localization.NetworkText,System.Predicate{Terraria.Recipe})">
            <summary>
            Sets a condition delegate that will determine whether or not the recipe will be to be available for the player to use. The condition can be unrelated to items or tiles (for example, biome or time).
            </summary>
            <param name="condition">The predicate delegate condition.</param>
            <param name="description">A description of this condition. Use NetworkText.FromKey, or NetworkText.FromLiteral for this.</param>
        </member>
        <member name="M:Terraria.Recipe.AddCondition(Terraria.Recipe.Condition[])">
            <summary>
            Adds an array of conditions that will determine whether or not the recipe will be to be available for the player to use. The conditions can be unrelated to items or tiles (for example, biome or time).
            </summary>
            <param name="conditions">An array of conditions.</param>
        </member>
        <member name="M:Terraria.Recipe.AddCondition(System.Collections.Generic.IEnumerable{Terraria.Recipe.Condition})">
            <summary>
            Adds a collectiom of conditions that will determine whether or not the recipe will be to be available for the player to use. The conditions can be unrelated to items or tiles (for example, biome or time).
            </summary>
            <param name="conditions">A collection of conditions.</param>
        </member>
        <member name="M:Terraria.Recipe.AddOnCraftCallback(Terraria.Recipe.OnCraftCallback)">
            <summary>
            Sets a callback that will allow you to make anything happen when the recipe is used to create an item.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.AddConsumeItemCallback(Terraria.Recipe.ConsumeItemCallback)">
            <summary>
            Sets a callback that allows you to determine how many of a certain ingredient is consumed when this recipe is used. Return the number of ingredients that will actually be consumed. By default returns numRequired.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.Register">
            <summary>
            Adds this recipe to the game. Call this after you have finished setting the result, ingredients, etc.
            </summary>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">A recipe without any result has been added.</exception>
        </member>
        <member name="M:Terraria.Social.Steam.WorkshopHelper.ModManager.Download(System.Collections.Generic.List{Terraria.ModLoader.UI.ModBrowser.UIModDownloadItem})">
            <summary>
            Downloads all UIModDownloadItems provided.
            </summary>
        </member>
        <member name="M:Terraria.Social.Steam.WorkshopHelper.ModManager.InnerDownload(Terraria.ModLoader.UI.DownloadManager.UIWorkshopDownload)">
            <summary>
            Updates and/or Downloads the Item specified when generating the ModManager Instance.
            </summary>
        </member>
        <member name="M:Terraria.Social.Steam.WorkshopHelper.QueryHelper.ReleaseWorkshopQuery">
            <summary>
            Ought be called to release the existing query when we are done with it. Frees memory associated with the handle.
            </summary>
        </member>
        <member name="M:Terraria.Utils.NextBool(Terraria.Utilities.UnifiedRandom,System.Int32)">
            <summary> Returns true 1 out of X times. </summary>
        </member>
        <member name="M:Terraria.Utils.NextBool(Terraria.Utilities.UnifiedRandom,System.Int32,System.Int32)">
            <summary> Returns true X out of Y times. </summary>
        </member>
        <member name="M:Terraria.Utils.SendBitArray(System.Collections.BitArray,System.IO.BinaryWriter)">
            <summary>
            Bit packs a BitArray in to a Byte Array and then sends the byte array
            </summary>
        </member>
        <member name="M:Terraria.Utils.ReceiveBitArray(System.Int32,System.IO.BinaryReader)">
            <summary>
            Receives the result of SendBitArray, and returns the corresponding BitArray
            </summary>
        </member>
        <member name="M:UwUPnP.Gateway.GetGenericPortMappingEntry(System.Int32)">
            <summary>2.4.14.GetGenericPortMappingEntry</summary>
        </member>
        <member name="T:UwUPnP.UPnP">
            <summary>
            A simple UPnP library
            See: https://github.com/Rartrin/UwUPnP
            </summary>
        </member>
    </members>
</doc>
